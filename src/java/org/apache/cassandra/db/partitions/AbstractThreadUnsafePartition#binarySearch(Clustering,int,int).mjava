    /**
     * Simple binary search for a given row (in the rows list).
     *
     * The return value has the exact same meaning that the one of Collections.binarySearch() but
     * we don't use the later because we're searching for a 'Clustering' in an array of 'Row' (and while
     * both are Clusterable, it's slightly faster to use the 'Clustering' comparison (see comment on
     * ClusteringComparator.rowComparator())).
     */
    private int binarySearch(Clustering clustering, int fromIndex, int toIndex)
    {
        ClusteringComparator comparator = metadata().comparator;
        int low = fromIndex;
        int mid = toIndex;
        int high = mid - 1;
        int result = -1;
        while (low <= high)
        {
            mid = (low + high) >> 1;
            if ((result = comparator.compare(clustering, rows.get(mid).clustering())) > 0)
                low = mid + 1;
            else if (result == 0)
                return mid;
            else
                high = mid - 1;
        }
        return -mid - (result < 0 ? 1 : 2);
    }

