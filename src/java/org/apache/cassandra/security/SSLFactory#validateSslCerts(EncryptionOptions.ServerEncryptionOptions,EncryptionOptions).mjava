    /**
     * Sanity checks all certificates to ensure we can actually load them
     */
    public static void validateSslCerts(EncryptionOptions.ServerEncryptionOptions serverOpts, EncryptionOptions clientOpts) throws IOException
    {
        try
        {
            // Ensure we're able to create both server & client SslContexts
            if (serverOpts != null && serverOpts.enabled)
            {
                createNettySslContext(serverOpts, true, SocketType.SERVER, openSslIsAvailable());
                createNettySslContext(serverOpts, true, SocketType.CLIENT, openSslIsAvailable());
            }
        }
        catch (Exception e)
        {
            throw new IOException("Failed to create SSL context using server_encryption_options!", e);
        }

        try
        {
            // Ensure we're able to create both server & client SslContexts
            if (clientOpts != null && clientOpts.enabled)
            {
                createNettySslContext(clientOpts, clientOpts.require_client_auth, SocketType.SERVER, openSslIsAvailable());
                createNettySslContext(clientOpts, clientOpts.require_client_auth, SocketType.CLIENT, openSslIsAvailable());
            }
        }
        catch (Exception e)
        {
            throw new IOException("Failed to create SSL context using client_encryption_options!", e);
        }
    }

