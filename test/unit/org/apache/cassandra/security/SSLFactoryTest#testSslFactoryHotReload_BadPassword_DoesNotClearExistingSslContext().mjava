    @Test
    public void testSslFactoryHotReload_BadPassword_DoesNotClearExistingSslContext() throws IOException,
                                                                                            InterruptedException
    {
        try
        {
            addKeystoreOptions(encryptionOptions);

            EncryptionOptions options = new ServerEncryptionOptions(encryptionOptions);
            options.enabled = true;

            SSLFactory.initHotReloading((ServerEncryptionOptions) options, options, true);
            SslContext oldCtx = SSLFactory.getSslContext(options, true, SSLFactory.SocketType.CLIENT, OpenSsl
                                                                                                          .isAvailable());
            File keystoreFile = new File(options.keystore);

            SSLFactory.checkCertFilesForHotReloading((ServerEncryptionOptions) options, options);
            Thread.sleep(5000);
            FileUtils.touch(keystoreFile);

            options.keystore_password = "bad password";
            SSLFactory.checkCertFilesForHotReloading((ServerEncryptionOptions) options, options);;
            SslContext newCtx = SSLFactory.getSslContext(options, true, SSLFactory.SocketType.CLIENT, OpenSsl
                                                                                                          .isAvailable());

            Assert.assertSame(oldCtx, newCtx);
        }
        catch (Exception e)
        {
            throw e;
        }
        finally
        {
            DatabaseDescriptor.loadConfig();
        }
    }

