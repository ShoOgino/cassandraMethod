    public static Mutation makeCreateKeyspaceMutation(KSMetaData keyspace, long timestamp, boolean withTablesAndTypesAndFunctions)
    {
        // Note that because Keyspaces is a COMPACT TABLE, we're really only setting static columns internally and shouldn't set any clustering.
        RowUpdateBuilder adder = new RowUpdateBuilder(Keyspaces, timestamp, keyspace.name);

        adder.add("durable_writes", keyspace.params.durableWrites);
        adder.add("strategy_class", keyspace.params.replication.klass.getName());
        adder.add("strategy_options", json(keyspace.params.replication.options));

        Mutation mutation = adder.build();

        if (withTablesAndTypesAndFunctions)
        {
            keyspace.tables.forEach(table -> addTableToSchemaMutation(table, timestamp, true, mutation));
            keyspace.types.forEach(type -> addTypeToSchemaMutation(type, timestamp, mutation));
            keyspace.functions.udfs().forEach(udf -> addFunctionToSchemaMutation(udf, timestamp, mutation));
            keyspace.functions.udas().forEach(uda -> addAggregateToSchemaMutation(uda, timestamp, mutation));
        }

        return mutation;
    }

