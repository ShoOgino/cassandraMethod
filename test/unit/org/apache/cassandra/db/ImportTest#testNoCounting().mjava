    @Test
    public void testNoCounting() throws Throwable
    {
        createTable("create table %s (id int primary key, d int)");
        Directories dirs = new Directories(getCurrentColumnFamilyStore().metadata(), Lists.newArrayList(new Directories.DataDirectory(new File("/tmp/1")),
                                                                                                        new Directories.DataDirectory(new File("/tmp/2")),
                                                                                                        new Directories.DataDirectory(new File("/tmp/3"))));
        for (int i = 0; i < 10; i++)
            execute("insert into %s (id, d) values (?, ?)", i, i);
        getCurrentColumnFamilyStore().forceBlockingFlush();
        Set<SSTableReader> toMove = getCurrentColumnFamilyStore().getLiveSSTables();
        getCurrentColumnFamilyStore().clearUnsafe();
        File dir = moveToBackupDir(toMove);

        MockCFS mock = new MockCFS(getCurrentColumnFamilyStore(), dirs);
        mock.loadNewSSTables(dir.toString(), false, false, false, false, false, false);
        assertEquals(1, mock.getLiveSSTables().size());
        for (SSTableReader sstable : mock.getLiveSSTables())
        {
            String expected = new File("/tmp/").getCanonicalPath();
            assertTrue("dir = "+sstable.descriptor.directory + " : "+expected , sstable.descriptor.directory.toString().startsWith(expected));
            assertTrue(sstable.descriptor.directory.toString().contains(getCurrentColumnFamilyStore().metadata.id.toHexString()));
        }
    }

