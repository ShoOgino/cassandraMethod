    public void doVerb(Message message)
    {
        byte[] bytes = (byte[])message.getMessageBody()[0];
        /* Obtain a Row Mutation Context from TLS */
        RowMutationContext rowMutationCtx = tls_.get();
        if ( rowMutationCtx == null )
        {
            rowMutationCtx = new RowMutationContext();
            tls_.set(rowMutationCtx);
        }

        rowMutationCtx.buffer_.reset(bytes, bytes.length);

        try
        {
            RowMutation rm = RowMutation.serializer().deserialize(rowMutationCtx.buffer_);
            logger_.debug("Applying " + rm);

            /* Check if there were any hints in this message */
            byte[] hintedBytes = message.getHeader(RowMutationMessage.hint_);
            if ( hintedBytes != null && hintedBytes.length > 0 )
            {
            	EndPoint hint = EndPoint.fromBytes(hintedBytes);
                logger_.debug("Adding hint for " + hint);
                /* add necessary hints to this mutation */
                RowMutation hintedMutation = new RowMutation(rm.table(), HintedHandOffManager.key_);
                hintedMutation.addHints(rm.key() + ":" + hint.getHost());
                hintedMutation.apply();
            }

            long start = System.currentTimeMillis();

            rowMutationCtx.row_.key(rm.key());
            rm.apply(rowMutationCtx.row_);

            long end = System.currentTimeMillis();

            WriteResponse response = new WriteResponse(rm.table(), rm.key(), true);
            Message responseMessage = WriteResponse.makeWriteResponseMessage(message, response);
            logger_.debug("Mutation applied in " + (end - start) + "ms.  Sending response to " +  message.getFrom() + " for key :" + rm.key());
            MessagingService.getMessagingInstance().sendOneWay(responseMessage, message.getFrom());
        }
        catch(ColumnFamilyNotDefinedException ex)
        {
            // TODO shouldn't this be checked before it's sent to us?
            logger_.warn("column family not defined, and no way to tell the client", ex);
        }
        catch (IOException e)
        {
            logger_.error("Error in row mutation", e);
        }
    }

