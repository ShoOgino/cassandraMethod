    /**
     * Swap row i and j.
     *
     * This is only used when we need to reorder rows because those were not added in clustering order,
     * which happens in {@link PartitionUpdate#sort} and {@link ArrayBackedPartition#create}. This method
     * is public only because {@code PartitionUpdate} needs to implement {@link Sorting.Sortable}, but
     * it should really only be used by subclasses (and with care) in practice.
     */
    public void swap(int i, int j)
    {
        int cs = metadata.clusteringColumns().size();
        for (int k = 0; k < cs; k++)
        {
            ByteBuffer tmp = clusterings[j * cs + k];
            clusterings[j * cs + k] = clusterings[i * cs + k];
            clusterings[i * cs + k] = tmp;
        }

        livenessInfos.swap(i, j);
        deletions.swap(i, j);
        data.swap(i, j);
    }

