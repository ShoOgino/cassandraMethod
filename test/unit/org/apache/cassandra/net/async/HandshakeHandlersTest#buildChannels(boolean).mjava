    private TestChannels buildChannels(boolean compress)
    {
        OutboundConnectionParams params = OutboundConnectionParams.builder()
                                                                  .connectionId(connectionId)
                                                                  .callback(this::nop)
                                                                  .mode(NettyFactory.Mode.MESSAGING)
                                                                  .compress(compress)
                                                                  .coalescingStrategy(Optional.empty())
                                                                  .protocolVersion(MessagingService.current_version)
                                                                  .backlogSupplier(this::nopBacklog)
                                                                  .build();
        OutboundHandshakeHandler outboundHandshakeHandler = new OutboundHandshakeHandler(params);
        EmbeddedChannel outboundChannel = new EmbeddedChannel(outboundHandshakeHandler);
        OutboundMessagingConnection omc = new OutboundMessagingConnection(connectionId, null, Optional.empty(), new AllowAllInternodeAuthenticator());
        omc.setTargetVersion(messagingVersion);
        outboundHandshakeHandler.setupPipeline(outboundChannel, messagingVersion);

        // remove the outbound handshake message from the outbound messages
        outboundChannel.outboundMessages().clear();

        InboundHandshakeHandler handler = new InboundHandshakeHandler(new TestAuthenticator(true));
        EmbeddedChannel inboundChannel = new EmbeddedChannel(handler);
        handler.setupMessagingPipeline(inboundChannel.pipeline(), REMOTE_ADDR, compress, messagingVersion);

        return new TestChannels(outboundChannel, inboundChannel);
    }

