    /**
     * This method submits an I/O for write where the write happens at
     * <i>position</i> within the file.
     * 
     * @param position to seek to within the file
     * @param onClose indicates if this method was invoked on a close().
     */
    private void doWrite(long position, boolean onClose)
    {          
        ByteBuffer buffer = ByteBuffer.wrap(buffer_);  
        int length = (int) (this.curr_ - this.lo_);
        buffer.limit(length);         
        Future<Integer> futurePtr = fileChannel_.write(buffer, position, null, new WriteCompletionHandler<Integer>());  
        if ( onClose )
        {
            try
            {
                /* this will block but will execute only on a close() */
                futurePtr.get();
            }
            catch (ExecutionException ex)
            {
                logger_.warn(LogUtil.throwableToString(ex));
            }
            catch (InterruptedException ex)
            {
                logger_.warn(LogUtil.throwableToString(ex));
            }
        }
        buffer_ = new byte[buffer_.length];
    }

