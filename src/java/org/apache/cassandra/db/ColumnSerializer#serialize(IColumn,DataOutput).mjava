    public void serialize(IColumn column, DataOutput dos)
    {
        assert column.name().remaining() > 0;
        FBUtilities.writeShortByteArray(column.name(), dos);
        try
        {
            if (column instanceof CounterColumn)
            {
                dos.writeByte(COUNTER_MASK);
                dos.writeLong(((CounterColumn)column).timestampOfLastDelete());
                FBUtilities.writeShortByteArray(ByteBuffer.wrap(((CounterColumn)column).partitionedCounter()), dos);
            }
            else if (column instanceof ExpiringColumn)
            {
                dos.writeByte(EXPIRATION_MASK);
                dos.writeInt(((ExpiringColumn) column).getTimeToLive());
                dos.writeInt(column.getLocalDeletionTime());
            }
            else
            {
                dos.writeByte((column.isMarkedForDelete()) ? DELETION_MASK : 0);
            }
            dos.writeLong(column.timestamp());
            FBUtilities.writeByteArray(column.value(), dos);
        }
        catch (IOException e)
        {
            throw new RuntimeException(e);
        }
    }

