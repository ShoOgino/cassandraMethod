    public ColumnOrSuperColumn get(String table, String key, ColumnPath column_path, int consistency_level)
    throws InvalidRequestException, NotFoundException
    {
        if (logger.isDebugEnabled())
            logger.debug("get");
        ThriftValidation.validateColumnPath(table, column_path);

        QueryPath path = new QueryPath(column_path.column_family, column_path.super_column);
        List<byte[]> nameAsList = Arrays.asList(column_path.column == null ? column_path.super_column : column_path.column);
        ColumnFamily cfamily = readColumnFamily(new SliceByNamesReadCommand(table, key, path, nameAsList), consistency_level);
        if (cfamily == null)
        {
            throw new NotFoundException();
        }
        Collection<IColumn> columns = null;
        if (column_path.super_column != null && column_path.column != null)
        {
            IColumn column = cfamily.getColumn(column_path.super_column);
            if (column != null)
            {
                columns = column.getSubColumns();
            }
        }
        else
        {
            columns = cfamily.getSortedColumns();
        }
        if (columns == null || columns.size() == 0)
        {
            throw new NotFoundException();
        }

        assert columns.size() == 1;
        IColumn column = columns.iterator().next();
        if (column.isMarkedForDelete())
        {
            throw new NotFoundException();
        }

        return column instanceof org.apache.cassandra.db.Column
               ? new ColumnOrSuperColumn(new Column(column.name(), column.value(), column.timestamp()), null)
               : new ColumnOrSuperColumn(null, new SuperColumn(column.name(), thriftifySubColumns(column.getSubColumns())));
    }

