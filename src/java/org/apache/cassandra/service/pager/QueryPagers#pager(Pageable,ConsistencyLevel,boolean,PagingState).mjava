    private static QueryPager pager(Pageable command, ConsistencyLevel consistencyLevel, boolean local, PagingState state)
    {
        if (command instanceof Pageable.ReadCommands)
        {
            List<ReadCommand> commands = ((Pageable.ReadCommands)command).commands;
            if (commands.size() == 1)
                return pager(commands.get(0), consistencyLevel, local, state);

            return new MultiPartitionPager(commands, consistencyLevel, local, state, ((Pageable.ReadCommands) command).limitForQuery);
        }
        else if (command instanceof ReadCommand)
        {
            return pager((ReadCommand)command, consistencyLevel, local, state);
        }
        else
        {
            assert command instanceof RangeSliceCommand;
            RangeSliceCommand rangeCommand = (RangeSliceCommand)command;
            if (rangeCommand.predicate instanceof NamesQueryFilter)
                return new RangeNamesQueryPager(rangeCommand, consistencyLevel, local, state);
            else
                return new RangeSliceQueryPager(rangeCommand, consistencyLevel, local, state);
        }
    }

