    private RangeSliceCommand getRangeCommand(List<ByteBuffer> variables) throws RequestValidationException
    {
        IDiskAtomFilter filter = makeFilter(variables);
        List<IndexExpression> expressions = getIndexExpressions(variables);
        // The LIMIT provided by the user is the number of CQL row he wants returned.
        // For NamesQueryFilter, this is the number of internal rows returned, since a NamesQueryFilter can only select one CQL row in a given internal row.
        // For SliceQueryFilter however, we want to have getRangeSlice to count the number of columns, not the number of keys. Then
        // SliceQueryFilter.collectReducedColumns will correctly columns having the same composite prefix using ColumnCounter.
        boolean maxIsColumns = filter instanceof SliceQueryFilter;
        return new RangeSliceCommand(keyspace(),
                                     columnFamily(),
                                     null,
                                     filter,
                                     getKeyBounds(variables),
                                     expressions,
                                     getLimit(),
                                     maxIsColumns,
                                     false);
    }

