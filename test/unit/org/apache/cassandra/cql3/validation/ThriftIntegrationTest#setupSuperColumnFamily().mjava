    @Before
    public void setupSuperColumnFamily() throws Throwable
    {
        final String denseTableName = createTableName();
        final String sparseTableName =  currentSparseTable();
        final String counterTableName = currentCounterTable();

        CfDef cfDef = new CfDef().setColumn_type("Super")
                                 .setSubcomparator_type(Int32Type.instance.toString())
                                 .setComparator_type(AsciiType.instance.toString())
                                 .setDefault_validation_class(AsciiType.instance.toString())
                                 .setKey_validation_class(AsciiType.instance.toString())
                                 .setKeyspace(KEYSPACE)
                                 .setName(denseTableName);

        CfDef sparseCfDef = new CfDef().setColumn_type("Super")
                                       .setComparator_type(AsciiType.instance.toString())
                                       .setSubcomparator_type(AsciiType.instance.toString())
                                       .setKey_validation_class(AsciiType.instance.toString())
                                       .setColumn_metadata(Arrays.asList(new ColumnDef(ByteBufferUtil.bytes("col1"), LongType.instance.toString()),
                                                                         new ColumnDef(ByteBufferUtil.bytes("col2"), LongType.instance.toString())))
                                       .setKeyspace(KEYSPACE)
                                       .setName(sparseTableName);

        CfDef counterCfDef = new CfDef().setColumn_type("Super")
                                        .setSubcomparator_type(AsciiType.instance.toString())
                                        .setComparator_type(AsciiType.instance.toString())
                                        .setDefault_validation_class(CounterColumnType.instance.toString())
                                        .setKey_validation_class(AsciiType.instance.toString())
                                        .setKeyspace(KEYSPACE)
                                        .setName(counterTableName);

        KsDef ksDef = new KsDef(KEYSPACE,
                                SimpleStrategy.class.getName(),
                                Arrays.asList(cfDef, sparseCfDef, counterCfDef));

        ksDef.setStrategy_options(Collections.singletonMap("replication_factor", "1"));

        Cassandra.Client client = getClient();
        client.system_add_keyspace(ksDef);
        client.set_keyspace(KEYSPACE);
    }

