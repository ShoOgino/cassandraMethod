    public StreamResultFuture stream(Set<InetAddress> toIgnore, StreamEventHandler... listeners)
    {
        client.init(keyspace);
        outputHandler.output("Established connection to initial hosts");

        StreamPlan plan = new StreamPlan("Bulk Load");

        Map<InetAddress, Collection<Range<Token>>> endpointToRanges = client.getEndpointToRangesMap();
        openSSTables(endpointToRanges);
        if (sstables.isEmpty())
        {
            // return empty result
            return plan.execute();
        }

        outputHandler.output(String.format("Streaming relevant part of %sto %s", names(sstables), endpointToRanges.keySet()));

        for (Map.Entry<InetAddress, Collection<Range<Token>>> entry : endpointToRanges.entrySet())
        {
            InetAddress remote = entry.getKey();
            if (toIgnore.contains(remote))
                continue;

            Collection<StreamSession.SSTableStreamingSections> endpointDetails = streamingDetails.get(remote);

            // transferSSTables assumes references have been acquired
            for (StreamSession.SSTableStreamingSections details : endpointDetails)
                details.sstable.acquireReference();

            plan.transferFiles(remote, streamingDetails.get(remote));
        }
        plan.listeners(this, listeners);
        return plan.execute();
    }

