    public BloomFilter(int numElements, double maxFalsePosProbability)
    {
        if (numElements < 0)
            throw new IllegalArgumentException("Number of elements must be "
                    + "non-negative.");
        BloomCalculations.BloomSpecification spec = BloomCalculations
                .computeBitsAndK(maxFalsePosProbability);
        // Add a small random number of bits so that even if the set
        // of elements hasn't changed, we'll get different false positives.
        count_ = numElements;
        size_ = numElements * spec.bitsPerElement + 20 + random_.nextInt(64);
        filter_ = new BitSet(size_);
        hashes_ = spec.K;
    }

