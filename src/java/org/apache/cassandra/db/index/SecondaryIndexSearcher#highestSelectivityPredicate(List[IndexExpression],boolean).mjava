    protected IndexExpression highestSelectivityPredicate(List<IndexExpression> clause, boolean includeInTrace)
    {
        IndexExpression best = null;
        int bestMeanCount = Integer.MAX_VALUE;
        Map<SecondaryIndex, Integer> candidates = new HashMap<>();

        for (IndexExpression expression : clause)
        {
            // skip columns belonging to a different index type
            if (!columns.contains(expression.column))
                continue;

            SecondaryIndex index = indexManager.getIndexForColumn(expression.column);
            if (index == null || index.getIndexCfs() == null || !index.supportsOperator(expression.operator))
                continue;

            int columns = index.getIndexCfs().getMeanColumns();
            candidates.put(index, columns);
            if (columns < bestMeanCount)
            {
                best = expression;
                bestMeanCount = columns;
            }
        }

        if (includeInTrace)
        {
            if (best == null)
                Tracing.trace("No applicable indexes found");
            else if (Tracing.isTracing())
                // pay for an additional threadlocal get() rather than build the strings unnecessarily
                Tracing.trace("Candidate index mean cardinalities are {}. Scanning with {}.",
                              FBUtilities.toString(candidates),
                              indexManager.getIndexForColumn(best.column).getIndexName());
        }
        return best;
    }

