    /*
     * In theory, the ObjectSizeEstimator should estimate the actual size of a
     * request, and MemoryAwareThreadPoolExecutor sets a memory limit on how
     * much memory we allow for request before blocking.
     *
     * However, the memory size used by a CQL query is not very intersting and
     * by no mean reflect the memory size it's execution will use (the interesting part).
     * Furthermore, we're mainly interested in limiting the number of unhandled requests that
     * piles up to implement some back-pressure, and for that, there is no real need to do
     * fancy esimation of request size. So we use a trivial estimator that just count the
     * number of request.
     *
     * We could get more fancy later ...
     */
    private static ObjectSizeEstimator sizeEstimator()
    {
        return new ObjectSizeEstimator()
        {
            public int estimateSize(Object o)
            {
                return 1;
            }
        };
    }

