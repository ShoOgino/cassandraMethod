    /**
     * Deserialize the index into a structure and return the number of bytes read.
     * @param tableName
     *@param in Input from which the serialized form of the index is read
     * @param columnIndexList the structure which is filled in with the deserialized index   @return number of bytes read from the input
     * @throws IOException
     */
	public static int deserializeIndex(String tableName, String cfName, DataInput in, List<ColumnIndexInfo> columnIndexList) throws IOException
	{
		/* read only the column index list */
		int columnIndexSize = in.readInt();
		int totalBytesRead = 4;

		/* read the indexes into a separate buffer */
		DataOutputBuffer indexOut = new DataOutputBuffer();
        /* write the data into buffer */
		indexOut.write(in, columnIndexSize);
		totalBytesRead += columnIndexSize;

		/* now deserialize the index list */
        DataInputBuffer indexIn = new DataInputBuffer();
        indexIn.reset(indexOut.getData(), indexOut.getLength());
        
        AbstractType comparator = DatabaseDescriptor.getComparator(tableName, cfName);

        while (indexIn.available() > 0)
        {
            // TODO this is all kinds of messed up
            ColumnIndexInfo cIndexInfo = new ColumnIndexInfo(comparator);
            cIndexInfo = cIndexInfo.deserialize(indexIn);
            columnIndexList.add(cIndexInfo);
        }

        return totalBytesRead;
	}

