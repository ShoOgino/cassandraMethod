    private void assertSplit(Token left, Token right, Random rand, int depth)
    {
        if (shouldStopRecursion(left, right))
        {
            System.out.println("Stop assertSplit at depth: " + depth);
            return;
        }

        double ratio = SPLIT_RATIO_MIN + (SPLIT_RATIO_MAX - SPLIT_RATIO_MIN) * rand.nextDouble();
        Token newToken = partitioner.split(left, right, ratio);

        assertEquals("For " + left + "," + right + ", new token: " + newToken,
                     ratio, left.size(newToken) / left.size(right), 0.1);

        assert new Range<Token>(left, right).contains(newToken)
            : "For " + left + "," + right + ": range did not contain new token:" + newToken;

        if (depth < 1)
            return;

        if (rand.nextBoolean())
            assertSplit(left, newToken, rand, depth-1);
        else
            assertSplit(newToken, right, rand, depth-1);
    }

