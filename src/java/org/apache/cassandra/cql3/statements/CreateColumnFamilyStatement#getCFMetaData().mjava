    /**
     * Returns a CFMetaData instance based on the parameters parsed from this
     * <code>CREATE</code> statement, or defaults where applicable.
     *
     * @return a CFMetaData instance corresponding to the values parsed from this statement
     * @throws InvalidRequestException on failure to validate parsed parameters
     */
    public CFMetaData getCFMetaData() throws InvalidRequestException
    {
        CFMetaData newCFMD;
        try
        {
            newCFMD = new CFMetaData(keyspace(),
                                     columnFamily(),
                                     ColumnFamilyType.Standard,
                                     comparator,
                                     null);

            newCFMD.defaultValidator(defaultValidator)
                   .columnMetadata(getColumns())
                   .keyValidator(keyValidator)
                   .keyAlias(keyAlias)
                   .columnAliases(columnAliases)
                   .valueAlias(valueAlias);

            properties.applyToCFMetadata(newCFMD);
        }
        catch (ConfigurationException e)
        {
            throw new InvalidRequestException(e.getMessage());
        }
        return newCFMD;
    }

