    @Test
    public void testSetAddMultiThread() throws InterruptedException
    {
        Random r = new Random();
        int threads = 16;
        int streamSize = 10000;
        List<Callable<Void>> tasks = new ArrayList<>(threads);
        final IntegerInterval.Set st = new IntegerInterval.Set();
        final IntegerInterval.Set mt = new IntegerInterval.Set();
        for (int i = 0; i < threads; ++i)
        {
            final int seed = r.nextInt();
            tasks.add(() -> {
                new Random(seed)
                    .ints(streamSize)
                    .forEach(v -> mt.add(v, v + 5));
                return null;
            });
            new Random(seed)
                .ints(streamSize)
                .forEach(v -> st.add(v, v + 5));
        }
        for (Future<?> f : Executors.newFixedThreadPool(threads).invokeAll(tasks))
            Futures.getUnchecked(f);
        assertEquals(st, mt);
    }

