    @Test
    public void testInvalidThriftCas() throws IOException, TException
    {
        // test we can insert if the index validates the expression:
        ByteBuffer key = ByteBufferUtil.bytes("valid");
        Column column = new Column(key).setValue(ByteBufferUtil.bytes("valid")).setTimestamp(System.currentTimeMillis());
        server.cas(key, CF_INDEXED, Collections.<Column>emptyList(), Collections.singletonList(column), ConsistencyLevel.LOCAL_SERIAL, ConsistencyLevel.ONE);

        // test we can't insert if the index doesn't validate the key:
        try
        {
            key = ByteBufferUtil.bytes("invalid");
            server.cas(key, CF_INDEXED, Collections.<Column>emptyList(), Collections.singletonList(column), ConsistencyLevel.LOCAL_SERIAL, ConsistencyLevel.ONE);
            fail("Query should have been invalid!");
        }
        catch (Exception e)
        {
            assertTrue(e instanceof org.apache.cassandra.thrift.InvalidRequestException);
        }

        // test we can't insert if the index doesn't validate the columns:
        try
        {
            key = ByteBufferUtil.bytes("valid");
            column.setValue(ByteBufferUtil.bytes("invalid"));
            server.cas(key, CF_INDEXED, Collections.<Column>emptyList(), Collections.singletonList(column), ConsistencyLevel.LOCAL_SERIAL, ConsistencyLevel.ONE);
            fail("Query should have been invalid!");
        }
        catch (Exception e)
        {
            assertTrue(e instanceof org.apache.cassandra.thrift.InvalidRequestException);
        }
    }

