    public <V> void testOneTimeout(Promise<V> promise, boolean setUncancellable)
    {
        Async async = new Async();
        if (setUncancellable)
            success(promise, Promise::setUncancellable, true);
        success(promise, Promise::isCancellable, !setUncancellable);
        async.failure(promise, p -> p.get(1L, TimeUnit.MILLISECONDS), TimeoutException.class);
        async.success(promise, p -> p.await(1L, TimeUnit.MILLISECONDS), false);
        async.success(promise, p -> p.await(1L), false);
        async.success(promise, p -> p.awaitUninterruptibly(1L, TimeUnit.MILLISECONDS), false);
        async.success(promise, p -> p.awaitUninterruptibly(1L), false);
        Uninterruptibles.sleepUninterruptibly(10L, TimeUnit.MILLISECONDS);
        async.verify();
    }

