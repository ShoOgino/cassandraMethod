    // Used by CQL2 only.
    public String getCQL2KeyName()
    {
        if (partitionKeyColumns.size() > 1)
            throw new IllegalStateException("Cannot acces column family with composite key from CQL < 3.0.0");

        try
        {
            // For compatibility sake, we uppercase if it's the default alias as we used to return it that way in resultsets.
            String str = ByteBufferUtil.string(partitionKeyColumns.get(0).name);
            return str.equalsIgnoreCase(DEFAULT_KEY_ALIAS) ? str.toUpperCase() : str;
        }
        catch (CharacterCodingException e)
        {
            throw new RuntimeException(e.getMessage(), e);
        }
    }

