    /*
     * This function executes the read protocol.
        // 1. Get the N nodes from storage service where the data needs to be
        // replicated
        // 2. Construct a message for read\write
         * 3. Set one of teh messages to get teh data and teh rest to get teh digest
        // 4. SendRR ( to all the nodes above )
        // 5. Wait for a response from atleast X nodes where X <= N and teh data node
         * 6. If the digest matches return teh data.
         * 7. else carry out read repair by getting data from all the nodes.
        // 5. return success
     * 
     */
    public static Row strongReadProtocol(String tablename, String key, String columnFamily, int start, int count) throws IOException, TimeoutException
    {       
        long startTime = System.currentTimeMillis();        
        // TODO: throw a thrift exception if we do not have N nodes
        ReadMessage readMessage = null;
        ReadMessage readMessageDigestOnly = null;
        if( start >= 0 && count < Integer.MAX_VALUE)
        {
            readMessage = new ReadMessage(tablename, key, columnFamily, start, count);
        }
        else
        {
            readMessage = new ReadMessage(tablename, key, columnFamily);
        }
        Message message = ReadMessage.makeReadMessage(readMessage);
        if( start >= 0 && count < Integer.MAX_VALUE)
        {
            readMessageDigestOnly = new ReadMessage(tablename, key, columnFamily, start, count);
        }
        else
        {
            readMessageDigestOnly = new ReadMessage(tablename, key, columnFamily);
        }
        readMessageDigestOnly.setIsDigestQuery(true);        
        Row row = doStrongReadProtocol(key, readMessage, readMessageDigestOnly);
        logger_.debug("readProtocol: " + (System.currentTimeMillis() - startTime) + " ms.");
        return row;
    }

