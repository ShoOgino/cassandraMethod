    private static void flushForRandomPartitioner(Map<String, ColumnFamily> columnFamilies) throws Throwable
    {
        SSTable ssTable = new SSTable("C:\\Engagements\\Cassandra", "Table-Test-1", PartitionerType.RANDOM);
        /* List of primary keys in sorted order */
        List<PrimaryKey> pKeys = PrimaryKey.create( columnFamilies.keySet() );
        DataOutputBuffer buffer = new DataOutputBuffer();
        /* Use this BloomFilter to decide if a key exists in a SSTable */
        BloomFilter bf = new BloomFilter(pKeys.size(), 15);
        for ( PrimaryKey pKey : pKeys )
        {
            buffer.reset();
            ColumnFamily columnFamily = columnFamilies.get(pKey.key());
            if ( columnFamily != null )
            {
                /* serialize the cf with column indexes */
                ColumnFamily.serializer2().serialize( columnFamily, buffer );
                /* Now write the key and value to disk */
                ssTable.append(pKey.key(), pKey.hash(), buffer);
                bf.fill(pKey.key());                
            }
        }
        ssTable.close(bf);
    }

