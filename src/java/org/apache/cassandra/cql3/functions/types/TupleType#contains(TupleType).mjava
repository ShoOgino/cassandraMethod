    /**
     * Return {@code true} if this tuple type contains the given tuple type, and {@code false}
     * otherwise.
     *
     * <p>A tuple type is said to contain another one if the latter has fewer components than the
     * former, but all of them are of the same type. E.g. the type {@code tuple<int, text>} is
     * contained by the type {@code tuple<int, text, double>}.
     *
     * <p>A contained type can be seen as a "partial" view of a containing type, where the missing
     * components are supposed to be {@code null}.
     *
     * @param other the tuple type to compare against the current one
     * @return {@code true} if this tuple type contains the given tuple type, and {@code false}
     * otherwise.
     */
    public boolean contains(TupleType other)
    {
        if (this.equals(other)) return true;
        if (other.types.size() > this.types.size()) return false;
        return types.subList(0, other.types.size()).equals(other.types);
    }

