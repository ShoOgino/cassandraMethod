    @Test
    public void testRemoveUnfinishedLeftovers_newLogFound() throws Throwable
    {
        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);
        SSTableReader sstableOld = sstable(cfs, 0, 128);
        SSTableReader sstableNew = sstable(cfs, 1, 128);

        // simulate tracking sstables with a failed transaction (new log file NOT deleted)
        TransactionLogs transactionLogs = new TransactionLogs(OperationType.COMPACTION, cfs.metadata);
        assertNotNull(transactionLogs);

        transactionLogs.trackNew(sstableNew);
        TransactionLogs.SSTableTidier tidier = transactionLogs.obsoleted(sstableOld);

        File tmpNewLog = copyToTmpFile(transactionLogs.getData().newLog().file);
        File tmpOldLog = copyToTmpFile(transactionLogs.getData().oldLog().file);

        Set<File> tmpFiles = new HashSet<>(TransactionLogs.getLogFiles(cfs.metadata));
        for (String p : sstableNew.getAllFilePaths())
            tmpFiles.add(new File(p));

        sstableNew.selfRef().release();
        sstableOld.selfRef().release();

        Assert.assertEquals(tmpFiles, TransactionLogs.getTemporaryFiles(cfs.metadata, sstableNew.descriptor.directory));

        // normally called at startup
        TransactionLogs.removeUnfinishedLeftovers(cfs.metadata);

        // sstable should not have been removed because the new log was found
        Directories directories = new Directories(cfs.metadata);
        Map<Descriptor, Set<Component>> sstables = directories.sstableLister().list();
        assertEquals(1, sstables.size());

        assertFiles(transactionLogs.getDataFolder(), new HashSet<>(sstableOld.getAllFilePaths()));
        assertFiles(transactionLogs.getLogsFolder(), Collections.<String>emptySet());

        tidier.run();

        // copy old transaction files contents back or transactionlogs will throw assertions
        Files.move(tmpNewLog.toPath(), transactionLogs.getData().newLog().file.toPath());
        Files.move(tmpOldLog.toPath(), transactionLogs.getData().oldLog().file.toPath());

        transactionLogs.close();
    }

