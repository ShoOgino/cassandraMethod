    private Table(String table) throws IOException
    {
        table_ = table;
        tableMetadata_ = Table.TableMetadata.instance(table);
        for (String columnFamily : tableMetadata_.getColumnFamilies())
        {
            columnFamilyStores_.put(columnFamily, ColumnFamilyStore.getColumnFamilyStore(table, columnFamily));
        }

        // check 10x as often as the lifetime, so we can exceed lifetime by 10% at most
        int checkMs = DatabaseDescriptor.getMemtableLifetimeMS() / 10;
        flushTimer_.schedule(new TimerTask()
        {
            public void run()
            {
                for (ColumnFamilyStore cfs : columnFamilyStores_.values())
                {
                    try
                    {
                        cfs.forceFlushIfExpired();
                    }
                    catch (IOException e)
                    {
                        throw new RuntimeException(e);
                    }
                }
            }
        }, checkMs, checkMs);
    }

