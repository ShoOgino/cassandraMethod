    private static RandomTree randomTreeByCopy(int minSize, int maxSize, int maxIntegerValue, Random random)
    {
        assert minSize > 3;
        TreeSet<Integer> canonical = new TreeSet<>();

        int targetSize = random.nextInt(maxSize - minSize) + minSize;
        int curSize = 0;
        while (curSize < targetSize)
        {
            Integer next = random.nextInt(maxIntegerValue);
            if (canonical.add(next))
                ++curSize;
        }
        return new RandomTree(canonical, BTreeSet.<Integer>wrap(BTree.build(canonical, UpdateFunction.noOp()), naturalOrder()), random);
    }

