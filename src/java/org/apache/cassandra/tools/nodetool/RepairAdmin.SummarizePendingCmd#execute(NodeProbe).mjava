        protected void execute(NodeProbe probe)
        {
            List<CompositeData> cds = probe.getRepairServiceProxy().getPendingStats(schemaArgs, getRangeString(startToken, endToken));
            List<PendingStats> stats = new ArrayList<>(cds.size());
            cds.forEach(cd -> stats.add(PendingStats.fromComposite(cd)));

            stats.sort((l, r) -> {
                int cmp = l.keyspace.compareTo(r.keyspace);
                if (cmp != 0)
                    return cmp;

                return l.table.compareTo(r.table);
            });

            List<String> header = Lists.newArrayList("keyspace", "table", "total");
            if (verbose)
            {
                header.addAll(Lists.newArrayList("pending", "finalized", "failed"));
            }

            List<List<String>> rows = new ArrayList<>(stats.size() + 1);
            rows.add(header);

            for (PendingStats stat : stats)
            {
                List<String> row = new ArrayList<>(header.size());

                row.add(stat.keyspace);
                row.add(stat.table);
                row.add(stat.total.sizeString());
                if (verbose)
                {
                    row.add(stat.pending.sizeString());
                    row.add(stat.finalized.sizeString());
                    row.add(stat.failed.sizeString());
                }
                rows.add(row);
            }

            printTable(rows);
        }

