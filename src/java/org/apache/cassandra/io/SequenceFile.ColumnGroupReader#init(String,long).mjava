        private void init(String startColumn, long position) throws IOException
        {
            String keyInDisk = null;
            if (seekTo(position) >= 0)
                keyInDisk = file_.readUTF();

            if ( keyInDisk != null && keyInDisk.equals(key_))
            {
                /* read off the size of this row */
                int dataSize = file_.readInt();
                /* skip the bloomfilter */
                int totalBytesRead = IndexHelper.skipBloomFilter(file_);
                /* read off the index flag, it has to be true */
                boolean hasColumnIndexes = file_.readBoolean();
                totalBytesRead += 1;

                /* read the index */
                List<IndexHelper.ColumnIndexInfo> colIndexList = new ArrayList<IndexHelper.ColumnIndexInfo>();
                if (hasColumnIndexes)
                    totalBytesRead += IndexHelper.deserializeIndex(null, cfName_, file_, colIndexList);

                /* need to do two things here.
                 * 1. move the file pointer to the beginning of the list of stored columns
                 * 2. calculate the size of all columns */
                String cfName = file_.readUTF();
                localDeletionTime_ = file_.readInt();
                markedForDeleteAt_ = file_.readLong();
                int totalNumCols = file_.readInt();
                allColumnsSize_ = dataSize - (totalBytesRead + utfPrefix_ + cfName.length() + 4 + 8 + 4);

                columnStartPosition_ = file_.getFilePointer();
                columnIndexList_ = getFullColumnIndexList(colIndexList, totalNumCols);

                int index = Collections.binarySearch(columnIndexList_, new IndexHelper.ColumnNameIndexInfo(startColumn));
                curRangeIndex_ = index < 0 ? (++index) * (-1) - 1 : index;
            }
            else
            {
                /* no keys found in this file because of a false positive in BF */
                curRangeIndex_ = -1;
                columnIndexList_ = new ArrayList<IndexHelper.ColumnIndexInfo>();
            }
        }

