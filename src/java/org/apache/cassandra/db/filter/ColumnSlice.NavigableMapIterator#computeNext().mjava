        protected Column computeNext()
        {
            if (currentSlice == null)
            {
                if (idx >= slices.length)
                    return endOfData();

                ColumnSlice slice = slices[idx++];
                // Note: we specialize the case of start == "" and finish = "" because it is slightly more efficient, but also they have a specific
                // meaning (namely, they always extend to the beginning/end of the range).
                if (slice.start.isEmpty())
                {
                    if (slice.finish.isEmpty())
                        currentSlice = map.values().iterator();
                    else
                        currentSlice = map.headMap(new FakeCell(slice.finish), true).values().iterator();
                }
                else if (slice.finish.isEmpty())
                {
                    currentSlice = map.tailMap(new FakeCell(slice.start), true).values().iterator();
                }
                else
                {
                    currentSlice = map.subMap(new FakeCell(slice.start), true, new FakeCell(slice.finish), true).values().iterator();
                }
            }

            if (currentSlice.hasNext())
                return currentSlice.next();

            currentSlice = null;
            return computeNext();
        }

