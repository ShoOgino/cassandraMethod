    @Test
    public void testTimeSort() throws IOException, ExecutionException, InterruptedException
    {
        Table table = Table.open("Keyspace1");
        ColumnFamilyStore cfStore = table.getColumnFamilyStore("StandardLong1");

        for (int i = 900; i < 1000; ++i)
        {
            RowMutation rm = new RowMutation("Keyspace1", ByteBuffer.wrap(Integer.toString(i).getBytes()));
            for (int j = 0; j < 8; ++j)
            {
                rm.add(new QueryPath("StandardLong1", null, getBytes(j * 2)), ByteBufferUtil.bytes("a"), j * 2);
            }
            rm.apply();
        }

        validateTimeSort(table);

        cfStore.forceBlockingFlush();
        validateTimeSort(table);

        // interleave some new data to test memtable + sstable
        DecoratedKey key = Util.dk("900");
        RowMutation rm = new RowMutation("Keyspace1", key.key);
        for (int j = 0; j < 4; ++j)
        {
            rm.add(new QueryPath("StandardLong1", null, getBytes(j * 2 + 1)), ByteBufferUtil.bytes("b"), j * 2 + 1);
        }
        rm.apply();
        // and some overwrites
        rm = new RowMutation("Keyspace1", key.key);
        rm.add(new QueryPath("StandardLong1", null, getBytes(0)), ByteBufferUtil.bytes("c"), 100);
        rm.add(new QueryPath("StandardLong1", null, getBytes(10)), ByteBufferUtil.bytes("c"), 100);
        rm.apply();

        // verify
        ColumnFamily cf = cfStore.getColumnFamily(key, new QueryPath("StandardLong1"), getBytes(0), ByteBufferUtil.EMPTY_BYTE_BUFFER, false, 1000);
        Collection<IColumn> columns = cf.getSortedColumns();
        assertEquals(12, columns.size());
        Iterator<IColumn> iter = columns.iterator();
        IColumn column;
        for (int j = 0; j < 8; j++)
        {
            column = iter.next();
            assert column.name().equals(getBytes(j));
        }
        TreeSet<ByteBuffer> columnNames = new TreeSet<ByteBuffer>(LongType.instance);
        columnNames.add(getBytes(10));
        columnNames.add(getBytes(0));
        cf = cfStore.getColumnFamily(QueryFilter.getNamesFilter(Util.dk("900"), new QueryPath("StandardLong1"), columnNames));
        assert "c".equals(new String(cf.getColumn(getBytes(0)).value().array()));
        assert "c".equals(new String(cf.getColumn(getBytes(10)).value().array()));
    }

