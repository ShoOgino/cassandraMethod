    // finds the last (-offset) decorated key that can be guaranteed to occur fully in the index file before the provided file position
    public DecoratedKey getMaxReadableKey(long position, int offset)
    {
        int i = Collections.binarySearch(positions, position);
        if (i < 0)
        {
            i = -1 - i;
            if (i == positions.size())
                i -= 2;
            else
                i -= 1;
        }
        else
            i -= 1;
        i -= offset;
        // we don't want to return any key if there's only 1 item in the summary, to make sure the sstable range is non-empty
        if (i <= 0)
            return null;
        return keys.get(i);
    }

