    @Ignore("Only used to ")
    @Test
    public void generateCqlStatements() throws InterruptedException
    {
        StringWriter sw = new StringWriter();
        PrintWriter pw = new PrintWriter(sw);

        pw.println("DROP TABLE sstableheaderfixtest;");
        pw.println();
        pw.println("CREATE TYPE i_udt (a text, b text);");
        pw.println("CREATE TYPE f_udt (a text, b text);");
        pw.println("CREATE TYPE mc_udt (a text, b text);");
        pw.println();
        pw.println("CREATE TABLE sstableheaderfixtest (");
        pw.print("  id int PRIMARY KEY");
        for (TypeDef typeDef : allTypes)
        {
            String cname = typeDef.cqlTypeString.replaceAll("[, <>]", "_");
            pw.printf(",%n  %s %s", cname, typeDef.cqlTypeString);
        }
        pw.println(");");
        pw.println();

        pw.printf("INSERT INTO sstableheaderfixtest%n  (id");
        for (TypeDef typeDef : allTypes)
        {
            String cname = typeDef.cqlTypeString.replaceAll("[, <>]", "_");
            pw.printf(",%n    %s", cname);
        }
        pw.printf(")%n  VALUES%n  (1");
        for (TypeDef typeDef : allTypes)
        {
            pw.printf(",%n    %s", typeDef.cqlValue);
        }
        pw.println(");");

        pw.println();
        pw.println();
        pw.println("-- Run tools/bin/sstablemetadata data/data/<keyspace>/<table>/*-Data.db to show the sstable");
        pw.println("-- serialization-header (types not shown in the C* 3.0 variant of the sstablemetadata tool)");

        sw.flush();

        System.out.println(sw.toString());

        Thread.sleep(1000);
    }

