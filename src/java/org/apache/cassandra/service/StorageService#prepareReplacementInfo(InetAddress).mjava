    private synchronized UUID prepareReplacementInfo(InetAddress replaceAddress) throws ConfigurationException
    {
        logger.info("Gathering node replacement information for {}", DatabaseDescriptor.getReplaceAddress());
        Gossiper.instance.doShadowRound();
        // as we've completed the shadow round of gossip, we should be able to find the node we're replacing
        if (Gossiper.instance.getEndpointStateForEndpoint(replaceAddress) == null)
            throw new RuntimeException(String.format("Cannot replace_address %s because it doesn't exist in gossip", replaceAddress));

        try
        {
            VersionedValue tokensVersionedValue = Gossiper.instance.getEndpointStateForEndpoint(replaceAddress).getApplicationState(ApplicationState.TOKENS);
            if (tokensVersionedValue == null)
                throw new RuntimeException(String.format("Could not find tokens for %s to replace", replaceAddress));

            bootstrapTokens = TokenSerializer.deserialize(tokenMetadata.partitioner, new DataInputStream(new ByteArrayInputStream(tokensVersionedValue.toBytes())));
        }
        catch (IOException e)
        {
            throw new RuntimeException(e);
        }

        // we'll use the replacee's host Id as our own so we receive hints, etc
        UUID localHostId = Gossiper.instance.getHostId(replaceAddress);
        SystemKeyspace.setLocalHostId(localHostId);
        Gossiper.instance.resetEndpointStateMap(); // clean up since we have what we need
        return localHostId;
    }

