    /**
     * Increments the count of the bucket closest to n, rounding UP.
     *
     * @param value the data point to add to the histogram
     */
    public void update(long value)
    {
        long now = clock.getTime();
        rescaleIfNeeded(now);

        int index = Arrays.binarySearch(bucketOffsets, value);
        if (index < 0)
        {
            // inexact match, take the first bucket higher than n
            index = -index - 1;
        }
        // else exact match; we're good

        lockForRegularUsage();

        try
        {
            decayingBuckets.getAndAdd(index, forwardDecayWeight(now));
        }
        finally
        {
            unlockForRegularUsage();
        }

        buckets.getAndIncrement(index);
    }

