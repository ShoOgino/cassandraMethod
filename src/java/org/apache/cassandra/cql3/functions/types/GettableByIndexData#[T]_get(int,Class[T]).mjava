    /**
     * Returns the {@code i}th value converted to the given Java type.
     *
     * <p>This method uses the {@link CodecRegistry} to find a codec to convert the underlying CQL
     * type to the given Java type.
     *
     * <p>If the target type is generic, use {@link #get(int, TypeToken)}.
     *
     * <p>Implementation note: the actual object returned by this method will depend on the {@link
     * TypeCodec codec} being used; therefore, callers should make no assumptions concerning its
     * mutability nor its thread-safety. Furthermore, the behavior of this method in respect to CQL
     * {@code NULL} values is also codec-dependent; by default, a CQL {@code NULL} value translates to
     * {@code null} for simple CQL types, UDTs and tuples, and to empty collections for all CQL
     * collection types.
     *
     * @param i           the index to retrieve.
     * @param targetClass The Java type the value should be converted to.
     * @return the value of the {@code i}th value converted to the given Java type.
     * @throws IndexOutOfBoundsException if {@code i} is not a valid index for this object.
     * @throws CodecNotFoundException    if there is no registered codec to convert the element's CQL
     *                                   type to {@code targetClass}.
     */
    <T> T get(int i, Class<T> targetClass);

