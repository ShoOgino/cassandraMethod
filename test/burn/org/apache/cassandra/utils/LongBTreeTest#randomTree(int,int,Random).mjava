    private static RandomTree randomTree(int minSize, int maxSize, Random random)
    {
        // perform most of our tree constructions via update, as this is more efficient; since every run uses this
        // we test builder disproportionately more often than if it had its own test anyway
        int maxIntegerValue = random.nextInt(Integer.MAX_VALUE - 1) + 1;
        float f = random.nextFloat() / generateTreeTotalChance;
        f -= generateTreeByUpdateChance;
        if (f < 0)
            return randomTreeByUpdate(minSize, maxSize, maxIntegerValue, random);
        f -= generateTreeByCopyChance;
        if (f < 0)
            return randomTreeByCopy(minSize, maxSize, maxIntegerValue, random);
        return randomTreeByBuilder(minSize, maxSize, maxIntegerValue, random);
    }

