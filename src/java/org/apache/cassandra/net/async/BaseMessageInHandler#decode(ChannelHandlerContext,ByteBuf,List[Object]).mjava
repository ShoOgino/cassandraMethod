    // redeclared here to make the method public (for testing)
    @VisibleForTesting
    public void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception
    {
        if (state == State.CLOSED)
        {
            in.skipBytes(in.readableBytes());
            return;
        }

        try
        {
            handleDecode(ctx, in, out);
        }
        catch (Exception e)
        {
            // prevent any future attempts at reading messages from any inbound buffers, as we're already in a bad state
            state = State.CLOSED;

            // force the buffer to appear to be consumed, thereby exiting the ByteToMessageDecoder.callDecode() loop,
            // and other paths in that class, more efficiently
            in.skipBytes(in.readableBytes());

            // throwing the exception up causes the ByteToMessageDecoder.callDecode() loop to exit. if we don't do that,
            // we'll keep trying to process data out of the last received buffer (and it'll be really, really wrong)
            throw e;
        }
    }

