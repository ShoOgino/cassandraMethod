    @Test
    public void testFileRemoval() throws InterruptedException
    {
        Keyspace keyspace = Keyspace.open(KEYSPACE);
        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);
        truncate(cfs);
        assertEquals(0, cfs.metric.liveDiskSpaceUsed.getCount());

        File dir = cfs.directories.getDirectoryForNewSSTables();
        try (SSTableWriter writer = getWriter(cfs, dir))
        {
            for (int i = 0; i < 10000; i++)
            {
                RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 1,  random(i, 10));

                PartitionUpdate update = null;

                for (int j = 0; j < 100; j++)
                {
                    builder.clustering("" + j).add("val", ByteBuffer.allocate(1000));
                    update = builder.buildUpdate();
                }

                writer.append(update.unfilteredIterator());
            }

            SSTableReader s = writer.setMaxDataAge(1000).openEarly();
            assert s != null;
            assertFileCounts(dir.list(), 2, 2);
            for (int i = 10000; i < 20000; i++)
            {
                RowUpdateBuilder builder = new RowUpdateBuilder(cfs.metadata, 1,  random(i, 10));

                PartitionUpdate update = null;

                for (int j = 0; j < 100; j++)
                {
                    builder.clustering("" + j).add("val", ByteBuffer.allocate(1000));
                    update = builder.buildUpdate();
                }

                writer.append(update.unfilteredIterator());
            }
            SSTableReader s2 = writer.setMaxDataAge(1000).openEarly();
            assertTrue(s.last.compareTo(s2.last) < 0);
            assertFileCounts(dir.list(), 2, 2);
            s.markObsolete(cfs.getTracker());
            s.selfRef().release();
            s2.selfRef().release();
            // These checks don't work on Windows because the writer has the channel still
            // open till .abort() is called (via the builder)
            if (!FBUtilities.isWindows())
            {
                SSTableDeletingTask.waitForDeletions();
                assertFileCounts(dir.list(), 0, 2);
            }
            writer.abort();
            SSTableDeletingTask.waitForDeletions();
            int datafiles = assertFileCounts(dir.list(), 0, 0);
            assertEquals(datafiles, 0);
            validateCFS(cfs);
        }
    }

