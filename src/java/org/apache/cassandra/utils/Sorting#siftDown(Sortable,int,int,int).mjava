    // siftDown implements the heap property on data[lo, hi).
    // first is an offset into the array where the root of the heap lies.
    private static void siftDown(Sortable data, int lo, int hi, int first)
    {
        int root = lo;
        while (true)
        {
            int child = 2*root + 1;
            if (child >= hi)
                return;

            if (child + 1 < hi && data.compare(first+child, first+child+1) < 0)
                child++;

            if (data.compare(first+root, first+child) >= 0)
                return;

            data.swap(first+root, first+child);
            root = child;
        }
    }

