    /**
     * Sets the {@code i}th value to the provided value, converted using the given {@link TypeCodec}.
     *
     * <p>This method entirely bypasses the {@link CodecRegistry} and forces the driver to use the
     * given codec instead. This can be useful if the codec would collide with a previously registered
     * one, or if you want to use the codec just once without registering it.
     *
     * <p>It is the caller's responsibility to ensure that the given codec {@link
     * TypeCodec#accepts(DataType) accepts} the underlying CQL type; failing to do so may result in
     * {@link InvalidTypeException}s being thrown.
     *
     * @param i     the index of the value to set.
     * @param v     the value to set; may be {@code null}.
     * @param codec The {@link TypeCodec} to use to serialize the value; may not be {@code null}.
     * @return this object.
     * @throws InvalidTypeException      if the given codec does not {@link TypeCodec#accepts(DataType)
     *                                   accept} the underlying CQL type.
     * @throws IndexOutOfBoundsException if {@code i} is not a valid index for this object.
     */
    <V> T set(int i, V v, TypeCodec<V> codec);

