    /**
     * Builds a new instance from a number of milliseconds since January 1st, 1970 GMT. Note that if
     * the given number does not correspond to a whole number of days, it will be rounded towards 0.
     *
     * @param millisSinceEpoch the number of milliseconds since January 1st, 1970 GMT.
     * @return the new instance.
     * @throws IllegalArgumentException if the date is not in the range [-5877641-06-23;
     *                                  5881580-07-11].
     */
    static LocalDate fromMillisSinceEpoch(long millisSinceEpoch)
    throws IllegalArgumentException
    {
        long daysSinceEpoch = TimeUnit.MILLISECONDS.toDays(millisSinceEpoch);
        checkArgument(
        daysSinceEpoch >= Integer.MIN_VALUE && daysSinceEpoch <= Integer.MAX_VALUE,
        "Date should be in the range [-5877641-06-23; 5881580-07-11]");

        return new LocalDate((int) daysSinceEpoch);
    }

