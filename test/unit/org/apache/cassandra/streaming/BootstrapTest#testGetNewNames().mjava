    @Test
    public void testGetNewNames() throws IOException
    {
        Descriptor desc = Descriptor.fromFilename(new File("Keyspace1", "Standard1-500-Data.db").toString());
        PendingFile[] pendingFiles = new PendingFile[]{ new PendingFile(desc, "Data.db", Arrays.asList(new Pair<Long,Long>(0L, 1L))) };
        StreamInitiateVerbHandler bivh = new StreamInitiateVerbHandler();

        // map the input (remote) contexts to output (local) contexts
        Map<PendingFile, PendingFile> mapping = bivh.getContextMapping(pendingFiles);
        assertEquals(pendingFiles.length, mapping.size());
        for (PendingFile inContext : pendingFiles)
        {
            PendingFile outContext = mapping.get(inContext);
            // filename and generation are expected to have changed
            assert !inContext.getFilename().equals(outContext.getFilename());

            // nothing else should
            assertEquals(inContext.component, outContext.component);
            assertEquals(inContext.desc.ksname, outContext.desc.ksname);
            assertEquals(inContext.desc.cfname, outContext.desc.cfname);
        }
    }

