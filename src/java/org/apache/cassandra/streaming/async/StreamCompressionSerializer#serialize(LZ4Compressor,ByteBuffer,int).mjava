    /**
     * @return A buffer with decompressed data.
     */
    public ByteBuf serialize(LZ4Compressor compressor, ByteBuffer in, int version)
    {
        final int uncompressedLength = in.remaining();
        int maxLength = compressor.maxCompressedLength(uncompressedLength);
        ByteBuf out = allocator.directBuffer(maxLength);
        try
        {
            ByteBuffer compressedNioBuffer = out.nioBuffer(HEADER_LENGTH, maxLength - HEADER_LENGTH);
            compressor.compress(in, compressedNioBuffer);
            final int compressedLength = compressedNioBuffer.position();
            out.setInt(0, compressedLength);
            out.setInt(4, uncompressedLength);
            out.writerIndex(HEADER_LENGTH + compressedLength);
        }
        catch (Exception e)
        {
            if (out != null)
                out.release();
        }
        return out;
    }

