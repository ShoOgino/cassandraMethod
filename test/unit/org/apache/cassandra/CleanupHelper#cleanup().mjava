    public static void cleanup()
    {
        // we clean the fs twice, once to start with (so old data files don't get stored by anything static if this is the first run)
        // and once after flushing stuff (to try to clean things out if it is not.)  part #2 seems to be less than perfect.
        String[] directoryNames = {
                DatabaseDescriptor.getLogFileLocation(),
        };

        // try to delete the directories themselves too. don't panic if this fails. it probably means that the process
        // doesn't have permissions to do so, or it contains non-cassandra generated files that were intentionally
        // put there.

        for (String dirName : directoryNames)
        {
            File dir = new File(dirName);
            if (!dir.exists())
            {
                throw new RuntimeException("No such directory: " + dir.getAbsolutePath());
            }
            for (File f : dir.listFiles())
            {
                if (!f.delete())
                {
                    logger.error("could not delete " + f);
                }
            }

            if (!dir.delete())
                logger.warn("could not delete " + dir.getPath());
        }

        // cleanup data directory which are stored as data directory/table/data files
        for (String dirName : DatabaseDescriptor.getAllDataFileLocations())
        {
            File dir = new File(dirName);
            if (!dir.exists())
            {
                throw new RuntimeException("No such directory: " + dir.getAbsolutePath());
            }
            for (File tableFile : dir.listFiles())
            {
                // table directory
                if (tableFile.isDirectory()) {
                    for (File dataFile : tableFile.listFiles()) {
                        if (!dataFile.delete()) {
                            logger.error("could not delete " + dataFile);
                        }
                    }
                }
                if (!tableFile.delete())
                    logger.warn("could not delete " + dir.getPath());
            }

            if (!dir.delete())
                logger.warn("could not delete " + dir.getPath());
        }
    }

