    /*
     * An iterator over all column definitions but that respect the order of a SELECT *.
     * This also "hide" the clustering/regular columns for a non-CQL3 non-dense table for backward compatibility
     * sake.
     */
    public Iterator<ColumnMetadata> allColumnsInSelectOrder()
    {
        boolean isStaticCompactTable = isStaticCompactTable();
        boolean noNonPkColumns = isCompactTable() && CompactTables.hasEmptyCompactValue(this);

        Iterator<ColumnMetadata> partitionKeyIter = partitionKeyColumns.iterator();
        Iterator<ColumnMetadata> clusteringIter =
                isStaticCompactTable ? Collections.emptyIterator() : clusteringColumns.iterator();
        Iterator<ColumnMetadata> otherColumns =
                noNonPkColumns
                      ? Collections.emptyIterator()
                      : (isStaticCompactTable ? staticColumns().selectOrderIterator()
                                              : regularAndStaticColumns.selectOrderIterator());

        return columnsIterator(partitionKeyIter, clusteringIter, otherColumns);
    }

