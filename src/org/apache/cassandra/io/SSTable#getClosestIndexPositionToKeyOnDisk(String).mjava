    /*
     * Given a key we are interested in this method gets the
     * closest index before the key on disk.
     *
     *  param @ key - key we are interested in.
     *  return position of the closest index before the key
     *  on disk or -1 if this key is not on disk.
    */
    private long getClosestIndexPositionToKeyOnDisk(String key)
    {
        long position = -1L;
        List<KeyPositionInfo> indexInfo = indexMetadataMap_.get(dataFile_);
        int size = indexInfo.size();
        int index = Collections.binarySearch(indexInfo, new KeyPositionInfo(key));
        if ( index < 0 )
        {
            /*
             * We are here which means that the requested
             * key is not an index.
            */
            index = (++index)*(-1);
            /* this means key is not present at all */
            if ( index >= size )
                return position;
            /* a scan is in order. */
            position = (index == 0) ? 0 : indexInfo.get(index - 1).position();
        }
        else
        {
            /*
             * If we are here that means the key is in the index file
             * and we can retrieve it w/o a scan. In reality we would
             * like to have a retreive(key, fromPosition) but for now
             * we use scan(start, start + 1) - a hack.
            */
            position = indexInfo.get(index).position();
        }
        return position;
    }

