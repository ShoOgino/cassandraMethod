    /**
     * This function will calculate the difference between 2 rows
     * and return the resultant row. This assumes that the row that
     * is being submitted is a super set of the current row so
     * it only calculates additional
     * difference and does not take care of what needs to be delted from the current row to make
     * it same as the input row.
     */
    public Row diff(Row row)
    {
        Row rowDiff = new Row(key_);
    	Map<String, ColumnFamily> columnFamilies = row.getColumnFamilyMap();
        Set<String> cfNames = columnFamilies.keySet();

        for ( String cfName : cfNames )
        {
            ColumnFamily cf = columnFamilies_.get(cfName);
            ColumnFamily cfDiff = null;
            if ( cf == null )
            	rowDiff.getColumnFamilyMap().put(cfName, columnFamilies.get(cfName));
            else
            {
            	cfDiff = cf.diff(columnFamilies.get(cfName));
            	if(cfDiff != null)
            		rowDiff.getColumnFamilyMap().put(cfName, cfDiff);
            }
        }
        if(rowDiff.getColumnFamilyMap().size() != 0)
        	return rowDiff;
        else
        	return null;
    }

