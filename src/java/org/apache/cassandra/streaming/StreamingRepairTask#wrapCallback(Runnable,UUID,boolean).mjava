    // wrap a given callback so as to unregister the streaming repair task on completion
    private static Runnable wrapCallback(final Runnable callback, final UUID taskid, final boolean isLocalTask)
    {
        return new Runnable()
        {
            // we expect one callback for the receive, and one for the send
            private final AtomicInteger outstanding = new AtomicInteger(isLocalTask ? 2 : 1);

            public void run()
            {
                if (outstanding.decrementAndGet() > 0)
                    // waiting on more calls
                    return;

                tasks.remove(taskid);
                if (callback != null)
                    callback.run();
            }
        };
    }

