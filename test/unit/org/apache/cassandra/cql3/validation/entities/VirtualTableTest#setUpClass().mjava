    @BeforeClass
    public static void setUpClass()
    {
        TableMetadata vt1Metadata =
        TableMetadata.builder(KS_NAME, VT1_NAME)
                     .kind(TableMetadata.Kind.VIRTUAL)
                     .addPartitionKeyColumn("pk", UTF8Type.instance)
                     .addClusteringColumn("c", UTF8Type.instance)
                     .addRegularColumn("v1", Int32Type.instance)
                     .addRegularColumn("v2", LongType.instance)
                     .build();

        SimpleDataSet vt1data = new SimpleDataSet(vt1Metadata);

        vt1data.row("pk1", "c1").column("v1", 11).column("v2", 11L)
               .row("pk2", "c1").column("v1", 21).column("v2", 21L)
               .row("pk1", "c2").column("v1", 12).column("v2", 12L)
               .row("pk2", "c2").column("v1", 22).column("v2", 22L)
               .row("pk1", "c3").column("v1", 13).column("v2", 13L)
               .row("pk2", "c3").column("v1", 23).column("v2", 23L);

        VirtualTable vt1 = new AbstractVirtualTable(vt1Metadata)
        {
            public DataSet data()
            {
                return vt1data;
            }
        };
        VirtualTable vt2 = new WritableVirtualTable(KS_NAME, VT2_NAME);

        TableMetadata vt3Metadata =
        TableMetadata.builder(KS_NAME, VT3_NAME)
                     .kind(TableMetadata.Kind.VIRTUAL)
                     .addPartitionKeyColumn("pk1", UTF8Type.instance)
                     .addPartitionKeyColumn("pk2", UTF8Type.instance)
                     .addClusteringColumn("ck1", UTF8Type.instance)
                     .addClusteringColumn("ck2", UTF8Type.instance)
                     .addRegularColumn("v1", Int32Type.instance)
                     .addRegularColumn("v2", LongType.instance)
                     .build();

        SimpleDataSet vt3data = new SimpleDataSet(vt3Metadata);

        vt3data.row("pk11", "pk11", "ck11", "ck11").column("v1", 1111).column("v2", 1111L)
               .row("pk11", "pk11", "ck22", "ck22").column("v1", 1122).column("v2", 1122L);

        VirtualTable vt3 = new AbstractVirtualTable(vt3Metadata)
        {
            public DataSet data()
            {
                return vt3data;
            }
        };
        VirtualKeyspaceRegistry.instance.register(new VirtualKeyspace(KS_NAME, ImmutableList.of(vt1, vt2, vt3)));

        CQLTester.setUpClass();
    }

