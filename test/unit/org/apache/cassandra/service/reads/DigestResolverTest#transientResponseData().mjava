    @Test
    public void transientResponseData()
    {
        SinglePartitionReadCommand command = SinglePartitionReadCommand.fullPartitionRead(cfm, nowInSec, dk);
        EndpointsForToken targetReplicas = EndpointsForToken.of(dk.getToken(), full(EP1), full(EP2), trans(EP3));
        DigestResolver<?, ?> resolver = new DigestResolver<>(command, plan(ConsistencyLevel.QUORUM, targetReplicas), 0);

        PartitionUpdate fullResponse = update(row(1000, 1, 1)).build();
        PartitionUpdate digestResponse = update(row(1000, 1, 1)).build();
        PartitionUpdate transientResponse = update(row(1000, 2, 2)).build();
        Assert.assertFalse(resolver.isDataPresent());
        Assert.assertFalse(resolver.hasTransientResponse());
        resolver.preprocess(response(command, EP1, iter(fullResponse), false));
        Assert.assertTrue(resolver.isDataPresent());
        resolver.preprocess(response(command, EP2, iter(digestResponse), true));
        resolver.preprocess(response(command, EP3, iter(transientResponse), false));
        Assert.assertTrue(resolver.hasTransientResponse());

        assertPartitionsEqual(filter(iter(dk,
                                          row(1000, 1, 1),
                                          row(1000, 2, 2))),
                              resolver.getData());
    }

