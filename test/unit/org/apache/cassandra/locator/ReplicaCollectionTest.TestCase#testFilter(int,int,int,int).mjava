        void testFilter(int subListDepth, int filterDepth, int sortDepth, int selectDepth)
        {
            if (test.isSnapshot)
                Assert.assertSame(test, test.filter(Predicates.alwaysTrue()));

            if (test.isEmpty())
                return;
            // remove start
            // we recurse on the same subset in testSubList, so just corroborate we have the correct list here
            assertSubList(test.filter(r -> r != canonicalList.get(0)), 1, canonicalList.size());

            if (test.size() <= 1)
                return;
            // remove end
            // we recurse on the same subset in testSubList, so just corroborate we have the correct list here
            assertSubList(test.filter(r -> r != canonicalList.get(canonicalList.size() - 1)), 0, canonicalList.size() - 1);

            if (test.size() <= 2)
                return;
            Predicate<Replica> removeMiddle = r -> r != canonicalList.get(canonicalList.size() / 2);
            TestCase<C> filtered = new TestCase<>(test.filter(removeMiddle), ImmutableList.copyOf(Iterables.filter(canonicalList, removeMiddle::test)));
            filtered.testAll(subListDepth, filterDepth - 1, sortDepth, selectDepth);
        }

