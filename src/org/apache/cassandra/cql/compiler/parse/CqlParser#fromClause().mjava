    // $ANTLR start fromClause
    // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:163:1: fromClause : K_FROM tableExpression -> ^( A_FROM tableExpression ) ;
    public final fromClause_return fromClause() throws RecognitionException {
        fromClause_return retval = new fromClause_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token K_FROM44=null;
        tableExpression_return tableExpression45 = null;


        CommonTree K_FROM44_tree=null;
        RewriteRuleTokenStream stream_K_FROM=new RewriteRuleTokenStream(adaptor,"token K_FROM");
        RewriteRuleSubtreeStream stream_tableExpression=new RewriteRuleSubtreeStream(adaptor,"rule tableExpression");
        try {
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:164:5: ( K_FROM tableExpression -> ^( A_FROM tableExpression ) )
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:164:7: K_FROM tableExpression
            {
            K_FROM44=(Token)input.LT(1);
            match(input,K_FROM,FOLLOW_K_FROM_in_fromClause613); if (failed) return retval;
            if ( backtracking==0 ) stream_K_FROM.add(K_FROM44);

            pushFollow(FOLLOW_tableExpression_in_fromClause615);
            tableExpression45=tableExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) stream_tableExpression.add(tableExpression45.getTree());

            // AST REWRITE
            // elements: tableExpression
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            if ( backtracking==0 ) {
            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval!=null?retval.tree:null);

            root_0 = (CommonTree)adaptor.nil();
            // 164:30: -> ^( A_FROM tableExpression )
            {
                // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:164:33: ^( A_FROM tableExpression )
                {
                CommonTree root_1 = (CommonTree)adaptor.nil();
                root_1 = (CommonTree)adaptor.becomeRoot(adaptor.create(A_FROM, "A_FROM"), root_1);

                adaptor.addChild(root_1, stream_tableExpression.next());

                adaptor.addChild(root_0, root_1);
                }

            }

            }

            }

            retval.stop = input.LT(-1);

            if ( backtracking==0 ) {
                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return retval;
    }
    // $ANTLR end fromClause

