    @Test
    public void testDynamicLimit() throws Throwable
    {
        InetAddress peer1 = setupPeer("127.1.0.1", "2.2.0");
        InetAddress peer2 = setupPeer("127.1.0.2", "2.2.0");
        InetAddress peer3 = setupPeer("127.1.0.3", "2.2.0");
        reinitializeNetwork();
        try
        {
            // legacy peers means max negotiable version is V3
            testConnection(ProtocolVersion.V4, ProtocolVersion.V3);
            testConnection(ProtocolVersion.V3, ProtocolVersion.V3);
            testConnection(null, ProtocolVersion.V3);

            // receive notification that 2 peers have upgraded to a version that fully supports V4
            updatePeerInfo(peer1, "3.0.0");
            updatePeerInfo(peer2, "3.0.0");
            updateMaxNegotiableProtocolVersion();
            // version should still be capped
            testConnection(ProtocolVersion.V4, ProtocolVersion.V3);
            testConnection(ProtocolVersion.V3, ProtocolVersion.V3);
            testConnection(null, ProtocolVersion.V3);

            // no legacy peers so V4 is negotiable
            // after the last peer upgrades, cap should be lifted
            updatePeerInfo(peer3, "3.0.0");
            updateMaxNegotiableProtocolVersion();
            testConnection(ProtocolVersion.V4, ProtocolVersion.V4);
            testConnection(ProtocolVersion.V3, ProtocolVersion.V3);
            testConnection(null, ProtocolVersion.V4);
        } finally {
            cleanupPeers(peer1, peer2, peer3);
        }
    }

