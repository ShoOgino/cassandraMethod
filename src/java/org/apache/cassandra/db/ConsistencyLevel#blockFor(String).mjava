    public int blockFor(String table)
    {
        NetworkTopologyStrategy strategy = null;
        switch (this)
        {
            case ONE:
                return 1;
            case ANY:
                return 1;
            case TWO:
                return 2;
            case THREE:
                return 3;
            case QUORUM:
                return (Table.open(table).getReplicationStrategy().getReplicationFactor() / 2) + 1;
            case ALL:
                return Table.open(table).getReplicationStrategy().getReplicationFactor();
            case LOCAL_QUORUM:
                strategy = (NetworkTopologyStrategy) Table.open(table).getReplicationStrategy();
                return (strategy.getReplicationFactor(LOCAL_DC) / 2) + 1;
            case EACH_QUORUM:
                strategy = (NetworkTopologyStrategy) Table.open(table).getReplicationStrategy();
                int n = 0;
                for (String dc : strategy.getDatacenters())
                    n += (strategy.getReplicationFactor(dc) / 2) + 1;
                return n;
            default:
                throw new UnsupportedOperationException("Invalid consistency level: " + toString());
        }
    }

