    @Test
    public void testDescribeTypes() throws Throwable
    {
        String type1 = createType("CREATE TYPE %s (a int)");
        String type2 = createType("CREATE TYPE %s (x text, y text)");
        String type3 = createType("CREATE TYPE %s (a text, b frozen<" + type2 + ">)");
        execute("ALTER TYPE " + KEYSPACE + "." + type1 + " ADD b frozen<" + type3 + ">");

        try
        {
            assertRowsNet(executeDescribeNet(KEYSPACE, "DESCRIBE TYPES"),
                          row(KEYSPACE, "type", type1),
                          row(KEYSPACE, "type", type2),
                          row(KEYSPACE, "type", type3));

            assertRowsNet(executeDescribeNet(KEYSPACE, "DESCRIBE TYPE " + type2),
                          row(KEYSPACE, "type", type2, "CREATE TYPE " + KEYSPACE + "." + type2 + " (\n" +
                                                       "    x text,\n" + 
                                                       "    y text\n" +
                                                       ");"));
            assertRowsNet(executeDescribeNet(KEYSPACE, "DESCRIBE TYPE " + type1),
                          row(KEYSPACE, "type", type1, "CREATE TYPE " + KEYSPACE + "." + type1 + " (\n" +
                                                       "    a int,\n" + 
                                                       "    b frozen<" + type3 + ">\n" +
                                                       ");"));

            assertRowsNet(executeDescribeNet(KEYSPACE, "DESCRIBE KEYSPACE " + KEYSPACE),
                          row(KEYSPACE, "keyspace", KEYSPACE, "CREATE KEYSPACE " + KEYSPACE +
                                                          " WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '1'}" +
                                                          "  AND durable_writes = true;"),
                          row(KEYSPACE, "type", type2, "CREATE TYPE " + KEYSPACE + "." + type2 + " (\n" +
                                                       "    x text,\n" + 
                                                       "    y text\n" +
                                                       ");"),
                          row(KEYSPACE, "type", type3, "CREATE TYPE " + KEYSPACE + "." + type3 + " (\n" +
                                                       "    a text,\n" + 
                                                       "    b frozen<" + type2 + ">\n" +
                                                       ");"),
                          row(KEYSPACE, "type", type1, "CREATE TYPE " + KEYSPACE + "." + type1 + " (\n" +
                                                       "    a int,\n" + 
                                                       "    b frozen<" + type3 + ">\n" +
                                                       ");"));
        }
        finally
        {
            execute("DROP TYPE " + KEYSPACE + "." + type1);
            execute("DROP TYPE " + KEYSPACE + "." + type3);
            execute("DROP TYPE " + KEYSPACE + "." + type2);
        }
    }

