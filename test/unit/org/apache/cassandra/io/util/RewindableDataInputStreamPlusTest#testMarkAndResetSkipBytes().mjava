    @Test
    public void testMarkAndResetSkipBytes() throws Exception
    {
        String testStr = "1234567890";
        byte[] testData = testStr.getBytes();

        for (int memCapacity = 0; memCapacity <= 7; memCapacity++)
        {
            int diskCapacity = 7 - memCapacity;
            try (RewindableDataInputStreamPlus reader = new RewindableDataInputStreamPlus(new ByteArrayInputStream(testData),
                                                                                          INITIAL_BUFFER_SIZE, memCapacity, file,
                                                                                          diskCapacity))
            {
                reader.mark();
                // read first 5 bytes and rewind
                byte[] out = new byte[5];
                reader.readFully(out, 0, 5);
                assertEquals("12345", new String(out));

                // then skip 2 bytes (67)
                reader.skipBytes(2);

                assertEquals(7, reader.bytesPastMark(null));
                reader.reset();

                //now read part of the previously skipped bytes
                out = new byte[5];
                reader.readFully(out);
                assertEquals("12345", new String(out));

                //skip 3 bytes (2 from cache, 1 from stream)
                reader.skip(3);

                // mark and read 2 more bytes
                reader.mark();
                out = new byte[2];
                reader.readFully(out);
                assertEquals("90", new String(out));
                assertEquals(0, reader.available());
                reader.reset();

                //reset and read only the next byte "9" in the third position
                reader.readFully(out, 1, 1);
                assertEquals("99", new String(out));

                //now we read the remainder via readline
                assertEquals(1, reader.available());
                assertEquals("0", reader.readLine());

            }
            assertFalse(file.exists());
        }
    }

