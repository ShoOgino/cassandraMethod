    /**
     * Get the raw information about an end point
     * 
     * @param endPoint endPoint to process
     * 
     * @return a array of string with the first index being the data center and the second being the rack
     */
    public String[] getEndPointInfo(InetAddress endPoint) {
        String key = endPoint.toString();
        String value = hostProperties.getProperty(key);
        if (value == null)
        {
            logger_.error("Could not find end point information for " + key + ", will use default.");
            value = hostProperties.getProperty("default");
        }
        StringTokenizer st = new StringTokenizer(value, ":");
        if (st.countTokens() < 2)
        {
            logger_.error("Value for " + key + " is invalid: " + value);
            return new String [] {"default", "default"};
        }
        return new String[] {st.nextToken(), st.nextToken()};
    }

