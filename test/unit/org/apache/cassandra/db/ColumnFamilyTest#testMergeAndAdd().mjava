    @Test
    public void testMergeAndAdd()
    {
        ColumnFamily cf_new = ArrayBackedSortedColumns.factory.create("Keyspace1", "Standard1");
        ColumnFamily cf_old = ArrayBackedSortedColumns.factory.create("Keyspace1", "Standard1");
        ColumnFamily cf_result = ArrayBackedSortedColumns.factory.create("Keyspace1", "Standard1");
        ByteBuffer val = ByteBufferUtil.bytes("sample value");
        ByteBuffer val2 = ByteBufferUtil.bytes("x value ");

        cf_new.addColumn(cellname("col1"), val, 3);
        cf_new.addColumn(cellname("col2"), val, 4);

        cf_old.addColumn(cellname("col2"), val2, 1);
        cf_old.addColumn(cellname("col3"), val2, 2);

        cf_result.addAll(cf_new);
        cf_result.addAll(cf_old);

        assert 3 == cf_result.getColumnCount() : "Count is " + cf_new.getColumnCount();
        //addcolumns will only add if timestamp >= old timestamp
        assert val.equals(cf_result.getColumn(cellname("col2")).value());

        // check that tombstone wins timestamp ties
        cf_result.addTombstone(cellname("col1"), 0, 3);
        assert cf_result.getColumn(cellname("col1")).isMarkedForDelete(System.currentTimeMillis());
        cf_result.addColumn(cellname("col1"), val2, 3);
        assert cf_result.getColumn(cellname("col1")).isMarkedForDelete(System.currentTimeMillis());

        // check that column value wins timestamp ties in absence of tombstone
        cf_result.addColumn(cellname("col3"), val, 2);
        assert cf_result.getColumn(cellname("col3")).value().equals(val2);
        cf_result.addColumn(cellname("col3"), ByteBufferUtil.bytes("z"), 2);
        assert cf_result.getColumn(cellname("col3")).value().equals(ByteBufferUtil.bytes("z"));
    }

