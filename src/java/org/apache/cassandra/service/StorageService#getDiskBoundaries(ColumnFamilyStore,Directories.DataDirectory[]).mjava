    public static List<PartitionPosition> getDiskBoundaries(ColumnFamilyStore cfs, Directories.DataDirectory[] directories)
    {
        if (!cfs.getPartitioner().splitter().isPresent())
            return null;

        Collection<Range<Token>> lr;

        if (StorageService.instance.isBootstrapMode())
        {
            lr = StorageService.instance.getTokenMetadata().getPendingRanges(cfs.keyspace.getName(), FBUtilities.getBroadcastAddress());
        }
        else
        {
            // Reason we use use the future settled TMD is that if we decommission a node, we want to stream
            // from that node to the correct location on disk, if we didn't, we would put new files in the wrong places.
            // We do this to minimize the amount of data we need to move in rebalancedisks once everything settled
            TokenMetadata tmd = StorageService.instance.getTokenMetadata().cloneAfterAllSettled();
            lr = cfs.keyspace.getReplicationStrategy().getAddressRanges(tmd).get(FBUtilities.getBroadcastAddress());
        }

        if (lr == null || lr.isEmpty())
            return null;
        List<Range<Token>> localRanges = Range.sort(lr);

        return getDiskBoundaries(localRanges, cfs.getPartitioner(), directories);
    }

