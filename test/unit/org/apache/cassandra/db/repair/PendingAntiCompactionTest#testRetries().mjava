    @Test
    public void testRetries() throws InterruptedException, ExecutionException
    {
        ColumnFamilyStore cfs = MockSchema.newCFS();
        cfs.addSSTable(MockSchema.sstable(1, true, cfs));
        CountDownLatch cdl = new CountDownLatch(5);
        ExecutorService es = Executors.newFixedThreadPool(1);
        CompactionInfo.Holder holder = new CompactionInfo.Holder()
        {
            public CompactionInfo getCompactionInfo()
            {
                return new CompactionInfo(cfs.metadata(), OperationType.ANTICOMPACTION, 0, 0, UUID.randomUUID(), cfs.getLiveSSTables());
            }
        };
        try
        {
            PendingAntiCompaction.AntiCompactionPredicate acp = new PendingAntiCompaction.AntiCompactionPredicate(FULL_RANGE, UUID.randomUUID())
            {
                @Override
                public boolean apply(SSTableReader sstable)
                {
                    cdl.countDown();
                    if (cdl.getCount() > 0)
                        throw new PendingAntiCompaction.SSTableAcquisitionException("blah");
                    return true;
                }
            };
            CompactionManager.instance.active.beginCompaction(holder);
            PendingAntiCompaction.AcquisitionCallable acquisitionCallable = new PendingAntiCompaction.AcquisitionCallable(cfs, UUID.randomUUID(), 10, 1, acp);
            Future f = es.submit(acquisitionCallable);
            cdl.await();
            assertNotNull(f.get());
        }
        finally
        {
            es.shutdown();
            CompactionManager.instance.active.finishCompaction(holder);
        }
    }

