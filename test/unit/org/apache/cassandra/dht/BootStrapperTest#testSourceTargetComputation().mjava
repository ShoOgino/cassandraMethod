    @Test
    public void testSourceTargetComputation() throws UnknownHostException
    {
        int numOldNodes = 3;
        IPartitioner p = generateOldTokens(numOldNodes);
        
        Token newToken = p.getDefaultToken();
        InetAddress newEndPoint = InetAddress.getByName("1.2.3.10");
 
        /* New token needs to be part of the map for the algorithm
         * to calculate the ranges correctly
         */
        StorageService.instance().updateTokenMetadataUnsafe(newToken, newEndPoint);

        BootStrapper b = new BootStrapper(Arrays.asList(newEndPoint), newToken );
        Map<Range,List<BootstrapSourceTarget>> res = b.getRangesWithSourceTarget();
        
        int transferCount = 0;
        for ( Map.Entry<Range, List<BootstrapSourceTarget>> e: res.entrySet())
        {
            if (e.getValue() != null && e.getValue().size() >0)
            {
                transferCount++;
            }
        }
        /* Only 1 transfer from old node to new node */
        assertEquals(1, transferCount);
        Map<InetAddress, Map<InetAddress,List<Range>>> temp = LeaveJoinProtocolHelper.getWorkMap(res);
        assertEquals(1, temp.keySet().size());
        assertEquals(1, temp.entrySet().size());

        Map<InetAddress,Map<InetAddress,List<Range>>> res2 = LeaveJoinProtocolHelper.filterRangesForTargetEndPoint(temp, newEndPoint);
        /* After filtering, still only 1 transfer */
        assertEquals(1, res2.keySet().size());
        assertEquals(1, res2.entrySet().size());
        assertTrue(((Map<InetAddress,List<Range>>)res2.values().toArray()[0]).containsKey(newEndPoint));
    }

