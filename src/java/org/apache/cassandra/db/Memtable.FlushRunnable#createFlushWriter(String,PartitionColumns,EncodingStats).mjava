        public SSTableTxnWriter createFlushWriter(String filename,
                                               PartitionColumns columns,
                                               EncodingStats stats)
        {
            // we operate "offline" here, as we expose the resulting reader consciously when done
            // (although we may want to modify this behaviour in future, to encapsulate full flush behaviour in LifecycleTransaction)
            LifecycleTransaction txn = LifecycleTransaction.offline(OperationType.FLUSH, cfs.metadata);
            MetadataCollector sstableMetadataCollector = new MetadataCollector(cfs.metadata.comparator).replayPosition(context);
            return new SSTableTxnWriter(txn,
                                        SSTableWriter.create(Descriptor.fromFilename(filename),
                                                             (long)partitions.size(),
                                                             ActiveRepairService.UNREPAIRED_SSTABLE,
                                                             cfs.metadata,
                                                             sstableMetadataCollector,
                                                             new SerializationHeader(cfs.metadata, columns, stats),
                                                             txn));
        }

