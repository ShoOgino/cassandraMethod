    private Byteman(List<String> scripts, List<String> texts, Set<String> modifiedClassNames)
    {
        klasses = modifiedClassNames.stream().map(fullyQualifiedKlass -> {
            try
            {
                Class<?> klass = Class.forName(fullyQualifiedKlass);
                String klassPath = fullyQualifiedKlass.replace(".", "/");
                byte[] bytes = ByteStreams.toByteArray(Thread.currentThread().getContextClassLoader().getResourceAsStream(klassPath + ".class"));

                return new KlassDetails(klassPath, klass, klass.getProtectionDomain(), bytes);
            }
            catch (Exception e)
            {
                throw new RuntimeException(e);
            }
        }).collect(Collectors.toList());

        try
        {
            this.transformer = new Transformer(null, null, scripts, texts, false);
        }
        catch (Exception e)
        {
            throw new RuntimeException(e);
        }
    }

