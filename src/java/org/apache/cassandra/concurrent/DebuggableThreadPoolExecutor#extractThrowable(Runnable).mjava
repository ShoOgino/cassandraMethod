    /**
     * @return any exception wrapped by @param runnable, i.e., if it is a FutureTask
     */
    public static Throwable extractThrowable(Runnable runnable)
    {
        // Check for exceptions wrapped by FutureTask or tasks which wrap FutureTask (HasDelegateFuture interface)
        Throwable throwable = null;
        if (runnable instanceof Future<?>)
        {
            throwable = extractThrowable(((Future<?>) runnable));
        }
        if (throwable == null && runnable instanceof HasDelegateFuture)
        {
            throwable =  extractThrowable(((HasDelegateFuture) runnable).getDelegate());
        }

        return throwable;
    }

