    /*
     * We try to deliver the mutations to the replicas ourselves if they are alive and only resort to writing hints
     * when a replica is down or a write request times out.
     */
    private void replayMutations(List<RowMutation> mutations, long writtenAt, RateLimiter rateLimiter) throws IOException
    {
        int ttl = calculateHintTTL(mutations, writtenAt);
        if (ttl <= 0)
            return; // this batchlog entry has 'expired'

        for (RowMutation mutation : mutations)
        {
            Set<InetAddress> liveEndpoints = Sets.newHashSet();
            List<InetAddress> hintEndpoints = Lists.newArrayList();

            String ks = mutation.getTable();
            Token tk = StorageService.getPartitioner().getToken(mutation.key());
            int mutationSize = (int) RowMutation.serializer.serializedSize(mutation, VERSION);

            for (InetAddress endpoint : Iterables.concat(StorageService.instance.getNaturalEndpoints(ks, tk),
                                                         StorageService.instance.getTokenMetadata().pendingEndpointsFor(tk, ks)))
            {
                rateLimiter.acquire(mutationSize);
                if (endpoint.equals(FBUtilities.getBroadcastAddress()))
                    mutation.apply();
                else if (FailureDetector.instance.isAlive(endpoint))
                    liveEndpoints.add(endpoint); // will try delivering directly instead of writing a hint.
                else
                    hintEndpoints.add(endpoint);
            }

            if (!liveEndpoints.isEmpty())
                hintEndpoints.addAll(attemptDirectDelivery(mutation, liveEndpoints));

            for (InetAddress endpoint : hintEndpoints)
                StorageProxy.writeHintForMutation(mutation, writtenAt, ttl, endpoint);
        }
    }

