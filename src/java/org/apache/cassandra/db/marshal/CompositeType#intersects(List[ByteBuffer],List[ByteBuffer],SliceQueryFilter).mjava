    @Override
    public boolean intersects(List<ByteBuffer> minColumnNames, List<ByteBuffer> maxColumnNames, SliceQueryFilter filter)
    {
        assert minColumnNames.size() == maxColumnNames.size();
        for (ColumnSlice slice : filter.slices)
        {
            ByteBuffer[] start = split(filter.isReversed() ? slice.finish : slice.start);
            ByteBuffer[] finish = split(filter.isReversed() ? slice.start : slice.finish);
            for (int i = 0; i < minColumnNames.size(); i++)
            {
                AbstractType<?> t = types.get(i);
                ByteBuffer s = i < start.length ? start[i] : ByteBufferUtil.EMPTY_BYTE_BUFFER;
                ByteBuffer f = i < finish.length ? finish[i] : ByteBufferUtil.EMPTY_BYTE_BUFFER;
                if (t.intersects(minColumnNames.get(i), maxColumnNames.get(i), s, f))
                    return true;
            }
        }
        return false;
    }

