    /**
     * Creates a new histogram with max bin size of maxBinSize
     * @param maxBinSize maximum number of bins this histogram can have
     */
    public StreamingHistogram(int maxBinSize, int maxSpoolSize, int roundSeconds)
    {
        this.maxBinSize = maxBinSize;
        this.maxSpoolSize = maxSpoolSize;
        this.roundSeconds = roundSeconds;
        bin = new TreeMap<>((o1, o2) -> {
            if (o1.getClass().equals(o2.getClass()))
                return ((Comparable)o1).compareTo(o2);
            else
            	return Double.compare(o1.doubleValue(), o2.doubleValue());
        });
        spool = new TreeMap<>((o1, o2) -> {
            if (o1.getClass().equals(o2.getClass()))
                return ((Comparable)o1).compareTo(o2);
            else
                return Double.compare(o1.doubleValue(), o2.doubleValue());
        });

    }

