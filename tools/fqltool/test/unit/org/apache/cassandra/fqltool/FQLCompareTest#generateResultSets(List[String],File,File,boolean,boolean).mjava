    private List<File> generateResultSets(List<String> targetHosts, File resultDir, File queryDir, boolean random, boolean includeFailures) throws IOException
    {
        List<File> resultPaths = new ArrayList<>();
        targetHosts.forEach(host -> { File f = new File(resultDir, host); f.mkdir(); resultPaths.add(f);});

        try (ResultHandler rh = new ResultHandler(targetHosts, resultPaths, queryDir))
        {
            for (int i = 0; i < 100; i++)
            {
                ResultHandler.ComparableResultSet resultSet1 = includeFailures && (i % 10 == 0)
                                                               ? StoredResultSet.failed("test failure!")
                                                               : FQLReplayTest.createResultSet(10, 10, random);
                ResultHandler.ComparableResultSet resultSet2 = FQLReplayTest.createResultSet(10, 10, random);
                rh.handleResults(query(), Lists.newArrayList(resultSet1, resultSet2));
            }
        }
        return resultPaths;
    }

