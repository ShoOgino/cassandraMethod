        public SchemaChangeMonitor()
        {
            this.cleanup = new ArrayList<>(instances.size());
            for (Instance instance : instances)
            {
                cleanup.add(
                        instance.appliesOnInstance(
                                (Runnable runnable) -> {
                                    Consumer<SchemaEvent> consumer = event -> runnable.run();
                                    DiagnosticEventService.instance().subscribe(SchemaEvent.class, SchemaEvent.SchemaEventType.VERSION_UPDATED, consumer);
                                    return (Runnable) () -> DiagnosticEventService.instance().unsubscribe(SchemaEvent.class, consumer);
                                }
                        ).apply(this::signal)
                );
            }
        }

