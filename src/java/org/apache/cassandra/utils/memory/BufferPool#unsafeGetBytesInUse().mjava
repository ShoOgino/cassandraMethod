    public static long unsafeGetBytesInUse()
    {
        long totalMemory = globalPool.memoryUsage.get();
        class L { long v; }
        final L availableMemory = new L();
        for (Chunk chunk : globalPool.chunks)
        {
            availableMemory.v += chunk.capacity();
        }
        for (LocalPoolRef ref : localPoolReferences)
        {
            ref.chunks.forEach(chunk -> availableMemory.v += chunk.free());
        }
        return totalMemory - availableMemory.v;
    }

