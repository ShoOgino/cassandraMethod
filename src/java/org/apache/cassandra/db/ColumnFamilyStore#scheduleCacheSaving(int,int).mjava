    public void scheduleCacheSaving(int rowCacheSavePeriodInSeconds, int keyCacheSavePeriodInSeconds)
    {
        if (saveRowCacheTask != null)
        {
            saveRowCacheTask.cancel(false); // Do not interrupt an in-progress save
            saveRowCacheTask = null;
        }
        if (rowCacheSavePeriodInSeconds > 0)
        {
            Runnable runnable = new WrappedRunnable()
            {
                public void runMayThrow()
                {
                    submitRowCacheWrite();
                }
            };
            saveRowCacheTask = StorageService.tasks.scheduleWithFixedDelay(runnable,
                                                                           rowCacheSavePeriodInSeconds,
                                                                           rowCacheSavePeriodInSeconds,
                                                                           TimeUnit.SECONDS);
        }

        if (saveKeyCacheTask != null)
        {
            saveKeyCacheTask.cancel(false); // Do not interrupt an in-progress save
            saveKeyCacheTask = null;
        }
        if (keyCacheSavePeriodInSeconds > 0)
        {
            Runnable runnable = new WrappedRunnable()
            {
                public void runMayThrow()
                {
                    submitKeyCacheWrite();
                }
            };
            saveKeyCacheTask = StorageService.tasks.scheduleWithFixedDelay(runnable,
                                                                           keyCacheSavePeriodInSeconds,
                                                                           keyCacheSavePeriodInSeconds,
                                                                           TimeUnit.SECONDS);
        }
    }

