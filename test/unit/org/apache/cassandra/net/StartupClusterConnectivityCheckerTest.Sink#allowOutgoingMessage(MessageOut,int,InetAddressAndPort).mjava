        @Override
        public boolean allowOutgoingMessage(MessageOut message, int id, InetAddressAndPort to)
        {
            ConnectionTypeRecorder recorder = seenConnectionRequests.computeIfAbsent(to, inetAddress ->  new ConnectionTypeRecorder());
            if (message.connectionType == SMALL_MESSAGE)
            {
                Assert.assertFalse(recorder.seenSmallMessageRequest);
                recorder.seenSmallMessageRequest = true;
            }
            else
            {
                Assert.assertFalse(recorder.seenLargeMessageRequest);
                recorder.seenLargeMessageRequest = true;
            }

            if (processConnectAck)
            {
                MessageIn msgIn = MessageIn.create(to, message.payload, Collections.emptyMap(), MessagingService.Verb.REQUEST_RESPONSE, 1);
                MessagingService.instance().getRegisteredCallback(id).callback.response(msgIn);
            }

            if (markAliveInGossip)
                Gossiper.instance.realMarkAlive(to, new EndpointState(new HeartBeatState(1, 1)));
            return false;
        }

