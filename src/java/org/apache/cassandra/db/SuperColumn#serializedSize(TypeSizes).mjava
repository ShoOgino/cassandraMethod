    /**
     * This returns the size of the super-column when serialized.
     * @see org.apache.cassandra.db.IColumn#serializedSize()
    */
    public int serializedSize(TypeSizes sizes)
    {
        /*
         * We need to keep the way we are calculating the column size in sync with the
         * way we are calculating the size for the column family serializer.
         *
         * 2 bytes for name size
         * n bytes for the name
         * 4 bytes for getLocalDeletionTime
         * 8 bytes for getMarkedForDeleteAt
         * 4 bytes for the subcolumns size
         * size(constantSize) of subcolumns.
         */
        int nameSize = name.remaining();
        int subColumnsSize = 0;
        for (IColumn subColumn : getSubColumns())
            subColumnsSize += subColumn.serializedSize(sizes);
        return sizes.sizeof((short) nameSize) + nameSize
                + sizes.sizeof(getLocalDeletionTime())
                + sizes.sizeof(getMarkedForDeleteAt())
                + sizes.sizeof(subColumnsSize) + subColumnsSize;
    }

