    @Test
    public void decode_HappyPath()
    {
        buf = new SecondHandshakeMessage(MESSAGING_VERSION).encode(PooledByteBufAllocator.DEFAULT);
        channel.writeInbound(buf);
        Assert.assertEquals(1, channel.outboundMessages().size());
        Assert.assertTrue(channel.isOpen());

        Assert.assertEquals(MESSAGING_VERSION, callbackHandler.result.negotiatedMessagingVersion);
        Assert.assertEquals(HandshakeResult.Outcome.SUCCESS, callbackHandler.result.outcome);
        Assert.assertFalse(channel.outboundMessages().isEmpty());

        ByteBuf thridMsgBuf = (ByteBuf) channel.outboundMessages().poll();
        try
        {
            ThirdHandshakeMessage thirdHandshakeMessage = ThirdHandshakeMessage.maybeDecode(thridMsgBuf);
            Assert.assertEquals(MESSAGING_VERSION, thirdHandshakeMessage.messagingVersion);
        }
        finally
        {
            thridMsgBuf.release();
        }
    }

