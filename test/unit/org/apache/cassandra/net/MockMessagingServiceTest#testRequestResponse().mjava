    @Test
    public void testRequestResponse() throws InterruptedException, ExecutionException
    {
        // echo message that we like to mock as incoming response for outgoing echo message
        Message<NoPayload> echoMessage = Message.out(ECHO_REQ, NoPayload.noPayload);
        MockMessagingSpy spy = MockMessagingService
                .when(
                        all(
                                to(FBUtilities.getBroadcastAddressAndPort()),
                                verb(ECHO_REQ)
                        )
                )
                .respond(echoMessage);

        Message<NoPayload> echoMessageOut = Message.out(ECHO_REQ, NoPayload.noPayload);
        MessagingService.instance().sendWithCallback(echoMessageOut, FBUtilities.getBroadcastAddressAndPort(), msg ->
        {
            assertEquals(ECHO_REQ, msg.verb());
            assertEquals(echoMessage.payload, msg.payload);
        });

        // we must have intercepted the outgoing message at this point
        Message<?> msg = spy.captureMessageOut().get();
        assertEquals(1, spy.messagesIntercepted);
        assertSame(echoMessage.payload, msg.payload);

        // and return a mocked response
        assertEquals(1, spy.mockedMessageResponses);
    }

