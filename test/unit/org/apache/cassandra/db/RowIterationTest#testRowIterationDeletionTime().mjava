    @Test
    public void testRowIterationDeletionTime() throws IOException, ExecutionException, InterruptedException
    {
        Table table = Table.open(TABLE1);
        String CF_NAME = "Standard3";
        ColumnFamilyStore store = table.getColumnFamilyStore(CF_NAME);
        DecoratedKey key = Util.dk("key");

        // Delete row in first sstable
        RowMutation rm = new RowMutation(TABLE1, key.key);
        rm.delete(CF_NAME, 0);
        rm.add(CF_NAME, ByteBufferUtil.bytes("c"), ByteBufferUtil.bytes("values"), 0L);
        DeletionInfo delInfo1 = rm.getColumnFamilies().iterator().next().deletionInfo();
        rm.apply();
        store.forceBlockingFlush();

        // Delete row in second sstable with higher timestamp
        rm = new RowMutation(TABLE1, key.key);
        rm.delete(CF_NAME, 1);
        rm.add(CF_NAME, ByteBufferUtil.bytes("c"), ByteBufferUtil.bytes("values"), 1L);
        DeletionInfo delInfo2 = rm.getColumnFamilies().iterator().next().deletionInfo();
        assert delInfo2.getTopLevelDeletion().markedForDeleteAt == 1L;
        rm.apply();
        store.forceBlockingFlush();

        ColumnFamily cf = Util.getRangeSlice(store).iterator().next().cf;
        assert cf.deletionInfo().equals(delInfo2);
    }

