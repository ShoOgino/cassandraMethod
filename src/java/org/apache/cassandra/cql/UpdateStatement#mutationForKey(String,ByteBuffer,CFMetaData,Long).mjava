    /**
     * Compute a row mutation for a single key
     *
     * @param keyspace working keyspace
     * @param key key to change
     * @param metadata information about CF
     * @param timestamp global timestamp to use for every key mutation
     *
     * @return row mutation
     *
     * @throws InvalidRequestException on the wrong request
     */
    private RowMutation mutationForKey(String keyspace, ByteBuffer key, CFMetaData metadata, Long timestamp) throws InvalidRequestException
    {
        validateKey(key);

        AbstractType<?> comparator = getComparator(keyspace);

        RowMutation rm = new RowMutation(keyspace, key);
        for (Map.Entry<Term, Term> column : getColumns().entrySet())
        {
            ByteBuffer colName = column.getKey().getByteBuffer(comparator);
            ByteBuffer colValue = column.getValue().getByteBuffer(getValueValidator(keyspace, colName));

            validateColumn(metadata, colName, colValue);
            rm.add(new QueryPath(columnFamily, null, colName),
                   colValue,
                   (timestamp == null) ? getTimestamp() : timestamp,
                   getTimeToLive());
        }

        return rm;
    }

