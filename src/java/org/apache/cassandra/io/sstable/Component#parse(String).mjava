    /**
     * Parse the component part of a sstable filename into a {@code Component} object.
     *
     * @param name a string representing a sstable component.
     * @return the component corresponding to {@code name}. Note that this always return a component as an unrecognized
     * name is parsed into a CUSTOM component.
     */
    static Component parse(String name)
    {
        Type type = Type.fromRepresentation(name);

        // Build (or retrieve singleton for) the component object
        switch (type)
        {
            case DATA:             return Component.DATA;
            case PRIMARY_INDEX:    return Component.PRIMARY_INDEX;
            case FILTER:           return Component.FILTER;
            case COMPRESSION_INFO: return Component.COMPRESSION_INFO;
            case STATS:            return Component.STATS;
            case DIGEST:           return Component.DIGEST;
            case CRC:              return Component.CRC;
            case SUMMARY:          return Component.SUMMARY;
            case TOC:              return Component.TOC;
            case SECONDARY_INDEX:  return new Component(Type.SECONDARY_INDEX, name);
            case CUSTOM:           return new Component(Type.CUSTOM, name);
            default:               throw new AssertionError();
        }
    }

