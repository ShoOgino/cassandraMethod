    /*
     * This method is invoked by the Loader process to force the
     * node to move from its current position on the token ring, to
     * a position to be determined based on the keys. This will help
     * all nodes to start off perfectly load balanced. The array passed
     * in is evaluated as follows by the loader process:
     * If there are 10 keys in the system and a totality of 5 nodes
     * then each node needs to have 2 keys i.e the array is made up
     * of every 2nd key in the total list of keys.
    */
    public void relocate(String[] keys) throws IOException
    {
    	if ( keys.length > 0 )
    	{
	        isLoadState_ = true;
            Token token = tokenMetadata_.getToken(StorageService.tcpAddr_);
	        Map<Token, EndPoint> tokenToEndPointMap = tokenMetadata_.cloneTokenEndPointMap();
	        Token[] tokens = tokenToEndPointMap.keySet().toArray(new Token[tokenToEndPointMap.keySet().size()]);
	        Arrays.sort(tokens);
	        int index = Arrays.binarySearch(tokens, token) * (keys.length/tokens.length);
	        Token newToken = token( keys[index] );
	        /* update the token */
	        updateToken(newToken);
    	}
    }

