        public C createWithoutStarting() throws IOException
        {
            if (root == null)
                root = Files.createTempDirectory("dtests").toFile();

            if (nodeCount <= 0)
                throw new IllegalStateException("Cluster must have at least one node");

            if (nodeIdTopology == null)
            {
                nodeIdTopology = IntStream.rangeClosed(1, nodeCount).boxed()
                                          .collect(Collectors.toMap(nodeId -> nodeId,
                                                                    nodeId -> NetworkTopology.dcAndRack(dcName(0), rackName(0))));
            }

            root.mkdirs();
            setupLogging(root);

            ClassLoader sharedClassLoader = Thread.currentThread().getContextClassLoader();

            List<InstanceConfig> configs = new ArrayList<>();

            if (tokenSupplier == null)
                tokenSupplier = evenlyDistributedTokens(nodeCount);

            for (int i = 0; i < nodeCount; ++i)
            {
                int nodeNum = i + 1;
                configs.add(createInstanceConfig(nodeNum));
            }

            return factory.newCluster(root, version, configs, sharedClassLoader);
        }

