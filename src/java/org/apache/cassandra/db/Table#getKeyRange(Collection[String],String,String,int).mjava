    /**
     * @param startWith key to start with, inclusive.  empty string = start at beginning.
     * @param stopAt key to stop at, inclusive.  empty string = stop only when keys are exhausted.
     * @param maxResults
     * @return list of keys between startWith and stopAt
     */
    public List<String> getKeyRange(Collection<String> columnFamilyNames, final String startWith, final String stopAt, int maxResults)
    throws IOException, ExecutionException, InterruptedException
    {
        // TODO we need a better way to keep compactions from stomping on reads than One Big Lock per CF.
        if (columnFamilyNames.isEmpty())
        {
            columnFamilyNames = getApplicationColumnFamilies();
        }

        for (String cfName : columnFamilyNames)
        {
            getColumnFamilyStore(cfName).getReadLock().lock();
        }
        try
        {
            return getKeyRangeUnsafe(columnFamilyNames, startWith, stopAt, maxResults);
        }
        finally
        {
            for (String cfName : columnFamilyNames)
            {
                getColumnFamilyStore(cfName).getReadLock().unlock();
            }
        }
    }

