    public void reload()
    {
        assert Table.flusherLock.writeLock().isHeldByCurrentThread();
        
        // metadata object has been mutated directly. make all the members jibe with new settings.
        
        // only update these runtime-modifiable settings if they have not been modified.
        if (!minCompactionThreshold.isModified())
            minCompactionThreshold = new DefaultInteger(metadata.getMinCompactionThreshold());
        if (!maxCompactionThreshold.isModified())
            maxCompactionThreshold = new DefaultInteger(metadata.getMaxCompactionThreshold());
        if (!memtime.isModified())
            memtime = new DefaultInteger(metadata.getMemtableFlushAfterMins());
        if (!memsize.isModified())
            memsize = new DefaultInteger(metadata.getMemtableThroughputInMb());
        if (!memops.isModified())
            memops = new DefaultDouble(metadata.getMemtableOperationsInMillions());
        
        // reset the memtable with new settings.
        try
        {
            forceBlockingFlush();
        }
        catch (InterruptedException ex)
        {
            throw new RuntimeException(ex);
        }
        catch (ExecutionException ex)
        {
            throw new IOError(ex.getCause());
        }
        
        ssTables.updateCacheSizes();
        
        // figure out what needs to be added and dropped.
        Set<ByteBuffer> indexesToDrop = new HashSet<ByteBuffer>();
        Set<ColumnDefinition> indexesToAdd = new HashSet<ColumnDefinition>();
        
        for (ColumnDefinition cdef : metadata.getColumn_metadata().values())
        {
            if (!indexedColumns.containsKey(cdef.name))
                indexesToAdd.add(cdef);
        }
        for (ByteBuffer indexName : indexedColumns.keySet())
        {
            if (!metadata.getColumn_metadata().containsKey(indexName))
                indexesToDrop.add(indexName);
        }
        // drop indexes no longer needed.
        for (ByteBuffer indexName : indexesToDrop)
        {
            ColumnFamilyStore indexCfs = indexedColumns.remove(indexName);
            assert indexCfs != null;
            SystemTable.setIndexRemoved(metadata.tableName, metadata.cfName);
            indexCfs.removeAllSSTables();
        }
        // add new indexes.
        for (ColumnDefinition info : indexesToAdd)
            if (info.getIndexType() != null)
                addIndex(info);
    }

