    /**
     * returns a set with all overlapping sstables starting with s.
     * if we have 3 sstables, a, b, c where a overlaps with b, but not c and b overlaps with c, all sstables would be returned.
     *
     * m contains an sstable -> all overlapping mapping
     */
    private static Set<SSTableReader> createOverlapChain(SSTableReader s, Map<SSTableReader, Set<SSTableReader>> m)
    {
        Deque<SSTableReader> sstables = new ArrayDeque<>();
        Set<SSTableReader> overlapChain = new HashSet<>();
        sstables.push(s);
        while (!sstables.isEmpty())
        {
            SSTableReader sstable = sstables.pop();
            if (overlapChain.add(sstable))
            {
                if (m.containsKey(sstable))
                    sstables.addAll(m.get(sstable));
            }
        }
        return overlapChain;
    }

