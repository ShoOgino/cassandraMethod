    /**
     * Deserialize Keyspace with nested ColumnFamilies
     *
     * @param serializedKsDef Keyspace in serialized form
     * @param serializedCFs Collection of the serialized ColumnFamilies
     *
     * @return deserialized keyspace with cf_defs
     *
     * @throws IOException if deserialization failed
     */
    public static KSMetaData fromSchema(ColumnFamily serializedKsDef, ColumnFamily serializedCFs) throws IOException
    {
        KsDef ksDef = fromSchema(serializedKsDef);

        assert ksDef != null;

        Map<String, CfDef> cfs = deserializeColumnFamilies(serializedCFs);

        try
        {
            CFMetaData[] cfms = new CFMetaData[cfs.size()];

            int index = 0;
            for (CfDef cfDef : cfs.values())
                cfms[index++] = CFMetaData.fromThrift(cfDef);

            return fromThrift(ksDef, cfms);
        }
        catch (Exception e)
        {
            // this is critical because indicates that something is wrong with serialized schema
            throw new IOException(e);
        }
    }

