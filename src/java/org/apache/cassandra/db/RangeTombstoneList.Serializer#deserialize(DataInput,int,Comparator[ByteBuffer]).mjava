        public RangeTombstoneList deserialize(DataInput in, int version, Comparator<ByteBuffer> comparator) throws IOException
        {
            int size = in.readInt();
            if (size == 0)
                return null;

            RangeTombstoneList tombstones = new RangeTombstoneList(comparator, size);

            for (int i = 0; i < size; i++)
            {
                ByteBuffer start = ByteBufferUtil.readWithShortLength(in);
                ByteBuffer end = ByteBufferUtil.readWithShortLength(in);
                int delTime =  in.readInt();
                long markedAt = in.readLong();

                /*
                 * The previous implementation of this wasn't guaranteeing that range were not overlapping (only
                 * that they were sorted by starting bound). So we can't just use setInternal (but we will be
                 * able to in 2.0). Not a big deal though, add() is pretty fast, especially given that the
                 * start is sorted.
                 */
                tombstones.add(start, end, markedAt, delTime);
            }
            return tombstones;
        }

