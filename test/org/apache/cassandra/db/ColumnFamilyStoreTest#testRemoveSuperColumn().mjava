    @Test
    public void testRemoveSuperColumn() throws IOException, ColumnFamilyNotDefinedException {
        Table table = Table.open("Table1");
        ColumnFamilyStore store = table.getColumnFamilyStore("Super1");
        RowMutation rm;

        // add data
        rm = new RowMutation("Table1", "key1");
        rm.add("Super1:SC1:Column1", "asdf".getBytes(), 0);
        rm.apply();
        store.forceFlush();

        // remove
        rm = new RowMutation("Table1", "key1");
        ColumnFamily cf = new ColumnFamily("Super1");
        SuperColumn sc = new SuperColumn("SC1");
        sc.markForDeleteAt(1);
        cf.addColumn(sc);
        rm.add(cf);
        rm.apply();

        List<ColumnFamily> families = store.getColumnFamilies("key1", "Super1", new IdentityFilter());
        assert families.get(0).getAllColumns().first().getMarkedForDeleteAt() == 1; // delete marker, just added
        assert !families.get(1).getAllColumns().first().isMarkedForDelete(); // flushed old version
        ColumnFamily resolved = ColumnFamilyStore.resolve(families);
        assert resolved.getAllColumns().first().getMarkedForDeleteAt() == 1;
        Collection<IColumn> subColumns = resolved.getAllColumns().first().getSubColumns();
        assert subColumns.size() == 1;
        assert subColumns.iterator().next().timestamp() == 0;
        assert ColumnFamilyStore.removeDeleted(resolved).getColumnCount() == 0;
    }

