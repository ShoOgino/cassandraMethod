    private static void testReading() throws IOException
    {
        StorageService.instance.initClient();
        // sleep for a bit so that gossip can do its thing.
        try
        {
            Thread.sleep(10000L);
        }
        catch (Exception ex)
        {
        }

        // do some queries.
        Collection<byte[]> cols = new ArrayList<byte[]>()
        {{
            add("colb".getBytes());
        }};
        for (int i = 0; i < 100; i++)
        {
            List<ReadCommand> commands = new ArrayList<ReadCommand>();
            SliceByNamesReadCommand readCommand = new SliceByNamesReadCommand("Keyspace1", "key" + i, new QueryPath("Standard1", null, null), cols);
            readCommand.setDigestQuery(false);
            commands.add(readCommand);
            try
            {
                List<Row> rows = StorageProxy.readProtocol(commands, ConsistencyLevel.ONE);
                assert rows.size() == 1;
                Row row = rows.get(0);
                ColumnFamily cf = row.cf;
                if (cf != null)
                {
                    for (IColumn col : cf.getSortedColumns())
                    {
                        System.out.println(new String(col.name()) + ", " + new String(col.value()));
                    }
                }
                else
                    System.err.println("This output indicates that nothing was read.");
            }
            catch (UnavailableException e)
            {
                throw new RuntimeException(e);
            }
            catch (TimeoutException e)
            {
                throw new RuntimeException(e);
            }

        }

        // no need to do this:
        // StorageService.instance().decommission();
        // do this instead:
        StorageService.instance.stopClient();
    }

