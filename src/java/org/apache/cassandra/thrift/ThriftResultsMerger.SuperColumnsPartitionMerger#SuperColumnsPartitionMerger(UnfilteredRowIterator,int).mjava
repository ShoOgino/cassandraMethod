        private SuperColumnsPartitionMerger(UnfilteredRowIterator results, int nowInSec)
        {
            super(results);
            assert results.metadata().isSuper();
            this.nowInSec = nowInSec;

            this.superColumnMapColumn = results.metadata().compactValueColumn();
            assert superColumnMapColumn != null && superColumnMapColumn.type instanceof MapType;

            this.reusableRow = new ReusableRow(results.metadata().clusteringColumns().size(),
                                               Columns.of(superColumnMapColumn),
                                               true,
                                               results.metadata().isCounter());
            this.columnComparator = ((MapType)superColumnMapColumn.type).nameComparator();
        }

