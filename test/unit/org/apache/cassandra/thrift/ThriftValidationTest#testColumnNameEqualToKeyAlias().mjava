    @Test
    public void testColumnNameEqualToKeyAlias() throws org.apache.cassandra.exceptions.InvalidRequestException
    {
        CFMetaData metaData = Schema.instance.getCFMetaData("Keyspace1", "Standard1");
        CFMetaData newMetadata = metaData.clone();

        boolean gotException = false;

        // add a key_alias = "id"
        // should not throw IRE here
        try
        {
            newMetadata.addColumnDefinition(ColumnDefinition.partitionKeyDef(AsciiType.instance.decompose("id"), LongType.instance, null));
            newMetadata.validate();
        }
        catch (ConfigurationException e)
        {
            gotException = true;
        }

        assert !gotException : "got unexpected ConfigurationException";


        gotException = false;

        // add a column with name = "id"
        try
        {
            newMetadata.addColumnDefinition(ColumnDefinition.regularDef(ByteBufferUtil.bytes("id"), LongType.instance, null));
            newMetadata.validate();
        }
        catch (ConfigurationException e)
        {
            gotException = true;
        }

        assert gotException : "expected ConfigurationException but not received.";

        // make sure the key alias does not affect validation of columns with the same name (CASSANDRA-6892)
        Column column = new Column(ByteBufferUtil.bytes("id"));
        column.setValue(ByteBufferUtil.bytes("not a long"));
        column.setTimestamp(1234);
        ThriftValidation.validateColumnData(newMetadata, column, false);
    }

