    /**
     * @param keyspace ALWAYS specify
     * @param columnFamily ALWAYS specify
     * @param specifier ALWAYS specify
     * @param def avoids additional map lookup if specified. null is ok. though.
     * @return
     */
    private AbstractType getComparator(String keyspace, String columnFamily, Specifier specifier, CfDef def) 
    {
        // check cache first.
        String key = String.format(MapFormatString, keyspace, columnFamily, specifier.name());
        AbstractType comparator = comparators.get(key);

        // make and put in cache.
        if (comparator == null) 
        {
            if (def == null)
                def = cfDefs.get(String.format("%s.%s", keyspace, columnFamily));
            try 
            {
                switch (specifier)
                {
                    case Validator:
                        comparator = FBUtilities.getComparator(def.getDefault_validation_class());
                        break;
                    case Comparator:
                    default:
                        comparator = FBUtilities.getComparator(def.getComparator_type());
                        break;
                }
                comparators.put(key, comparator);
            }
            catch (ConfigurationException ex)
            {
                throw new RuntimeException(ex);
            }
        }
        return comparator;
    }

