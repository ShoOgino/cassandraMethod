    /**
     * Given the number of buckets that can be used per element, return the optimal
     * number of hash functions in order to minimize the false positive rate.
     *
     * @param bucketsPerElement
     * @return The number of hash functions that minimize the false positive rate.
     */
    public static int computeBestK(int bucketsPerElement){
        assert bucketsPerElement >= 0;
        if(bucketsPerElement >= optKPerBuckets.length)
            return optKPerBuckets[optKPerBuckets.length-1];
        return optKPerBuckets[bucketsPerElement];
    }

