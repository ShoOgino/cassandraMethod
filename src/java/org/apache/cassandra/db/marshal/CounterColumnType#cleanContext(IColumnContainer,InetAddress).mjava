    /**
     * remove target node from commutative columns
     */
    public void cleanContext(IColumnContainer cc, InetAddress node)
    {
        if ((cc instanceof ColumnFamily) && ((ColumnFamily)cc).isSuper())
        {
            for (IColumn column : cc.getSortedColumns())
            {
                SuperColumn supercol = (SuperColumn)column;
                cleanContext(supercol, node);
                if (0 == supercol.getSubColumns().size())
                    cc.remove(supercol.name());
            }
            return;
        }

        for (IColumn column : cc.getSortedColumns())
        {
            CounterColumn counterColumn = (CounterColumn)column;
            CounterColumn cleanedColumn = counterColumn.cleanNodeCounts(node);
            if (cleanedColumn == counterColumn)
                continue;
            cc.remove(counterColumn.name());
            //XXX: on "clean," must copy-and-replace
            if (null != cleanedColumn)
                cc.addColumn(cleanedColumn);
        }
    }

