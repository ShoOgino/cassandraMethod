    public InetAddress getNextEndpoint(InetAddress endpoint) throws UnavailableException
    {
        assert endpoint != null;

        lock.readLock().lock();
        try
        {
            ArrayList<Token> tokens = new ArrayList<Token>(tokenToEndPointMap.keySet());
            if (tokens.isEmpty())
                return null;
            Collections.sort(tokens);
            int i = tokens.indexOf(tokenToEndPointMap.inverse().get(endpoint)); // TODO binary search
            int j = 1;
            InetAddress ep;
            while (!FailureDetector.instance().isAlive((ep = tokenToEndPointMap.get(tokens.get((i + j) % tokens.size())))))
            {
                if (++j > DatabaseDescriptor.getReplicationFactor())
                {
                    throw new UnavailableException();
                }
            }
            return ep;
        }
        finally
        {
            lock.readLock().unlock();
        }
    }

