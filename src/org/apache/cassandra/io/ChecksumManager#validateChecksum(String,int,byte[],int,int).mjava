    /**
     * Validate checksums for the data in the buffer for the region
     * that is encapsulated in the section object
     * @file name of the file from which data is being
     *       read.
     * @chunkId chunkId     
     * @param buffer with data for which checksum needs to be 
     *        verified.
     * @param startOffset within the buffer
     * @param length of the data whose checksum needs to be verified.
     * @throws IOException
     */
    void validateChecksum(String file, int chunkId, byte[] buffer, int startOffset, int length) throws IOException
    {            
        int fId = SequenceFile.getFileId(file);
        long key = ChecksumManager.key(fId, chunkId);
        adler_.update(buffer, startOffset, length);
        long currentChksum = adler_.getValue();
        adler_.reset();
        long oldChksum = chksums_.get(key);
        if ( currentChksum != oldChksum )
        {                                   
            throw new IOException("Checksums do not match in file " + file + " for chunk " + chunkId + ".");
        }        
    }

