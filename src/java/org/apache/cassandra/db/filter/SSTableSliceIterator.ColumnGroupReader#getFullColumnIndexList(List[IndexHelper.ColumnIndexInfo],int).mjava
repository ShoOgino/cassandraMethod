        /**
         *   Build a list of index entries ready for search.
         */
        private List<IndexHelper.ColumnIndexInfo> getFullColumnIndexList(List<IndexHelper.ColumnIndexInfo> columnIndexList, int totalColumns)
        {
            if (columnIndexList.size() == 0)
            {
                /* if there is no column index, add an index entry that covers the full space. */
                return Arrays.asList(new IndexHelper.ColumnIndexInfo(ArrayUtils.EMPTY_BYTE_ARRAY, 0, totalColumns, comparator_));
            }

            List<IndexHelper.ColumnIndexInfo> fullColIndexList = new ArrayList<IndexHelper.ColumnIndexInfo>();
            int accumulatedColumns = 0;
            for (IndexHelper.ColumnIndexInfo colPosInfo : columnIndexList)
                accumulatedColumns += colPosInfo.count();
            int remainingCols = totalColumns - accumulatedColumns;

            fullColIndexList.add(new IndexHelper.ColumnIndexInfo(ArrayUtils.EMPTY_BYTE_ARRAY, 0, columnIndexList.get(0).count(), comparator_));
            for (int i = 0; i < columnIndexList.size() - 1; i++)
            {
                IndexHelper.ColumnIndexInfo colPosInfo = columnIndexList.get(i);
                fullColIndexList.add(new IndexHelper.ColumnIndexInfo(colPosInfo.name(),
                                                                     colPosInfo.position(),
                                                                     columnIndexList.get(i + 1).count(),
                                                                     comparator_));
            }
            byte[] columnName = columnIndexList.get(columnIndexList.size() - 1).name();
            fullColIndexList.add(new IndexHelper.ColumnIndexInfo(columnName,
                                                                 columnIndexList.get(columnIndexList.size() - 1).position(),
                                                                 remainingCols,
                                                                 comparator_));
            return fullColIndexList;
        }

