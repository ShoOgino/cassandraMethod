    /**
     * {@inheritDoc}
     *
     * Invoked when the channel is made active, and sends out the {@link FirstHandshakeMessage}.
     * In the case of streaming, we do not require a full bi-directional handshake; the initial message,
     * containing the streaming protocol version, is all that is required.
     */
    @Override
    public void channelActive(final ChannelHandlerContext ctx) throws Exception
    {
        FirstHandshakeMessage msg = new FirstHandshakeMessage(messagingVersion, mode, params.compress);
        logger.trace("starting handshake with peer {}, msg = {}", connectionId.connectionAddress(), msg);
        ctx.writeAndFlush(msg.encode(ctx.alloc())).addListener(future -> firstHandshakeMessageListener(future, ctx));

        if (mode == NettyFactory.Mode.STREAMING)
            ctx.pipeline().remove(this);

        ctx.fireChannelActive();
    }

