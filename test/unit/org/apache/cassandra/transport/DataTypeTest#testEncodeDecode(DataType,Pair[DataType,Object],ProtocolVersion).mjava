    private void testEncodeDecode(DataType type, Pair<DataType, Object> options, ProtocolVersion version)
    {
        int optLength = DataType.codec.oneSerializedSize(options, version);
        ByteBuf dest = Unpooled.buffer(optLength);
        DataType.codec.writeOne(options, dest, version);
        Pair<DataType, Object> result = DataType.codec.decodeOne(dest, version);

        System.out.println(result + "version " + version);
        int ssize = type.serializedValueSize(result.right, version);
        int esize = version.isSmallerThan(type.getProtocolVersion()) ? 2 + TypeSizes.encodedUTF8Length(result.right.toString()) : 0;
        switch (type)
        {
            case LIST:
            case SET:
                esize += 2;
                break;
            case MAP:
                esize += 4;
                break;
            case CUSTOM:
                esize = 8;
                break;
        }
        assertEquals(esize, ssize);

        DataType expected = version.isSmallerThan(type.getProtocolVersion())
            ? DataType.CUSTOM
            : type;
        assertEquals(expected, result.left);
   }

