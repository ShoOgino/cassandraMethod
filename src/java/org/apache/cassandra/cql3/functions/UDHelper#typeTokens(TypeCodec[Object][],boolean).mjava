    /**
     * Construct an array containing the Java classes for the given Java Driver {@link com.datastax.driver.core.DataType}s.
     *
     * @param dataTypes  array with UDF argument types
     * @param calledOnNullInput whether to allow {@code null} as an argument value
     * @return array of same size with UDF arguments
     */
    public static TypeToken<?>[] typeTokens(TypeCodec<Object>[] dataTypes, boolean calledOnNullInput)
    {
        TypeToken<?>[] paramTypes = new TypeToken[dataTypes.length];
        for (int i = 0; i < paramTypes.length; i++)
        {
            TypeToken<?> typeToken = dataTypes[i].getJavaType();
            if (!calledOnNullInput)
            {
                // only care about classes that can be used in a data type
                Class<?> clazz = typeToken.getRawType();
                if (clazz == Integer.class)
                    typeToken = TypeToken.of(int.class);
                else if (clazz == Long.class)
                    typeToken = TypeToken.of(long.class);
                else if (clazz == Byte.class)
                    typeToken = TypeToken.of(byte.class);
                else if (clazz == Short.class)
                    typeToken = TypeToken.of(short.class);
                else if (clazz == Float.class)
                    typeToken = TypeToken.of(float.class);
                else if (clazz == Double.class)
                    typeToken = TypeToken.of(double.class);
                else if (clazz == Boolean.class)
                    typeToken = TypeToken.of(boolean.class);
            }
            paramTypes[i] = typeToken;
        }
        return paramTypes;
    }

