    /** add a column family. */
    public static Future add(final CFMetaData cfm)
    {
        return executor.submit(new WrappedRunnable() 
        {
            protected void runMayThrow() throws Exception
            {
                // make sure the ks is real and the cf doesn't already exist.
                KSMetaData ksm = DatabaseDescriptor.getTableDefinition(cfm.tableName);
                if (ksm == null)
                    throw new ConfigurationException("Keyspace does not already exist.");
                else if (ksm.cfMetaData().containsKey(cfm.cfName))
                    throw new ConfigurationException("CF is already defined in that keyspace.");
        
                // clone ksm but include the new cf def.
                List<CFMetaData> newCfs = new ArrayList<CFMetaData>(ksm.cfMetaData().values());
                newCfs.add(cfm);
                ksm = new KSMetaData(ksm.name, ksm.strategyClass, ksm.replicationFactor, ksm.snitch, newCfs.toArray(new CFMetaData[newCfs.size()]));
        
                // store it.
                UUID newVersion = saveKeyspaceDefinition(ksm);
        
                // reinitialize the table.
                Table.open(ksm.name).addCf(cfm.cfName);
                DatabaseDescriptor.setTableDefinition(ksm, newVersion);
                
                // force creation of a new commit log segment.
                CommitLog.instance().forceNewSegment();    
            }
        });     
    }

