    private static void deliverAllHints(ColumnFamilyStore columnFamilyStore)
    {
        logger_.debug("Started hinted handoff of " + columnFamilyStore.columnFamily_);

        // 1. Scan through all the keys that we need to handoff
        // 2. For each key read the list of recepients and send
        // 3. Delete that recepient from the key if write was successful
        // 4. If all writes were success for a given key we can even delete the key .
        // 5. Now force a flush
        // 6. Do major compaction to clean up all deletes etc.
        // 7. I guess we r done
        Table table = Table.open(DatabaseDescriptor.getTables().get(0));
        ColumnFamily hintColumnFamily = null;
        try
        {
            hintColumnFamily = table.get(key_, Table.hints_);
            if (hintColumnFamily == null)
            {
                columnFamilyStore.forceFlush();
                return;
            }
            Collection<IColumn> keys = hintColumnFamily.getAllColumns();
            if (keys == null)
            {
                return;
            }

            for (IColumn keyColumn : keys)
            {
                Collection<IColumn> endpoints = keyColumn.getSubColumns();
                // endpoints could be null if the server were terminated during a previous runHints
                // after deleteEndPoint but before deleteKey.
                boolean allsuccess = true;
                if (endpoints != null)
                {
                    for (IColumn endpoint : endpoints)
                    {
                        if (sendMessage(endpoint.name(), keyColumn.name()))
                        {
                            deleteEndPoint(endpoint.name(), keyColumn.name());
                        }
                        else
                        {
                            allsuccess = false;
                        }
                    }
                }
                if (allsuccess)
                {
                    deleteKey(keyColumn.name());
                }
            }
            columnFamilyStore.forceFlush();
            columnFamilyStore.forceCompaction(null, null, 0, null);
        }
        catch (Exception ex)
        {
            logger_.error(ex.getMessage());
        }
        finally
        {
            logger_.debug("Finished hinted handoff of " + columnFamilyStore.columnFamily_);
        }
    }

