    public void testArrayUncompress(byte[] data, int off, int len) throws IOException
    {
        ByteBuffer src = makeBB(len);
        src.put(data, off, len);
        src.rewind();

        final int outOffset = 3;
        final WrappedByteBuffer compressed = makeWrappedBB(outOffset + compressor.initialCompressedBufferLength(len));
        fillBBWithRandom(compressed.buffer);
        compressed.buffer.clear();
        compressed.buffer.position(outOffset);

        final int compressedLength = compressor.compress(src, compressed);

        final int restoreOffset = 5;
        final byte[] restored = new byte[restoreOffset + len];
        new Random().nextBytes(restored);

        // need byte[] representation which direct buffers don't have
        byte[] compressedBytes = new byte[compressed.buffer.capacity()];
        ByteBufferUtil.arrayCopy(compressed.buffer, outOffset, compressedBytes, 0, compressed.buffer.capacity() - outOffset);

        final int decompressedLength = compressor.uncompress(compressedBytes, 0, compressedLength, restored, restoreOffset);

        assertEquals(decompressedLength, len);
        assertArrayEquals(Arrays.copyOfRange(data, off, off + len),
                Arrays.copyOfRange(restored, restoreOffset, restoreOffset + decompressedLength));
    }

