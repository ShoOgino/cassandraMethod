    /**
     * JIRA: CASSANDRA-15595 verify large position with small chunk length won't overflow chunk index
     */
    @Test
    public void testChunkIndexOverflow() throws IOException
    {
        File file = File.createTempFile("chunk_idx_overflow", "1");
        String filename = file.getAbsolutePath();
        int chunkLength = 4096; // 4k

        try
        {
            writeSSTable(file, CompressionParams.snappy(chunkLength), 10);
            CompressionMetadata metadata = new CompressionMetadata(filename + ".metadata", file.length(), ChecksumType.CRC32);

            long chunks = 2761628520L;
            long midPosition = (chunks / 2L) * chunkLength;
            int idx = 8 * (int) (midPosition / chunkLength); // before patch
            assertTrue("Expect integer overflow", idx < 0);

            try
            {
                metadata.chunkFor(midPosition);
                fail("Expected to throw EOF exception with chunk idx larger than total number of chunks in the sstable");
            }
            catch (CorruptSSTableException e)
            {
                assertTrue("Expect EOF, but got " + e.getCause(), e.getCause() instanceof EOFException);
            }
        }
        finally
        {
            if (file.exists())
                assertTrue(file.delete());
            File metadata = new File(filename + ".metadata");
            if (metadata.exists())
                metadata.delete();
        }
    }

