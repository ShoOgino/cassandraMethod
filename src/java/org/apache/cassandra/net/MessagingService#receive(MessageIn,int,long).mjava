    public void receive(MessageIn message, int id, long timestamp)
    {
        Tracing.instance().initializeFromMessage(message);
        Tracing.trace("Message received from {}", message.from);

        message = SinkManager.processInboundMessage(message, id);
        if (message == null)
            return;

        Runnable runnable = new MessageDeliveryTask(message, id, timestamp);
        ExecutorService stage = StageManager.getStage(message.getMessageType());
        assert stage != null : "No stage for message type " + message.verb;

        if (message.verb == Verb.REQUEST_RESPONSE && PBSPredictor.instance().isLoggingEnabled())
        {
            IAsyncCallback cb = MessagingService.instance().getRegisteredCallback(id).callback;

            if (cb instanceof AbstractWriteResponseHandler)
            {
                PBSPredictor.instance().logWriteResponse(id, timestamp);
            }
            else if (cb instanceof ReadCallback)
            {
                PBSPredictor.instance().logReadResponse(id, timestamp);
            }
        }

        stage.execute(runnable);
    }

