    @Test
    public void testMultiDCSimpleStrategyEndpoints() throws UnknownHostException
    {
        IEndpointSnitch snitch = new PropertyFileSnitch();
        DatabaseDescriptor.setEndpointSnitch(snitch);

        TokenMetadata metadata = new TokenMetadata();

        AbstractReplicationStrategy strategy = getStrategy(MULTIDC, metadata, snitch);

        // Topology taken directly from the topology_test.test_size_estimates_multidc dtest that regressed
        Multimap<InetAddressAndPort, Token> dc1 = HashMultimap.create();
        dc1.put(InetAddressAndPort.getByName("127.0.0.1"), new Murmur3Partitioner.LongToken(-6639341390736545756L));
        dc1.put(InetAddressAndPort.getByName("127.0.0.1"), new Murmur3Partitioner.LongToken(-2688160409776496397L));
        dc1.put(InetAddressAndPort.getByName("127.0.0.2"), new Murmur3Partitioner.LongToken(-2506475074448728501L));
        dc1.put(InetAddressAndPort.getByName("127.0.0.2"), new Murmur3Partitioner.LongToken(8473270337963525440L));
        metadata.updateNormalTokens(dc1);

        Multimap<InetAddressAndPort, Token> dc2 = HashMultimap.create();
        dc2.put(InetAddressAndPort.getByName("127.0.0.4"), new Murmur3Partitioner.LongToken(-3736333188524231709L));
        dc2.put(InetAddressAndPort.getByName("127.0.0.4"), new Murmur3Partitioner.LongToken(8673615181726552074L));
        metadata.updateNormalTokens(dc2);

        Map<InetAddressAndPort, Integer> primaryCount = new HashMap<>();
        Map<InetAddressAndPort, Integer> replicaCount = new HashMap<>();
        for (Token t : metadata.sortedTokens())
        {
            EndpointsForToken replicas = strategy.getNaturalReplicasForToken(t);
            primaryCount.compute(replicas.get(0).endpoint(), (k, v) -> (v == null) ? 1 : v + 1);
            for (Replica replica : replicas)
                replicaCount.compute(replica.endpoint(), (k, v) -> (v == null) ? 1 : v + 1);
        }

        // All three hosts should have 2 "primary" replica ranges and 6 total ranges with RF=3, 3 nodes and 2 DCs.
        for (InetAddressAndPort addr : primaryCount.keySet())
        {
            assertEquals(2, (int) primaryCount.get(addr));
            assertEquals(6, (int) replicaCount.get(addr));
        }
    }

