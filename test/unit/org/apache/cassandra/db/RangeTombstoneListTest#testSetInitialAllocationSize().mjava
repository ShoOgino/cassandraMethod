    @Test
    public void testSetInitialAllocationSize()
    {
        int original = DatabaseDescriptor.getInitialRangeTombstoneListAllocationSize();
        final StorageService storageService = StorageService.instance;
        final Consumer<Throwable> expectIllegalStateExceptio = exception -> {
            assertSame(String.format("The actual exception message:<%s>", exception.getMessage()), IllegalStateException.class, exception.getClass());
            assertEquals("Not updating initial_range_tombstone_allocation_size as it must be in the range [0, 1024] inclusive" , exception.getMessage());
        };
        try
        {
            // prevent bad ones
            assertHasException(() -> storageService.setInitialRangeTombstoneListAllocationSize(-1), expectIllegalStateExceptio);
            assertHasException(() -> storageService.setInitialRangeTombstoneListAllocationSize(1025), expectIllegalStateExceptio);

            // accept good ones
            storageService.setInitialRangeTombstoneListAllocationSize(1);
            storageService.setInitialRangeTombstoneListAllocationSize(1024);
        }
        finally
        {
            storageService.setInitialRangeTombstoneListAllocationSize(original);
        }
    }

