        public ColumnGroupReader(String filename, String key, AbstractType comparator, byte[] startColumn, boolean isAscending, long position) throws IOException
        {
            this.file_ = new BufferedRandomAccessFile(filename, "r");
            this.isAscending_ = isAscending;

            file_.seek(position);
            String keyInDisk = file_.readUTF();
            assert keyInDisk.equals(key);

            file_.readInt(); // row size
            IndexHelper.skipBloomFilter(file_);
            indexList_ = IndexHelper.deserializeIndex(file_);

            /* need to do two things here.
             * 1. move the file pointer to the beginning of the list of stored columns
             * 2. calculate the size of all columns */
            emptyColumnFamily = ColumnFamily.serializer().deserializeEmpty(file_);
            file_.readInt(); // column count

            columnStartPosition_ = file_.getFilePointer();

            if (startColumn.length == 0 && !isAscending_)
            {
                /* in this case, we assume that we want to scan from the largest column in descending order. */
                curRangeIndex_ = indexList_.size() - 1;
            }
            else
            {
                curRangeIndex_ = IndexHelper.indexFor(startColumn, indexList_, comparator);
            }
        }

