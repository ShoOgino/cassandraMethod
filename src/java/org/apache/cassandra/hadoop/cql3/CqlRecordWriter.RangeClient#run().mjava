        /**
         * Loops collecting cql binded variable values from the queue and sending to Cassandra
         */
        public void run()
        {
            outer:
            while (run || !queue.isEmpty())
            {
                List<ByteBuffer> bindVariables;
                try
                {
                    bindVariables = queue.take();
                }
                catch (InterruptedException e)
                {
                    // re-check loop condition after interrupt
                    continue;
                }

                ListIterator<InetAddress> iter = endpoints.listIterator();
                while (true)
                {
                    // send the mutation to the last-used endpoint.  first time through, this will NPE harmlessly.

                    // attempt to connect to a different endpoint
                    try
                    {
                        InetAddress address = iter.next();
                        String host = address.getHostName();
                        client = CqlConfigHelper.getOutputCluster(host, conf).connect();
                    }
                    catch (Exception e)
                    {
                        //If connection died due to Interrupt, just try connecting to the endpoint again.
                        if (Thread.interrupted()) {
                            lastException = new IOException(e);
                            iter.previous();
                        }
                        closeInternal();

                        // Most exceptions mean something unexpected went wrong to that endpoint, so
                        // we should try again to another.  Other exceptions (auth or invalid request) are fatal.
                        if ((e instanceof AuthenticationException || e instanceof InvalidQueryException) || !iter.hasNext())
                        {
                            lastException = new IOException(e);
                            break outer;
                        }
                    }

                    try
                    {
                        int i = 0;
                        PreparedStatement statement = preparedStatement(client);
                        while (bindVariables != null)
                        {
                            BoundStatement boundStatement = new BoundStatement(statement);
                            for (int columnPosition = 0; columnPosition < bindVariables.size(); columnPosition++)
                            {
                                boundStatement.setBytesUnsafe(columnPosition, bindVariables.get(columnPosition));
                            }
                            client.execute(boundStatement);
                            i++;
                            
                            if (i >= batchThreshold)
                                break;
                            bindVariables = queue.poll();
                        }
                        break;
                    }
                    catch (Exception e)
                    {
                        closeInternal();
                        if (!iter.hasNext())
                        {
                            lastException = new IOException(e);
                            break outer;
                        }
                    }

                }
            }
            // close all our connections once we are done.
            closeInternal();
        }

