    // Comparator used when the last clustering key is an IN, to sort result
    // rows in the order of the values provided for the IN.
    private Comparator<ByteBuffer> makeComparatorFor(final List<ByteBuffer> values)
    {
        // This may not always be the most efficient, but it probably is if
        // values is small, which is likely to be the most common case.
        return new Comparator<ByteBuffer>()
        {
            public int compare(ByteBuffer b1, ByteBuffer b2)
            {
                int idx1 = -1;
                int idx2 = -1;
                for (int i = 0; i < values.size(); i++)
                {
                    ByteBuffer bb = values.get(i);
                    if (bb.equals(b1))
                        idx1 = i;
                    if (bb.equals(b2))
                        idx2 = i;

                    if (idx1 >= 0 && idx2 >= 0)
                        break;
                }
                assert idx1 >= 0 && idx2 >= 0 : "Got CQL3 row that was not queried in resultset";
                return idx1 - idx2;
            }
        };
    }

