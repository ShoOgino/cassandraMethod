    public void apply(ColumnDefinition def, AbstractType<?> comparator)  throws ConfigurationException
    {
        if (getIndexType() != null && def.getIndexType() != null)
        {
            // If an index is set (and not drop by this update), the validator shouldn't be change to a non-compatible one
            // (and we want true comparator compatibility, not just value one, since the validator is used by LocalPartitioner to order index rows)
            if (!def.getValidator().isCompatibleWith(getValidator()))
                throw new ConfigurationException(String.format("Cannot modify validator to a non-order-compatible one for column %s since an index is set", comparator.getString(name)));

            assert getIndexName() != null;
            if (!getIndexName().equals(def.getIndexName()))
                throw new ConfigurationException("Cannot modify index name");
        }

        if ((componentIndex != null && !componentIndex.equals(def.componentIndex))
         || (componentIndex == null && def.componentIndex != null))
            throw new ConfigurationException(String.format("Cannot modify component index for column %s", comparator.getString(name)));

        setValidator(def.getValidator());
        setIndexType(def.getIndexType(), def.getIndexOptions());
        setIndexName(def.getIndexName());
    }

