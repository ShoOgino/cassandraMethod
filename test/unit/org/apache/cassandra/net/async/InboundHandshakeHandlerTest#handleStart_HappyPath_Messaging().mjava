    @Test
    public void handleStart_HappyPath_Messaging() throws IOException
    {
        buf = new FirstHandshakeMessage(MESSAGING_VERSION, MESSAGING, true).encode(PooledByteBufAllocator.DEFAULT);
        State state = handler.handleStart(channel.pipeline().firstContext(), buf);
        Assert.assertEquals(State.AWAIT_MESSAGING_START_RESPONSE, state);
        if (buf.refCnt() > 0)
            buf.release();

        buf = new ThirdHandshakeMessage(MESSAGING_VERSION, addr).encode(PooledByteBufAllocator.DEFAULT);
        state = handler.handleMessagingStartResponse(channel.pipeline().firstContext(), buf);

        Assert.assertEquals(State.HANDSHAKE_COMPLETE, state);
        Assert.assertTrue(channel.isOpen());
        Assert.assertTrue(channel.isActive());
        Assert.assertFalse(channel.outboundMessages().isEmpty());
        channel.releaseOutbound();
    }

