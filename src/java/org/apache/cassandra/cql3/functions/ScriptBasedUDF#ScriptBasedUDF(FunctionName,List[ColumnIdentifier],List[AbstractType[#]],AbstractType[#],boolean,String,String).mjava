    ScriptBasedUDF(FunctionName name,
                   List<ColumnIdentifier> argNames,
                   List<AbstractType<?>> argTypes,
                   AbstractType<?> returnType,
                   boolean calledOnNullInput,
                   String language,
                   String body)
    throws InvalidRequestException
    {
        super(name, argNames, argTypes, returnType, calledOnNullInput, language, body);

        if (!"JavaScript".equalsIgnoreCase(language))
            logger.warn("Support for UDFs using '" + language + "' has been deprecated and removed in 3.0. If '" +
                        language + "' actually is JavaScript, change the language used in CREATE/ALTER FUNCTION to " +
                        "'javascript'.");

        Compilable scriptEngine = scriptEngines.get(language);
        if (scriptEngine == null)
            throw new InvalidRequestException(String.format("Invalid language '%s' for function '%s'", language, name));

        try
        {
            this.script = scriptEngine.compile(body);
        }
        catch (RuntimeException | ScriptException e)
        {
            logger.info("Failed to compile function '{}' for language {}: ", name, language, e);
            throw new InvalidRequestException(
                    String.format("Failed to compile function '%s' for language %s: %s", name, language, e));
        }
    }

