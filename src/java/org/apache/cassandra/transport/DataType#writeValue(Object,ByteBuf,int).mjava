    public void writeValue(Object value, ByteBuf cb, int version)
    {
        switch (this)
        {
            case CUSTOM:
                assert value instanceof String;
                CBUtil.writeString((String)value, cb);
                break;
            case LIST:
                codec.writeOne(DataType.fromType((AbstractType)value, version), cb, version);
                break;
            case SET:
                codec.writeOne(DataType.fromType((AbstractType)value, version), cb, version);
                break;
            case MAP:
                List<AbstractType> l = (List<AbstractType>)value;
                codec.writeOne(DataType.fromType(l.get(0), version), cb, version);
                codec.writeOne(DataType.fromType(l.get(1), version), cb, version);
                break;
            case UDT:
                UserType udt = (UserType)value;
                CBUtil.writeString(udt.keyspace, cb);
                CBUtil.writeString(UTF8Type.instance.compose(udt.name), cb);
                cb.writeShort(udt.fieldNames.size());
                for (int i = 0; i < udt.fieldNames.size(); i++)
                {
                    CBUtil.writeString(UTF8Type.instance.compose(udt.fieldNames.get(i)), cb);
                    codec.writeOne(DataType.fromType(udt.fieldTypes.get(i), version), cb, version);
                }
                break;
        }
    }

