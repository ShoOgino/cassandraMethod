    /**
     * Sets the {@code i}th value to the provided map.
     *
     * <p>This method uses the {@link CodecRegistry} to find a codec to handle the conversion to the
     * underlying CQL type (the type of the elements in the Java map is not considered). If two or
     * more codecs target that CQL type, the one that was first registered will be used. For this
     * reason, it is generally preferable to use the more deterministic methods {@link #setMap(int,
     * Map, Class, Class)} or {@link #setMap(int, Map, TypeToken, TypeToken)}.
     *
     * @param i the index of the value to set.
     * @param v the value to set. Note that {@code null} values inside collections are not supported
     *          by CQL.
     * @return this object.
     * @throws IndexOutOfBoundsException if {@code i} is not a valid index for this object.
     * @throws NullPointerException      if {@code v} contains null values. Nulls are not supported in
     *                                   collections by CQL.
     * @throws CodecNotFoundException    if there is no registered codec to convert the value to the
     *                                   underlying CQL type.
     */
    public <K, V> T setMap(int i, Map<K, V> v);

