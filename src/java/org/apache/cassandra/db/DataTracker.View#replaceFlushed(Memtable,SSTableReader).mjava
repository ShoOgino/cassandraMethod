        View replaceFlushed(Memtable flushedMemtable, SSTableReader newSSTable)
        {
            int index = flushingMemtables.indexOf(flushedMemtable);
            List<Memtable> newQueuedMemtables = ImmutableList.<Memtable>builder()
                                                             .addAll(flushingMemtables.subList(0, index))
                                                             .addAll(flushingMemtables.subList(index + 1, flushingMemtables.size()))
                                                             .build();
            Set<SSTableReader> newSSTables = sstables;
            SSTableIntervalTree intervalTree = this.intervalTree;
            if (newSSTable != null)
            {
                assert !sstables.contains(newSSTable);
                assert !shadowed.contains(newSSTable);
                newSSTables = ImmutableSet.<SSTableReader>builder().addAll(sstables).add(newSSTable).build();
                intervalTree = buildIntervalTree(newSSTables);
            }
            return new View(liveMemtables, newQueuedMemtables, newSSTables, compacting, shadowed, intervalTree);
        }

