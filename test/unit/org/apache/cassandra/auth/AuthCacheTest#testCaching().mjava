    @Test
    public void testCaching()
    {
        AuthCache<String, String> authCache = new AuthCache<>("TestCache",
                                                              DatabaseDescriptor::setCredentialsValidity,
                                                              DatabaseDescriptor::getCredentialsValidity,
                                                              DatabaseDescriptor::setCredentialsUpdateInterval,
                                                              DatabaseDescriptor::getCredentialsUpdateInterval,
                                                              DatabaseDescriptor::setCredentialsCacheMaxEntries,
                                                              DatabaseDescriptor::getCredentialsCacheMaxEntries,
                                                              this::load,
                                                              () -> true
        );

        // Test cacheloader is called if set
        loadFuncCalled = false;
        String result = authCache.get("test");
        assertTrue(loadFuncCalled);
        Assert.assertEquals("load", result);

        // value should be fetched from cache
        loadFuncCalled = false;
        String result2 = authCache.get("test");
        assertFalse(loadFuncCalled);
        Assert.assertEquals("load", result2);

        // value should be fetched from cache after complete invalidate
        authCache.invalidate();
        loadFuncCalled = false;
        String result3 = authCache.get("test");
        assertTrue(loadFuncCalled);
        Assert.assertEquals("load", result3);

        // value should be fetched from cache after invalidating key
        authCache.invalidate("test");
        loadFuncCalled = false;
        String result4 = authCache.get("test");
        assertTrue(loadFuncCalled);
        Assert.assertEquals("load", result4);

        // set cache to null and load function should be called
        loadFuncCalled = false;
        authCache.cache = null;
        String result5 = authCache.get("test");
        assertTrue(loadFuncCalled);
        Assert.assertEquals("load", result5);
    }

