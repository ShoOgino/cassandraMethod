    /**
     * We cannot update rack or data-center for a live node, see CASSANDRA-10243.
     *
     * @param reloadedMap - the new map of hosts to dc:rack properties
     * @param reloadedDefaultDCRack - the default dc:rack or null if no default
     * @return true if we can continue updating (no live host had dc or rack updated)
     */
    private static boolean livenessCheck(HashMap<InetAddress, String[]> reloadedMap, String[] reloadedDefaultDCRack)
    {
        // If the default has changed we must check all live hosts but hopefully we will find a live
        // host quickly and interrupt the loop. Otherwise we only check the live hosts that were either
        // in the old set or in the new set
        Set<InetAddress> hosts = Arrays.equals(defaultDCRack, reloadedDefaultDCRack)
                                 ? Sets.intersection(StorageService.instance.getLiveRingMembers(), // same default
                                                     Sets.union(endpointMap.keySet(), reloadedMap.keySet()))
                                 : StorageService.instance.getLiveRingMembers(); // default updated

        for (InetAddress host : hosts)
        {
            String[] origValue = endpointMap.containsKey(host) ? endpointMap.get(host) : defaultDCRack;
            String[] updateValue = reloadedMap.containsKey(host) ? reloadedMap.get(host) : reloadedDefaultDCRack;

            if (!Arrays.equals(origValue, updateValue))
            {
                logger.error("Cannot update data center or rack from {} to {} for live host {}, property file NOT RELOADED",
                             origValue,
                             updateValue,
                             host);
                 return false;
            }
        }

        return true;
    }

