    /**
     * Given the number of keys that need to be transferred say, 1000
     * and given the smallest key stored we need the hash of the 1000th
     * key greater than the smallest key in the sorted order in the primary
     * range.
     * 
     * @param keyCount number of keys after which token is required.
     * @return token.
    */
    public static BigInteger getTokenBasedOnPrimaryCount(int keyCount)
    {
        List<String> indexedPrimaryKeys = getIndexedPrimaryKeys();
        int index = keyCount / SSTable.indexInterval();
        String key = (index >= indexedPrimaryKeys.size()) ? indexedPrimaryKeys.get( indexedPrimaryKeys.size() - 1 ) : indexedPrimaryKeys.get(index);
        logger_.debug("Hashing key " + key + " ...");
        return StorageService.instance().hash(key);
    }

