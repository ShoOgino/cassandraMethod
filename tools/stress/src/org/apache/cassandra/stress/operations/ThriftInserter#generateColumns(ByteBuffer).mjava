    protected List<Column> generateColumns(ByteBuffer key)
    {
        final List<ByteBuffer> values = generateColumnValues(key);
        final List<Column> columns = new ArrayList<>(values.size());

        if (state.settings.columns.useTimeUUIDComparator)
            for (int i = 0 ; i < values.size() ; i++)
                new Column(TimeUUIDType.instance.decompose(UUIDGen.getTimeUUID()));
        else
            // TODO : consider randomly allocating column names in case where have fewer than max columns
            // but need to think about implications for indexes / indexed range slicer / other knock on effects
            for (int i = 0 ; i < values.size() ; i++)
                columns.add(new Column(state.settings.columns.names.get(i)));

        for (int i = 0 ; i < values.size() ; i++)
            columns.get(i)
                    .setValue(values.get(i))
                    .setTimestamp(FBUtilities.timestampMicros());

        return columns;
    }

