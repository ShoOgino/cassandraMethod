    @Test
    public void testResolveDeleted()
    {
        EndpointsForRange replicas = makeReplicas(2);
        DataResolver resolver = new DataResolver(command, plan(replicas, ConsistencyLevel.ALL), readRepair, System.nanoTime());
        // one response with columns timestamped before a delete in another response
        InetAddressAndPort peer1 = replicas.get(0).endpoint();
        resolver.preprocess(response(command, peer1, iter(new RowUpdateBuilder(cfm, nowInSec, 0L, dk).clustering("1")
                                                                                                     .add("one", "A")
                                                                                                     .buildUpdate())));
        InetAddressAndPort peer2 = replicas.get(1).endpoint();
        resolver.preprocess(response(command, peer2, fullPartitionDelete(cfm, dk, 1, nowInSec)));

        try (PartitionIterator data = resolver.resolve())
        {
            assertFalse(data.hasNext());
        }

        // peer1 should get the deletion from peer2
        assertEquals(1, readRepair.sent.size());
        Mutation mutation = readRepair.getForEndpoint(peer1);
        assertRepairMetadata(mutation);
        assertRepairContainsDeletions(mutation, new DeletionTime(1, nowInSec));
        assertRepairContainsNoColumns(mutation);
    }

