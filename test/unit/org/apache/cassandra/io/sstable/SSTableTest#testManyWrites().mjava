    @Test
    public void testManyWrites() throws IOException {
        Map<ByteBuffer, ByteBuffer> map = new HashMap<ByteBuffer,ByteBuffer>();
        for (int i = 100; i < 1000; ++i)
        {
            map.put(ByteBufferUtil.bytes(Integer.toString(i)), ByteBufferUtil.bytes(("Avinash Lakshman is a good man: " + i)));
        }

        // write
        SSTableReader ssTable = SSTableUtils.prepare().cf("Standard2").writeRaw(map);

        // verify
        verifyMany(ssTable, map);
        ssTable = SSTableReader.open(ssTable.descriptor); // read the index from disk
        verifyMany(ssTable, map);

        Set<Component> live = SSTable.componentsFor(ssTable.descriptor);
        assert !live.isEmpty() : "SSTable has no live components";
        Set<Component> temp = SSTable.componentsFor(ssTable.descriptor.asTemporary(true));
        assert temp.isEmpty() : "SSTable has unexpected temp components";
    }

