        /**
         * deserializes the metadata
         *
         * returns a pair containing the part of the metadata meant to be kept-in memory and the part
         * that should not.
         *
         * @param descriptor the descriptor
         * @return a pair containing data that needs to be in memory and data that is potentially big and is not needed
         *         in memory
         * @throws IOException
         */
        public Pair<SSTableMetadata, Set<Integer>> deserialize(Descriptor descriptor) throws IOException
        {
            logger.debug("Load metadata for {}", descriptor);
            File statsFile = new File(descriptor.filenameFor(SSTable.COMPONENT_STATS));
            if (!statsFile.exists())
            {
                logger.debug("No sstable stats for {}", descriptor);
                return Pair.create(new SSTableMetadata(), Collections.<Integer>emptySet());
            }

            DataInputStream dis = new DataInputStream(new BufferedInputStream(new FileInputStream(statsFile)));
            try
            {
                return deserialize(dis, descriptor);
            }
            finally
            {
                FileUtils.closeQuietly(dis);
            }
        }

