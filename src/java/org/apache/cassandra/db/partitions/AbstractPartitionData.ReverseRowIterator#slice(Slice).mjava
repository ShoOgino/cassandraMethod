        public Iterator<Row> slice(Slice slice)
        {
            int sidx = binarySearch(slice.end(), 0, next + 1);
            // The insertion point is the first element greater than slice.end(), so we want the previous index
            final int start = sidx >= 0 ? sidx : -sidx - 2;
            if (start < 0)
                return Collections.emptyIterator();

            int eidx = binarySearch(slice.start(), 0, start + 1);
            final int end = eidx >= 0 ? eidx : -eidx - 1;

            // Remember the end to speed up potential further slice search
            next = end;

            if (start < end)
                return Collections.emptyIterator();

            return new AbstractIterator<Row>()
            {
                private int i = start;

                protected Row computeNext()
                {
                    if (i < 0 || i < end)
                        return endOfData();

                    return setRowTo(i--);
                }
            };
        }

