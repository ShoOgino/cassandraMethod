        public void prepare(String[] args, PrintStream out, PrintStream err)
        {
            try
            {

                parser = new JCommander(this);

                addCommands();

                fixCommands();

                try
                {
                    parser.parse(args);
                }
                catch (Exception e)
                {
                    failAndPrintUsage(e.toString());
                }

                if (isHelp())
                {
                    String cmd = parser.getParsedCommand();
                    if (cmd == null)
                    {
                        parser.usage();
                    }
                    else
                    {
                        parser.usage(cmd);
                    }
                }
                else if (isListCommands())
                {
                    for (String cmd : commands.keySet())
                    {
                        out.println(String.format("%8s - %s", cmd, parser.getCommandDescription(cmd)));
                    }
                }
                else
                {

                    cmd = commands.get(parser.getParsedCommand());

                    if (cmd == null)
                    {
                        failAndPrintUsage();
                    }
                }
            }
            catch (CommandAbortedError error)
            {
                for (String m : error.messages)
                {
                    err.println(m);
                }
                if (isVerbose() && error.getCause() != null)
                {
                    error.getCause().printStackTrace(err);
                }
                if (error.printUsage && parser != null)
                {
                    printUsage(parser, out, parser.getParsedCommand());
                }
            }
            catch (Throwable e)
            {
                e.printStackTrace(err);
            }
        }

