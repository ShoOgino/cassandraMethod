    @Test
    public void testCollectionLiteralsWithDurations() throws Throwable
    {
        createTable("CREATE TABLE %s (pk int, ck int, d1 duration, d2 duration, PRIMARY KEY (pk, ck) )");
        execute("INSERT INTO %s (pk, ck, d1, d2) VALUES (1, 1, 15h, 13h)");
        execute("INSERT INTO %s (pk, ck, d1, d2) VALUES (1, 2, 10h, 12h)");
        execute("INSERT INTO %s (pk, ck, d1, d2) VALUES (1, 3, 11h, 13h)");

        assertRows(execute("SELECT [d1, d2] FROM %s"),
                   row(list(Duration.from("15h"), Duration.from("13h"))),
                   row(list(Duration.from("10h"), Duration.from("12h"))),
                   row(list(Duration.from("11h"), Duration.from("13h"))));

        assertInvalidMessage("Durations are not allowed inside sets: frozen<set<duration>>", "SELECT {d1, d2} FROM %s");

        assertRows(execute("SELECT (map<int, duration>){ck : d1} FROM %s"),
                   row(map(1, Duration.from("15h"))),
                   row(map(2, Duration.from("10h"))),
                   row(map(3, Duration.from("11h"))));

        assertInvalidMessage("Durations are not allowed as map keys: map<duration, int>",
                             "SELECT (map<duration, int>){d1 : ck, d2 :ck} FROM %s");
    }

