    /**
     * Creates a {@link DescribeStatement} for {@code DESCRIBE [FULL] SCHEMA}.
     */
    public static DescribeStatement<SchemaElement> schema(boolean includeSystemKeyspaces)
    {
        return new DescribeStatement<SchemaElement>()
        {
            @Override
            protected Stream<? extends SchemaElement> describe(ClientState state, Keyspaces keyspaces)
            {
                return keyspaces.stream()
                                .filter(ks -> includeSystemKeyspaces || !SchemaConstants.isSystemKeyspace(ks.name))
                                .sorted(SchemaElement.NAME_COMPARATOR)
                                .flatMap(ks -> getKeyspaceElements(ks, false));
            }

            @Override
            protected List<ColumnSpecification> metadata(ClientState state)
            {
                return ELEMENT_METADATA;
            }

            @Override
            protected List<ByteBuffer> toRow(SchemaElement element, boolean withInternals)
            {
                return ImmutableList.of(bytes(element.elementKeyspaceQuotedIfNeeded()),
                                        bytes(element.elementType().toString()),
                                        bytes(element.elementNameQuotedIfNeeded()),
                                        bytes(element.toCqlString(withInternals)));
            }
        };
    }

