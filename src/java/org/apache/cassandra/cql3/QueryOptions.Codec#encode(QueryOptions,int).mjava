        public ChannelBuffer encode(QueryOptions options, int version)
        {
            assert version >= 2;

            int nbBuff = 2;

            EnumSet<Flag> flags = EnumSet.noneOf(Flag.class);
            if (options.getValues().size() > 0)
            {
                flags.add(Flag.VALUES);
                nbBuff++;
            }
            if (options.skipMetadata)
                flags.add(Flag.SKIP_METADATA);
            if (options.getPageSize() >= 0)
            {
                flags.add(Flag.PAGE_SIZE);
                nbBuff++;
            }
            if (options.getSerialConsistency() != ConsistencyLevel.SERIAL)
            {
                flags.add(Flag.SERIAL_CONSISTENCY);
                nbBuff++;
            }

            CBUtil.BufferBuilder builder = new CBUtil.BufferBuilder(nbBuff, 0, options.values.size() + (flags.contains(Flag.PAGING_STATE) ? 1 : 0));
            builder.add(CBUtil.consistencyLevelToCB(options.getConsistency()));
            builder.add(CBUtil.byteToCB((byte)Flag.serialize(flags)));

            if (flags.contains(Flag.VALUES))
            {
                builder.add(CBUtil.shortToCB(options.getValues().size()));
                for (ByteBuffer value : options.getValues())
                    builder.addValue(value);
            }
            if (flags.contains(Flag.PAGE_SIZE))
                builder.add(CBUtil.intToCB(options.getPageSize()));
            if (flags.contains(Flag.PAGING_STATE))
                builder.addValue(options.getPagingState().serialize());
            if (flags.contains(Flag.SERIAL_CONSISTENCY))
                builder.add(CBUtil.consistencyLevelToCB(options.getSerialConsistency()));
            return builder.build();
        }

