    @Test
    public void testMoveForwardBetweenCalculateRangesToFetchWithPreferredEndpointsDownNodes() throws Exception
    {
        for (InetAddressAndPort downNode : new InetAddressAndPort[] { address04, address05 })
        {
            downNodes.clear();
            downNodes.add(downNode);
            boolean threw = false;
            try
            {
                testMoveForwardBetweenCalculateRangesToFetchWithPreferredEndpoints();
            }
            catch (IllegalStateException ise)
            {
                ise.printStackTrace();
                assertTrue(downNode.toString(),
                           ise.getMessage().contains("Down nodes: [" + downNode + "]"));
                threw = true;
            }
            assertTrue("Didn't throw for " + downNode, threw);
        }

        //Shouldn't throw because another full replica is available
        downNodes.clear();
        downNodes.add(address03);
        testMoveForwardBetweenCalculateRangesToFetchWithPreferredEndpoints();
    }

