    /**
     * Test for CASSANDRA-13482
     */
    @Test
    public void testPartialCache() throws Throwable
    {
        createTable("CREATE TABLE %s (pk int, ck1 int, v1 int, v2 int, primary key (pk, ck1))" +
                    "WITH CACHING = { 'keys': 'ALL', 'rows_per_partition': '1' }");
        assertEmpty(execute("select * from %s where pk = 10000"));

        execute("DELETE FROM %s WHERE pk = 1 AND ck1 = 0");
        execute("DELETE FROM %s WHERE pk = 1 AND ck1 = 1");
        execute("DELETE FROM %s WHERE pk = 1 AND ck1 = 2");
        execute("INSERT INTO %s (pk, ck1, v1, v2) VALUES (1, 1, 1, 1)");
        execute("INSERT INTO %s (pk, ck1, v1, v2) VALUES (1, 2, 2, 2)");
        execute("INSERT INTO %s (pk, ck1, v1, v2) VALUES (1, 3, 3, 3)");
        execute("DELETE FROM %s WHERE pk = 1 AND ck1 = 2");
        execute("DELETE FROM %s WHERE pk = 1 AND ck1 = 3");
        execute("INSERT INTO %s (pk, ck1, v1, v2) VALUES (1, 4, 4, 4)");
        execute("INSERT INTO %s (pk, ck1, v1, v2) VALUES (1, 5, 5, 5)");

        assertRows(execute("select * from %s where pk = 1"),
                   row(1, 1, 1, 1),
                   row(1, 4, 4, 4),
                   row(1, 5, 5, 5));
        assertRows(execute("select * from %s where pk = 1 LIMIT 1"),
                   row(1, 1, 1, 1));

        assertRows(execute("select * from %s where pk = 1 and ck1 >=2"),
                   row(1, 4, 4, 4),
                   row(1, 5, 5, 5));
        assertRows(execute("select * from %s where pk = 1 and ck1 >=2 LIMIT 1"),
                   row(1, 4, 4, 4));

        assertRows(execute("select * from %s where pk = 1 and ck1 >=2"),
                   row(1, 4, 4, 4),
                   row(1, 5, 5, 5));
        assertRows(execute("select * from %s where pk = 1 and ck1 >=2 LIMIT 1"),
                   row(1, 4, 4, 4));
    }

