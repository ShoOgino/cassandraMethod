    /*
     * Makes a defensive copy of the incoming ByteBuffer and don't modify the position or limit
     * even temporarily so it is thread-safe WRT to the incoming buffer
     * (non-Javadoc)
     * @see org.apache.cassandra.io.util.DataOutputPlus#write(java.nio.ByteBuffer)
     */
    @Override
    public void write(ByteBuffer src) throws IOException
    {
        int srcPos = src.position();
        int srcCount;
        int trgAvailable;
        while ((srcCount = src.limit() - srcPos) > (trgAvailable = buffer.remaining()))
        {
            FastByteOperations.copy(src, srcPos, buffer, buffer.position(), trgAvailable);
            buffer.position(buffer.position() + trgAvailable);
            srcPos += trgAvailable;
            doFlush(src.limit() - srcPos);
        }
        FastByteOperations.copy(src, srcPos, buffer, buffer.position(), srcCount);
        buffer.position(buffer.position() + srcCount);
    }

