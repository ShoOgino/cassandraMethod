    /*
     * Break the files into buckets and then compact.
     */
    int doCompaction(int threshold) throws IOException
    {
        List<String> files = new ArrayList<String>(ssTables_);
        int filesCompacted = 0;
        Set<List<String>> buckets = getCompactionBuckets(files, 50L * 1024L * 1024L);
        for (List<String> fileList : buckets)
        {
            Collections.sort(fileList, new FileNameComparator(FileNameComparator.Ascending));
            if (fileList.size() < threshold)
            {
                continue;
            }
            // For each bucket if it has crossed the threshhold do the compaction
            // In case of range  compaction merge the counting bloom filters also.
            files.clear();
            int count = 0;
            for (String file : fileList)
            {
                files.add(file);
                count++;
                if (count == threshold)
                {
                    filesCompacted += doFileCompaction(files, BUFSIZE);
                    break;
                }
            }
        }
        return filesCompacted;
    }

