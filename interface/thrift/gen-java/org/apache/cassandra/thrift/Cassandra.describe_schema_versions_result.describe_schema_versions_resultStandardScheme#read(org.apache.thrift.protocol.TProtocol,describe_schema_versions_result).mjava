      public void read(org.apache.thrift.protocol.TProtocol iprot, describe_schema_versions_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
                {
                  org.apache.thrift.protocol.TMap _map322 = iprot.readMapBegin();
                  struct.success = new HashMap<String,List<String>>(2*_map322.size);
                  for (int _i323 = 0; _i323 < _map322.size; ++_i323)
                  {
                    String _key324; // required
                    List<String> _val325; // required
                    _key324 = iprot.readString();
                    {
                      org.apache.thrift.protocol.TList _list326 = iprot.readListBegin();
                      _val325 = new ArrayList<String>(_list326.size);
                      for (int _i327 = 0; _i327 < _list326.size; ++_i327)
                      {
                        String _elem328; // required
                        _elem328 = iprot.readString();
                        _val325.add(_elem328);
                      }
                      iprot.readListEnd();
                    }
                    struct.success.put(_key324, _val325);
                  }
                  iprot.readMapEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // IRE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.ire = new InvalidRequestException();
                struct.ire.read(iprot);
                struct.setIreIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

