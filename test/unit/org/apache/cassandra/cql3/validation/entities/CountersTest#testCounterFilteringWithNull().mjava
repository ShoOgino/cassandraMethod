    @Test
    public void testCounterFilteringWithNull() throws Throwable
    {
        for (String compactStorageClause : new String[]{ "", " WITH COMPACT STORAGE" })
        {
            createTable("CREATE TABLE %s (k int PRIMARY KEY, a counter, b counter)" + compactStorageClause);
            execute("UPDATE %s SET a = a + ? WHERE k = ?", 1L, 1);

            assertRows(execute("SELECT * FROM %s WHERE a > ? ALLOW FILTERING", 0L),
                       row(1, 1L, null));
            // GT
            assertEmpty(execute("SELECT * FROM %s WHERE b > ? ALLOW FILTERING", 1L));
            // GTE
            assertEmpty(execute("SELECT * FROM %s WHERE b >= ? ALLOW FILTERING", 1L));
            // LT
            assertEmpty(execute("SELECT * FROM %s WHERE b < ? ALLOW FILTERING", 1L));
            // LTE
            assertEmpty(execute("SELECT * FROM %s WHERE b <= ? ALLOW FILTERING", 1L));
            // EQ
            assertEmpty(execute("SELECT * FROM %s WHERE b = ? ALLOW FILTERING", 1L));
            // with null
            assertInvalidMessage("Invalid null value for counter increment/decrement",
                                 "SELECT * FROM %s WHERE b = null ALLOW FILTERING");
        }
    }

