    /**
     * Called on startup to scan existing folders for any unfinished leftovers of
     * operations that were ongoing when the process exited.
     *
     * We check if the new transaction file exists first, and if so we clean it up
     * along with its contents, which includes the old file, else if only the old file exists
     * it means the operation has completed and we only cleanup the old file with its contents.
     */
    static void removeUnfinishedLeftovers(CFMetaData metadata)
    {
        Throwable accumulate = null;
        Set<UUID> ids = new HashSet<>();

        for (File dir : getFolders(metadata, null))
        {
            File[] logs = dir.listFiles((dir1, name) -> {
                return TransactionData.isLogFile(name);
            });

            for (File log : logs)
            {
                try (TransactionData data = TransactionData.make(log))
                {
                    // we need to check this because there are potentially 2 log files per operation
                    if (ids.contains(data.id))
                        continue;

                    ids.add(data.id);
                    accumulate = data.removeUnfinishedLeftovers(accumulate);
                }
            }
        }

        if (accumulate != null)
            logger.error("Failed to remove unfinished transaction leftovers", accumulate);
    }

