    public IndexSummaryBuilder(long expectedKeys, int indexInterval)
    {
        long expectedEntries = expectedKeys / indexInterval;
        if (expectedEntries > Integer.MAX_VALUE)
        {
            // that's a _lot_ of keys, and a very low interval
            int effectiveInterval = (int) Math.ceil((double) Integer.MAX_VALUE / expectedKeys);
            expectedEntries = expectedKeys / effectiveInterval;
            assert expectedEntries <= Integer.MAX_VALUE : expectedEntries;
            logger.warn("Index interval of {} is too low for {} expected keys; using interval of {} instead",
                    indexInterval, expectedKeys, effectiveInterval);
        }
        positions = new ArrayList<Long>((int)expectedEntries);
        keys = new ArrayList<byte[]>((int)expectedEntries);
    }

