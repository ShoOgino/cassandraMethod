    private void checkEstimatedSizes(IPartitioner partitioner, Random random)
    {
        Range<Token> fullRange = new Range<>(partitioner.getMinimumToken(), partitioner.getMinimumToken());
        MerkleTree tree = new MerkleTree(partitioner, fullRange, RECOMMENDED_DEPTH, 0);

        // Test 16 kilobyte -> 16 megabytes
        for (int i = 14; i < 24; i ++)
        {
            long numBytes = 1 << i;
            int maxDepth = MerkleTree.estimatedMaxDepthForBytes(partitioner, numBytes, 32);
            long realSizeOfMerkleTree = measureTree(tree, fullRange, maxDepth, random);
            long biggerTreeSize = measureTree(tree, fullRange, maxDepth + 1, random);

            Assert.assertTrue(realSizeOfMerkleTree < numBytes);
            Assert.assertTrue(biggerTreeSize > numBytes);
        }
    }

