        public Builder add(Term t, Relation.Type op, List<ByteBuffer> variables) throws InvalidRequestException
        {
            if (current >= composite.types.size())
                throw new IllegalStateException("Composite column is already fully constructed");

            AbstractType currentType = composite.types.get(current++);
            ByteBuffer buffer = t.getByteBuffer(currentType, variables);
            ByteBufferUtil.writeWithShortLength(buffer, out);

            /*
             * Given the rules for eoc (end-of-component, see AbstractCompositeType.compare()),
             * We can select:
             *   - = 'a' by using <'a'><0>
             *   - < 'a' by using <'a'><-1>
             *   - <= 'a' by using <'a'><1>
             *   - > 'a' by using <'a'><1>
             *   - >= 'a' by using <'a'><0>
             */
            switch (op)
            {
                case LT:
                    out.write((byte) -1);
                    break;
                case GT:
                case LTE:
                    out.write((byte) 1);
                    break;
                default:
                    out.write((byte) 0);
                    break;
            }
            return this;
        }

