    @Test
    public void testEnumeratekeys() throws IOException
    {
        File tempSS = tempSSTableFile(KEYSPACE1, "Standard1");
        ColumnFamily cfamily = ArrayBackedSortedColumns.factory.create(KEYSPACE1, "Standard1");
        SSTableWriter writer = SSTableWriter.create(tempSS.getPath(), 2, ActiveRepairService.UNREPAIRED_SSTABLE, 0);

        // Add rowA
        cfamily.addColumn(Util.cellname("colA"), ByteBufferUtil.bytes("valA"), System.currentTimeMillis());
        writer.append(Util.dk("rowA"), cfamily);
        cfamily.clear();

        // Add rowB
        cfamily.addColumn(Util.cellname("colB"), ByteBufferUtil.bytes("valB"), System.currentTimeMillis());
        writer.append(Util.dk("rowB"), cfamily);
        cfamily.clear();

        writer.finish(true);

        // Enumerate and verify
        File temp = File.createTempFile("Standard1", ".txt");
        final Descriptor descriptor = Descriptor.fromFilename(writer.getFilename());
        SSTableExport.enumeratekeys(descriptor, new PrintStream(temp.getPath()),
                CFMetaData.sparseCFMetaData(descriptor.ksname, descriptor.cfname, BytesType.instance));


        try (FileReader file = new FileReader(temp))
        {
            char[] buf = new char[(int) temp.length()];
            file.read(buf);
            String output = new String(buf);

            String sep = System.getProperty("line.separator");
            assert output.equals(asHex("rowA") + sep + asHex("rowB") + sep) : output;
        }
    }

