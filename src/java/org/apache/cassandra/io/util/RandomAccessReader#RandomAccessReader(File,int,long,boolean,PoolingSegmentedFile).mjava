    protected RandomAccessReader(File file, int bufferSize, long overrideLength, boolean useDirectBuffer, PoolingSegmentedFile owner) throws FileNotFoundException
    {
        this.owner = owner;

        filePath = file.getAbsolutePath();

        try
        {
            channel = FileChannel.open(file.toPath(), StandardOpenOption.READ);
        }
        catch (IOException e)
        {
            throw new FileNotFoundException(filePath);
        }

        // allocating required size of the buffer
        if (bufferSize <= 0)
            throw new IllegalArgumentException("bufferSize must be positive");

        // we can cache file length in read-only mode
        long fileLength = overrideLength;
        if (fileLength <= 0)
        {
            try
            {
                fileLength = channel.size();
            }
            catch (IOException e)
            {
                throw new FSReadError(e, filePath);
            }
        }
        this.fileLength = fileLength;
        buffer = allocateBuffer(bufferSize, useDirectBuffer);
        buffer.limit(0);
    }

