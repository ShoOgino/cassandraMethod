    /**
     * We want to send mutations to as many full replicas as we can, and just as many transient replicas
     * as we need to meet blockFor.
     */
    @VisibleForTesting
    public static ForToken forWrite(Keyspace keyspace, ConsistencyLevel consistencyLevel, Token token, int blockFor, EndpointsForToken natural, EndpointsForToken pending, Predicate<InetAddressAndPort> livePredicate) throws UnavailableException
    {
        EndpointsForToken all = Endpoints.concat(natural, pending);
        EndpointsForToken selected = all
                .select()
                .add(r -> r.isFull() && livePredicate.test(r.endpoint()))
                .add(r -> r.isTransient() && livePredicate.test(r.endpoint()), blockFor)
                .get();

        consistencyLevel.assureSufficientLiveNodesForWrite(keyspace, selected, pending);

        return new ForToken(keyspace, consistencyLevel, token, natural, pending, selected, all);
    }

