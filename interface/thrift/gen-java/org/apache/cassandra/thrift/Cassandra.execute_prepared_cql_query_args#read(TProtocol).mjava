    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 1: // ITEM_ID
            if (field.type == TType.I32) {
              this.itemId = iprot.readI32();
              setItemIdIsSet(true);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2: // VALUES
            if (field.type == TType.LIST) {
              {
                TList _list156 = iprot.readListBegin();
                this.values = new ArrayList<ByteBuffer>(_list156.size);
                for (int _i157 = 0; _i157 < _list156.size; ++_i157)
                {
                  ByteBuffer _elem158;
                  _elem158 = iprot.readBinary();
                  this.values.add(_elem158);
                }
                iprot.readListEnd();
              }
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!isSetItemId()) {
        throw new TProtocolException("Required field 'itemId' was not found in serialized data! Struct: " + toString());
      }
      validate();
    }

