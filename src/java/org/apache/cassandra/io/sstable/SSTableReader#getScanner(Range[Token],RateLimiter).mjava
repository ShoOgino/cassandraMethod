    /**
     * Direct I/O SSTableScanner over a defined range of tokens.
     *
     * @param range the range of keys to cover
     * @return A Scanner for seeking over the rows of the SSTable.
     */
    public ICompactionScanner getScanner(Range<Token> range, RateLimiter limiter)
    {
        if (range == null)
            return getScanner(limiter);

        // We want to avoid allocating a SSTableScanner if the range don't overlap the sstable (#5249)
        return range.intersects(new Bounds(first.token, last.token))
             ? new SSTableScanner(this, DataRange.forKeyRange(range), limiter)
             : new EmptyCompactionScanner(getFilename());
    }

