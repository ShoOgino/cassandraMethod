    private boolean updateDefinition(CFMetaData cfm, ColumnDefinition def, ByteBuffer toReplace, UserType updated)
    {
        AbstractType<?> t = updateWith(def.type, toReplace, updated);
        if (t == null)
            return false;

        // We need to update this validator ...
        cfm.addOrReplaceColumnDefinition(def.withNewType(t));

        // ... but if it's part of the comparator or key validator, we need to go update those too.
        switch (def.kind)
        {
            case PARTITION_KEY:
                cfm.keyValidator(updateWith(cfm.getKeyValidator(), toReplace, updated));
                break;
            case CLUSTERING_COLUMN:
                cfm.comparator = updateWith(cfm.comparator, toReplace, updated);
                break;
        }
        return true;
    }

