    /*
     * Break the files into buckets and then compact.
     */
    public void doCompaction(int threshold) throws IOException
    {
        isCompacting_.set(true);
        List<String> files = new ArrayList<String>(ssTables_);
        try
        {
            int count;
            for (List<String> fileList : getCompactionBuckets(files, 50L * 1024L * 1024L))
            {
                Collections.sort(fileList, new FileNameComparator(FileNameComparator.Ascending));
                if (fileList.size() < threshold)
                {
                    continue;
                }
                // For each bucket if it has crossed the threshhold do the compaction
                // In case of range  compaction merge the counting bloom filters also.
                files.clear();
                count = 0;
                for (String file : fileList)
                {
                    files.add(file);
                    count++;
                    if (count == threshold)
                    {
                        doFileCompaction(files, BUFSIZE);
                        break;
                    }
                }
            }
        }
        finally
        {
            isCompacting_.set(false);
        }
    }

