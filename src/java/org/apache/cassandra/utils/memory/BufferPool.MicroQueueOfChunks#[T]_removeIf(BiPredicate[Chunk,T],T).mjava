        private <T> void removeIf(BiPredicate<Chunk, T> predicate, T value)
        {
            switch (count)
            {
                case 3:
                    if (predicate.test(chunk2, value))
                    {
                        --count;
                        Chunk chunk = chunk2;
                        chunk2 = null;
                        chunk.release();
                    }
                case 2:
                    if (predicate.test(chunk1, value))
                    {
                        --count;
                        Chunk chunk = chunk1;
                        chunk1 = null;
                        chunk.release();
                    }
                case 1:
                    if (predicate.test(chunk0, value))
                    {
                        --count;
                        Chunk chunk = chunk0;
                        chunk0 = null;
                        chunk.release();
                    }
                    break;
                case 0:
                    return;
            }
            switch (count)
            {
                case 2:
                    // Find the only null item, and shift non-null so that null is at chunk2
                    if (chunk0 == null)
                    {
                        chunk0 = chunk1;
                        chunk1 = chunk2;
                        chunk2 = null;
                    }
                    else if (chunk1 == null)
                    {
                        chunk1 = chunk2;
                        chunk2 = null;
                    }
                    break;
                case 1:
                    // Find the only non-null item, and shift it to chunk0
                    if (chunk1 != null)
                    {
                        chunk0 = chunk1;
                        chunk1 = null;
                    }
                    else if (chunk2 != null)
                    {
                        chunk0 = chunk2;
                        chunk2 = null;
                    }
                    break;
            }
        }

