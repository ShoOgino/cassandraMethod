    /**
     * Returns the value for {@code name} as a long.
     *
     * <p>This method uses the {@link CodecRegistry} to find a codec to convert the underlying CQL
     * type to a Java {@code byte} (for CQL types {@code bigint} and {@code counter}, this will be the
     * built-in codec).
     *
     * @param name the name to retrieve.
     * @return the value for {@code name} as a long. If the value is NULL, {@code 0L} is returned. If
     * you need to distinguish NULL and 0L, check first with {@link #isNull(String)} or use {@code
     * get(name, Long.class)}.
     * @throws IllegalArgumentException if {@code name} is not valid name for this object.
     * @throws CodecNotFoundException   if there is no registered codec to convert the underlying CQL
     *                                  type to a long.
     */
    public long getLong(String name);

