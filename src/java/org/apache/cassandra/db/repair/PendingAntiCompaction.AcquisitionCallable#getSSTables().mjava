        private Iterable<SSTableReader> getSSTables()
        {
            Set<UUID> conflictingSessions = new HashSet<>();

            Iterable<SSTableReader> sstables = cfs.getLiveSSTables().stream().filter(sstable -> {
                if (!sstable.intersects(ranges))
                    return false;

                StatsMetadata metadata = sstable.getSSTableMetadata();

                // exclude repaired sstables
                if (metadata.repairedAt != UNREPAIRED_SSTABLE)
                    return false;

                // exclude sstables pending repair, but record session ids for
                // non-finalized sessions for a later error message
                if (metadata.pendingRepair != NO_PENDING_REPAIR)
                {
                    if (!ActiveRepairService.instance.consistent.local.isSessionFinalized(metadata.pendingRepair))
                    {
                        conflictingSessions.add(metadata.pendingRepair);
                    }
                    return false;
                }

                return true;
            }).collect(Collectors.toList());

            // If there are sstables we'd like to acquire that are currently held by other sessions, we need to bail out. If we
            // didn't bail out here and the other repair sessions we're seeing were to fail, incremental repair behavior would be
            // confusing. You generally expect all data received before a repair session to be repaired when the session completes,
            // and that wouldn't be the case if the other session failed and moved it's data back to unrepaired.
            if (!conflictingSessions.isEmpty())
            {
                logger.warn("Prepare phase for incremental repair session {} has failed because it encountered " +
                            "intersecting sstables belonging to another incremental repair session(s) ({}). This is " +
                            "caused by starting an incremental repair session before a previous one has completed. " +
                            "Check nodetool repair_admin for hung sessions and fix them.",
                            sessionID, conflictingSessions);
                throw new SSTableAcquisitionException();
            }

            return sstables;
        }

