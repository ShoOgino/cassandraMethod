    private void stream(SocketChannel channel) throws IOException
    {
        ByteBuffer buffer = MessagingService.instance().constructStreamHeader(header, false);
        channel.write(buffer);
        assert buffer.remaining() == 0;
        if (header.file == null)
            return;

        RandomAccessFile raf = new RandomAccessFile(new File(header.file.getFilename()), "r");
        try
        {
            FileChannel fc = raf.getChannel();
            // stream sections of the file as returned by PendingFile.currentSection
            for (Pair<Long, Long> section : header.file.sections)
            {
                long length = section.right - section.left;
                long bytesTransferred = 0;
                while (bytesTransferred < length)
                {
                    long toTransfer = Math.min(CHUNK_SIZE, length - bytesTransferred);
                    long lastWrite = fc.transferTo(section.left + bytesTransferred, toTransfer, channel);
                    bytesTransferred += lastWrite;
                    header.file.progress += lastWrite;
                }
                if (logger.isDebugEnabled())
                    logger.debug("Bytes transferred " + bytesTransferred + "/" + header.file.size);
            }
        }
        finally
        {
            FileUtils.closeQuietly(raf);
        }
    }

