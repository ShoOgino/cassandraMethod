    void forceBlockingFlush() throws IOException, ExecutionException, InterruptedException
    {
        Memtable oldMemtable = getMemtableThreadSafe();
        forceFlush();
        // block for flush to finish by adding a no-op action to the flush executorservice
        // and waiting for that to finish.  (this works since flush ES is single-threaded.)
        Future f = flusher_.submit(new Runnable()
        {
            public void run()
            {
            }
        });
        f.get();
        /* this assert is not threadsafe -- the memtable could have been clean when forceFlush
           checked it, but dirty now thanks to another thread.  But as long as we are only
           calling this from single-threaded test code it is useful to have as a sanity check. */
        assert oldMemtable.isFlushed() || oldMemtable.isClean(); 
    }

