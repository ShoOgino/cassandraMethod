    @Test
    public void testVeryLarge() throws IOException
    {
        final long SIZE = 1L << 32; // 2GB
        Parameters params = new Parameters(SIZE, 1 << 20); // 1MB

        try(ChannelProxy channel = new ChannelProxy("abc", new FakeFileChannel(SIZE)))
        {
            RandomAccessReader.Builder builder = new RandomAccessReader.Builder(channel)
                                                 .bufferType(params.bufferType)
                                                 .bufferSize(params.bufferSize);

            try(RandomAccessReader reader = builder.build())
            {
                assertEquals(channel.size(), reader.length());
                assertEquals(channel.size(), reader.bytesRemaining());
                assertEquals(Integer.MAX_VALUE, reader.available());

                assertEquals(channel.size(), reader.skip(channel.size()));

                assertTrue(reader.isEOF());
                assertEquals(0, reader.bytesRemaining());
            }
        }
    }

