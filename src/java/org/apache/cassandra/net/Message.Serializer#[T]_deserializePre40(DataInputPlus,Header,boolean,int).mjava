        private <T> Message<T> deserializePre40(DataInputPlus in, Header header, boolean skipHeader, int version) throws IOException
        {
            if (skipHeader)
                skipHeaderPre40(in);

            IVersionedAsymmetricSerializer<?, T> payloadSerializer = header.verb.serializer();
            if (null == payloadSerializer)
                payloadSerializer = instance().callbacks.responseSerializer(header.id, header.from);
            int payloadSize = in.readInt();
            T payload = deserializePayloadPre40(in, version, payloadSerializer, payloadSize);

            Message<T> message = new Message<>(header, payload);

            return header.params.containsKey(ParamType.FAILURE_RESPONSE)
                 ? (Message<T>) toPost40FailureResponse(message)
                 : message;
        }

