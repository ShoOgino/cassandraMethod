    /**
     * Clear all locally stored schema information and reset schema to initial state.
     * Called by user (via JMX) who wants to get rid of schema disagreement.
     *
     * @throws IOException if schema tables truncation fails
     */
    public static void resetLocalSchema() throws IOException
    {
        logger.info("Starting local schema reset...");

        if (logger.isDebugEnabled())
            logger.debug("Truncating schema tables...");

        // truncate schema tables
        SystemKeyspace.schemaCFS(SystemKeyspace.SCHEMA_KEYSPACES_CF).truncateBlocking();
        SystemKeyspace.schemaCFS(SystemKeyspace.SCHEMA_COLUMNFAMILIES_CF).truncateBlocking();
        SystemKeyspace.schemaCFS(SystemKeyspace.SCHEMA_COLUMNS_CF).truncateBlocking();

        if (logger.isDebugEnabled())
            logger.debug("Clearing local schema keyspace definitions...");

        Schema.instance.clear();

        Set<InetAddress> liveEndpoints = Gossiper.instance.getLiveMembers();
        liveEndpoints.remove(FBUtilities.getBroadcastAddress());

        // force migration is there are nodes around, first of all
        // check if there are nodes with versions >= 1.1.7 to request migrations from,
        // because migration format of the nodes with versions < 1.1 is incompatible with older versions
        // and due to broken timestamps in versions prior to 1.1.7
        for (InetAddress node : liveEndpoints)
        {
            if (logger.isDebugEnabled())
                logger.debug("Requesting schema from " + node);

            FBUtilities.waitOnFuture(StageManager.getStage(Stage.MIGRATION).submit(new MigrationTask(node)));
            break;
        }

        logger.info("Local schema reset is complete.");
    }

