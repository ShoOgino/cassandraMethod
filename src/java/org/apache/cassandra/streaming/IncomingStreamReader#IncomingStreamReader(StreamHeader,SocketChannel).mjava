    public IncomingStreamReader(StreamHeader header, SocketChannel socketChannel) throws IOException
    {
        this.socketChannel = socketChannel;
        InetSocketAddress remoteAddress = (InetSocketAddress)socketChannel.socket().getRemoteSocketAddress();
        // pendingFile gets the new context for the local node.
        pendingFile = StreamIn.getContextMapping(header.getStreamFile());
        // lastFile has the old context, which was registered in the manager.
        lastFile = header.getStreamFile();
        initiatedTransfer = header.initiatedTransfer;
        assert pendingFile != null;
        session = StreamInSession.get(remoteAddress.getAddress(), header.getSessionId());
        session.addActiveStream(pendingFile);
        // For transfers setup the status and for replies to requests, prepare the list
        // of available files to request.
        if (initiatedTransfer)
            streamStatus = new FileStatus(lastFile.getFilename(), header.getSessionId());
        else if (header.getPendingFiles() != null)
            session.addFilesToRequest(header.getPendingFiles());
    }

