    /**
     * Tests that the given update doesn't cause data resolver to attempt to repair a transient replica
     */
    private void assertNoTransientRepairs(PartitionUpdate update)
    {
        SinglePartitionReadCommand command = SinglePartitionReadCommand.fullPartitionRead(update.metadata(), nowInSec, key);
        EndpointsForToken targetReplicas = EndpointsForToken.of(key.getToken(), full(EP1), full(EP2), trans(EP3));
        TestableReadRepair repair = new TestableReadRepair(command, QUORUM);
        DataResolver resolver = new DataResolver(command, plan(targetReplicas, ConsistencyLevel.QUORUM), repair, 0);

        Assert.assertFalse(resolver.isDataPresent());
        resolver.preprocess(response(command, EP1, iter(update), false));
        resolver.preprocess(response(command, EP2, iter(update), false));
        resolver.preprocess(response(command, EP3, EmptyIterators.unfilteredPartition(update.metadata()), false));

        Assert.assertFalse(repair.dataWasConsumed());
        assertPartitionsEqual(filter(iter(update)), resolver.resolve());
        Assert.assertTrue(repair.dataWasConsumed());
        Assert.assertTrue(repair.sent.toString(), repair.sent.isEmpty());
    }

