    public long minRepairedAt(Collection<Range<Token>> ranges)
    {
        State current = state;

        Set<Range<Token>> remainingRanges = new HashSet<>(ranges);
        long minTime = Long.MAX_VALUE;
        for (Section section : current.sections)
        {
            if (section.range.intersects(remainingRanges))
            {
                minTime = Math.min(minTime, section.repairedAt);
                remainingRanges = Range.subtract(remainingRanges, Collections.singleton(section.range));
            }

            if (remainingRanges.isEmpty())
                break;
        }
        // if there are still ranges we don't have data for, part of the requested ranges is unrepaired
        return remainingRanges.isEmpty() ? minTime : UNREPAIRED_SSTABLE;
    }

