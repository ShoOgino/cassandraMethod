    @Test
    public void testDeletes() throws WriteTimeoutException
    {
        ColumnFamilyStore cfs = Keyspace.open(KS).getColumnFamilyStore(CF1);
        cfs.truncateBlocking();

        // Do the initial update (+1, -1)
        ColumnFamily cells = UnsortedColumns.factory.create(cfs.metadata);
        cells.addCounter(cellname(1), 1L);
        cells.addCounter(cellname(2), 1L);
        new CounterMutation(new Mutation(KS, bytes(1), cells), ConsistencyLevel.ONE).apply();
        ColumnFamily current = cfs.getColumnFamily(QueryFilter.getIdentityFilter(dk(bytes(1)), CF1, System.currentTimeMillis()));
        assertEquals(1L, CounterContext.instance().total(current.getColumn(cellname(1)).value()));
        assertEquals(1L, CounterContext.instance().total(current.getColumn(cellname(2)).value()));

        // Remove the first counter, increment the second counter
        cells = UnsortedColumns.factory.create(cfs.metadata);
        cells.addTombstone(cellname(1), (int) System.currentTimeMillis() / 1000, FBUtilities.timestampMicros());
        cells.addCounter(cellname(2), 1L);
        new CounterMutation(new Mutation(KS, bytes(1), cells), ConsistencyLevel.ONE).apply();
        current = cfs.getColumnFamily(QueryFilter.getIdentityFilter(dk(bytes(1)), CF1, System.currentTimeMillis()));
        assertNull(current.getColumn(cellname(1)));
        assertEquals(2L, CounterContext.instance().total(current.getColumn(cellname(2)).value()));

        // Increment the first counter, make sure it's still shadowed by the tombstone
        cells = UnsortedColumns.factory.create(cfs.metadata);
        cells.addCounter(cellname(1), 1L);
        new CounterMutation(new Mutation(KS, bytes(1), cells), ConsistencyLevel.ONE).apply();
        current = cfs.getColumnFamily(QueryFilter.getIdentityFilter(dk(bytes(1)), CF1, System.currentTimeMillis()));
        assertNull(current.getColumn(cellname(1)));

        // Get rid of the complete partition
        Mutation mutation = new Mutation(KS, bytes(1));
        mutation.delete(CF1, FBUtilities.timestampMicros());
        new CounterMutation(mutation, ConsistencyLevel.ONE).apply();
        current = cfs.getColumnFamily(QueryFilter.getIdentityFilter(dk(bytes(1)), CF1, System.currentTimeMillis()));
        assertNull(current.getColumn(cellname(1)));
        assertNull(current.getColumn(cellname(2)));

        // Increment both counters, ensure that both stay dead
        cells = UnsortedColumns.factory.create(cfs.metadata);
        cells.addCounter(cellname(1), 1L);
        cells.addCounter(cellname(2), 1L);
        new CounterMutation(new Mutation(KS, bytes(1), cells), ConsistencyLevel.ONE).apply();
        current = cfs.getColumnFamily(QueryFilter.getIdentityFilter(dk(bytes(1)), CF1, System.currentTimeMillis()));
        assertNull(current.getColumn(cellname(1)));
        assertNull(current.getColumn(cellname(2)));
    }

