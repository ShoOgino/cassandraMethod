    @Test
    public void testReadBytes() throws IOException
    {
        final SequentialWriter w = createTempFile("brafReadBytes");

        byte[] data = new byte[RandomAccessReader.DEFAULT_BUFFER_SIZE + 10];

        for (int i = 0; i < data.length; i++)
        {
            data[i] = 'c';
        }

        w.write(data);
        w.sync();

        final ChannelProxy channel = new ChannelProxy(w.getPath());
        final RandomAccessReader r = RandomAccessReader.open(channel);

        ByteBuffer content = r.readBytes((int) r.length());

        // after reading whole file we should be at EOF
        assertEquals(0, ByteBufferUtil.compare(content, data));
        assert r.bytesRemaining() == 0 && r.isEOF();

        r.seek(0);
        content = r.readBytes(10); // reading first 10 bytes
        assertEquals(ByteBufferUtil.compare(content, "cccccccccc".getBytes()), 0);
        assertEquals(r.bytesRemaining(), r.length() - content.limit());

        // trying to read more than file has right now
        expectEOF(new Callable<Object>()
        {
            public Object call() throws IOException
            {
                return r.readBytes((int) r.length() + 10);
            }
        });

        w.finish();
        r.close();
        channel.close();
    }

