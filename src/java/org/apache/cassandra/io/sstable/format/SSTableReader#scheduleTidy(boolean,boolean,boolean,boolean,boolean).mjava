    private void scheduleTidy(final boolean closeBf, final boolean closeSummary, final boolean closeFiles, final boolean deleteFiles, final boolean deleteAll)
    {
        if (references.get() != 0)
            throw new IllegalStateException("SSTable is not fully released (" + references.get() + " references)");

        final ColumnFamilyStore cfs = Schema.instance.getColumnFamilyStoreInstance(metadata.cfId);
        final OpOrder.Barrier barrier;
        if (cfs != null)
        {
            barrier = cfs.readOrdering.newBarrier();
            barrier.issue();
        }
        else
            barrier = null;

        StorageService.tasks.execute(new Runnable()
        {
            public void run()
            {
                if (barrier != null)
                    barrier.await();
                if (closeBf)
                    bf.close();
                if (closeSummary)
                    indexSummary.close();
                if (closeFiles)
                {
                    ifile.cleanup();
                    dfile.cleanup();
                }
                if (runOnClose != null)
                    runOnClose.run();
                if (deleteAll)
                {
                    /**
                     * Do the OS a favour and suggest (using fadvice call) that we
                     * don't want to see pages of this SSTable in memory anymore.
                     *
                     * NOTE: We can't use madvice in java because it requires the address of
                     * the mapping, so instead we always open a file and run fadvice(fd, 0, 0) on it
                     */
                    dropPageCache();
                    deletingTask.run();
                }
                else if (deleteFiles)
                {
                    FileUtils.deleteWithConfirm(new File(dfile.path));
                    FileUtils.deleteWithConfirm(new File(ifile.path));
                }
            }
        });
    }

