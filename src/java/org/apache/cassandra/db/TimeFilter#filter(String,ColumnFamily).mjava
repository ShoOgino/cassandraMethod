    public ColumnFamily filter(String cf, ColumnFamily columnFamily)
    {
        if (columnFamily == null)
            return null;

        String[] values = RowMutation.getColumnAndColumnFamily(cf);
        ColumnFamily filteredCf = columnFamily.cloneMeShallow();
        if (values.length == 1 && !columnFamily.isSuper())
        {
            Collection<IColumn> columns = columnFamily.getAllColumns();
            for (IColumn column : columns)
            {
                if (column.timestamp() >= timeLimit_)
                {
                    filteredCf.addColumn(column);
                }
                else
                {
                    break;
                }
            }
        }
        else if (values.length == 2 && columnFamily.isSuper())
        {
            /*
                * TODO : For super columns we need to re-visit this issue.
                * For now this fn will set done to true if we are done with
                * atleast one super column
                */
            Collection<IColumn> columns = columnFamily.getAllColumns();
            for (IColumn column : columns)
            {
                SuperColumn superColumn = (SuperColumn) column;
                SuperColumn filteredSuperColumn = new SuperColumn(superColumn.name());
                filteredSuperColumn.markForDeleteAt(column.getLocalDeletionTime(), column.getMarkedForDeleteAt());
                filteredCf.addColumn(filteredSuperColumn);
                Collection<IColumn> subColumns = superColumn.getSubColumns();
                for (IColumn subColumn : subColumns)
                {
                    if (subColumn.timestamp() >= timeLimit_)
                    {
                        filteredSuperColumn.addColumn(subColumn);
                    }
                    else
                    {
                        break;
                    }
                }
            }
        }
        else
        {
            throw new UnsupportedOperationException();
        }
        return filteredCf;
    }

