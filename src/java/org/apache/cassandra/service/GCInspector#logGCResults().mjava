    private void logGCResults()
    {
        boolean gcChanged = false;
        try
        {
            for (GarbageCollectorMXBean gc : beans)
            {
                if (!gc.isValid())
                {
                    gcChanged = true;
                    continue;
                }

                Long previousTotal = gctimes.get(gc.getName());
                Long total = gc.getCollectionTime();
                if (previousTotal == null)
                    previousTotal = 0L;
                if (previousTotal.equals(total))
                    continue;
                gctimes.put(gc.getName(), total);
                Long duration = total - previousTotal; // may be zero for a really fast collection

                Long previousCount = gccounts.get(gc.getName());
                Long count = gc.getCollectionCount();

                if (previousCount == null)
                    previousCount = 0L;
                if (count.equals(previousCount))
                    continue;

                gccounts.put(gc.getName(), count);

                MemoryUsage mu = membean.getHeapMemoryUsage();
                long memoryUsed = mu.getUsed();
                long memoryMax = mu.getMax();

                String st = String.format("GC for %s: %s ms for %s collections, %s used; max is %s",
                                          gc.getName(), duration, count - previousCount, memoryUsed, memoryMax);
                long durationPerCollection = duration / (count - previousCount);
                if (durationPerCollection > MIN_DURATION)
                    logger.info(st);
                else if (logger.isDebugEnabled())
                    logger.debug(st);

                if (durationPerCollection > MIN_DURATION_TPSTATS)
                    StatusLogger.log();

                // if we just finished a full collection and we're still using a lot of memory, try to reduce the pressure
                if (gc.getName().equals("ConcurrentMarkSweep"))
                    SSTableDeletingTask.rescheduleFailedTasks();
            }
        }
        catch (UndeclaredThrowableException e)
        {
            // valid-ness may have changed out from under us, even though we check for it explicitly.
            // if so, gc.getName() will throw UTE when reflection runs into InstanceNotFoundException.
            // See CASSANDRA-5345
            gcChanged = true;
        }

        if (gcChanged)
            buildMXBeanList();
    }

