        public JsonColumn(T json, CFMetaData meta, boolean isSubColumn)
        {
            if (json instanceof List)
            {
                AbstractType<?> comparator = (isSubColumn) ? meta.subcolumnComparator : meta.comparator;
                List fields = (List<?>) json;

                assert fields.size() >= 3 : "Column definition should have at least 3";

                name  = stringAsType((String) fields.get(0), comparator);
                timestamp = (Long) fields.get(2);
                kind = "";

                if (fields.size() > 3)
                {
                    if (fields.get(3) instanceof Boolean)
                    {
                        // old format, reading this for backward compatibility sake
                        if (fields.size() == 6)
                        {
                            kind = "e";
                            ttl = (Integer) fields.get(4);
                            localExpirationTime = (Integer) fields.get(5);
                        }
                        else
                        {
                            kind = ((Boolean) fields.get(3)) ? "d" : "";
                        }
                    }
                    else
                    {
                        kind = (String) fields.get(3);
                        if (isExpiring())
                        {
                            ttl = (Integer) fields.get(4);
                            localExpirationTime = (Integer) fields.get(5);
                        }
                        else if (isCounter())
                        {
                            timestampOfLastDelete = (long) ((Integer) fields.get(4));
                        }
                    }
                }

                value = isDeleted() ? ByteBufferUtil.hexToBytes((String) fields.get(1))
                                    : stringAsType((String) fields.get(1), meta.getValueValidator(name.duplicate()));
            }
        }

