    private long sizeOfComplexColumn(int idx, ColumnData data, boolean hasComplexDeletion, SerializationHeader header, TypeSizes sizes, LivenessInfo rowLiveness, boolean useSparse)
    {
        long size = 0;
        Iterator<Cell> cells = data == null ? null : data.cells();
        DeletionTime deletion = data == null ? DeletionTime.LIVE : data.complexDeletion();
        if (useSparse)
        {
            assert hasComplexDeletion || deletion.isLive();
            if (cells == null && deletion.isLive())
                return size;

            size += sizes.sizeof((short)idx);
        }

        if (hasComplexDeletion)
            size += UnfilteredRowIteratorSerializer.delTimeSerializedSize(deletion, header, sizes);

        if (cells != null)
            while (cells.hasNext())
                size += sizeOfCell(cells.next(), header, sizes, rowLiveness);

        return size + sizeOfCell(null, header, sizes, rowLiveness);
    }

