    public UDFunction resolveFunction(String ksName, String cfName, List<? extends AssignementTestable> args)
    throws InvalidRequestException
    {
        for (UFMetaData candidate : signatureMap.values())
        {
            // Currently the UDF implementation must use concrete types (like Double, Integer) instead of base types (like Number).
            // To support handling of base types it is necessary to construct new, temporary instances of UDFFunction with the
            // signature for the current request in UDFFunction#argsType + UDFFunction#returnType.
            // Additionally we need the requested return type (AssignementTestable) has a parameter for this method.
            if (candidate.compatibleArgs(ksName, cfName, args))
            {

                // TODO CASSANDRA-7557 (specific per-function EXECUTE permission ??)

                if (candidate.invalid != null)
                    throw new InvalidRequestException(candidate.invalid.getMessage());
                return udfInstances.get(candidate.signature);
            }
        }
        return null;
    }

