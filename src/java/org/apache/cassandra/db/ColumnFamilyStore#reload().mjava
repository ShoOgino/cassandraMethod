    public void reload()
    {
        assert Table.flusherLock.writeLock().isHeldByCurrentThread();
        
        // metadata object has been mutated directly. make all the members jibe with new settings.
        
        // only update these runtime-modifiable settings if they have not been modified.
        if (!minCompactionThreshold.isModified())
            minCompactionThreshold = new DefaultInteger(metadata.getMinCompactionThreshold());
        if (!maxCompactionThreshold.isModified())
            maxCompactionThreshold = new DefaultInteger(metadata.getMaxCompactionThreshold());
        if (!memtime.isModified())
            memtime = new DefaultInteger(metadata.getMemtableFlushAfterMins());
        if (!memsize.isModified())
            memsize = new DefaultInteger(metadata.getMemtableThroughputInMb());
        if (!memops.isModified())
            memops = new DefaultDouble(metadata.getMemtableOperationsInMillions());
        
        ssTables.updateCacheSizes();
        
        // figure out what needs to be added and dropped.
        // future: if/when we have modifiable settings for secondary indexes, they'll need to be handled here.
        for (ByteBuffer indexName : indexedColumns.keySet())
        {
            if (!metadata.getColumn_metadata().containsKey(indexName))
            {
                ColumnFamilyStore indexCfs = indexedColumns.remove(indexName);
                if (indexCfs == null)
                {
                    logger.debug("index {} already removed; ignoring", FBUtilities.bytesToHex(indexName));
                    continue;
                }
                SystemTable.setIndexRemoved(metadata.tableName, metadata.cfName);
                indexCfs.removeAllSSTables();
            }
        }

        for (ColumnDefinition cdef : metadata.getColumn_metadata().values())
            if (!indexedColumns.containsKey(cdef.name) && cdef.getIndexType() != null)
                addIndex(cdef);
    }

