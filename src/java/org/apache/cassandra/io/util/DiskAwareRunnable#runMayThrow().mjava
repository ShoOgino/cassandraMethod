    /**
     * Run this task after selecting the optimal disk for it
     */
    protected void runMayThrow() throws Exception
    {
        long writeSize;
        Directories.DataDirectory directory;
        while (true)
        {
            writeSize = getExpectedWriteSize();
            directory = getWriteableLocation();
            if (directory != null || !reduceScopeForLimitedSpace())
                break;
        }
        if (directory == null)
            throw new RuntimeException("Insufficient disk space to write " + writeSize + " bytes");

        directory.currentTasks.incrementAndGet();
        directory.estimatedWorkingSize.addAndGet(writeSize);
        try
        {
            runWith(getDirectories().getLocationForDisk(directory));
        }
        finally
        {
            directory.estimatedWorkingSize.addAndGet(-1 * writeSize);
            directory.currentTasks.decrementAndGet();
        }
    }

