    public void addIndex(final ColumnDefinition info)
    {
        assert info.getIndexType() != null;
        IPartitioner rowPartitioner = StorageService.getPartitioner();
        AbstractType columnComparator = (rowPartitioner instanceof OrderPreservingPartitioner || rowPartitioner instanceof ByteOrderedPartitioner)
                                        ? BytesType.instance
                                        : new LocalByPartionerType(StorageService.getPartitioner());
        final CFMetaData indexedCfMetadata = CFMetaData.newIndexMetadata(table.name, columnFamily, info, columnComparator);
        ColumnFamilyStore indexedCfs = ColumnFamilyStore.createColumnFamilyStore(table,
                                                                                 indexedCfMetadata.cfName,
                                                                                 new LocalPartitioner(metadata.getColumn_metadata().get(info.name).validator),
                                                                                 indexedCfMetadata);
        // record that the column is supposed to be indexed, before we start building it
        // (so we don't omit indexing writes that happen during build process)
        indexedColumns.put(info.name, indexedCfs);
        if (!SystemTable.isIndexBuilt(table.name, indexedCfMetadata.cfName))
        {
            logger.info("Creating index {}.{}", table, indexedCfMetadata.cfName);
            try
            {
                forceBlockingFlush();
            }
            catch (ExecutionException e)
            {
                throw new RuntimeException(e);
            }
            catch (InterruptedException e)
            {
                throw new AssertionError(e);
            }
            buildSecondaryIndexes(getSSTables(), FBUtilities.singleton(info.name));
            logger.info("Index {} complete", indexedCfMetadata.cfName);
            SystemTable.setIndexBuilt(table.name, indexedCfMetadata.cfName);
        }
    }

