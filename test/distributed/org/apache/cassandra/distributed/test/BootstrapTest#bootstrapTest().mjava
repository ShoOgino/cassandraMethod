    @Test
    public void bootstrapTest() throws Throwable
    {
        int originalNodeCount = 2;
        int expandedNodeCount = originalNodeCount + 1;
        Cluster.Builder builder = builder().withNodes(originalNodeCount)
                                           .withTokenSupplier(TokenSupplier.evenlyDistributedTokens(expandedNodeCount))
                                           .withNodeIdTopology(NetworkTopology.singleDcNetworkTopology(expandedNodeCount, "dc0", "rack0"))
                                           .withConfig(config -> config.with(NETWORK, GOSSIP));

        Map<Integer, Long> withBootstrap = null;
        Map<Integer, Long> naturally = null;
        try (Cluster cluster = builder.withNodes(originalNodeCount).start())
        {
            populate(cluster);

            IInstanceConfig config = cluster.newInstanceConfig();
            config.set("auto_bootstrap", true);

            cluster.bootstrap(config).startup();

            cluster.stream().forEach(instance -> {
                instance.nodetool("cleanup", KEYSPACE, "tbl");
            });

            withBootstrap = count(cluster);
        }

        builder = builder.withNodes(expandedNodeCount)
                         .withTokenSupplier(TokenSupplier.evenlyDistributedTokens(expandedNodeCount))
                         .withConfig(config -> config.with(NETWORK, GOSSIP));

        try (ICluster cluster = builder.start())
        {
            populate(cluster);
            naturally = count(cluster);
        }

        for (Map.Entry<Integer, Long> e : withBootstrap.entrySet())
            Assert.assertTrue(e.getValue() >= naturally.get(e.getKey()));
    }

