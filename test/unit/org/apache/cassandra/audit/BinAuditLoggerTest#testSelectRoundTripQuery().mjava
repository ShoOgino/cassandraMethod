    @Test
    public void testSelectRoundTripQuery() throws Throwable
    {
        createTable("CREATE TABLE %s (id int primary key, v1 text, v2 text)");
        execute("INSERT INTO %s (id, v1, v2) VALUES (?, ?, ?)", 1, "Apache", "Cassandra");
        execute("INSERT INTO %s (id, v1, v2) VALUES (?, ?, ?)", 2, "trace", "test");

        String cql = "SELECT id, v1, v2 FROM " + KEYSPACE + '.' + currentTable() + " WHERE id = ?";

        Session session = sessionNet();

        PreparedStatement pstmt = session.prepare(cql);
        ResultSet rs = session.execute(pstmt.bind(1));

        assertEquals(1, rs.all().size());
        try (ChronicleQueue queue = ChronicleQueueBuilder.single(tempDir.toFile()).rollCycle(RollCycles.TEST_SECONDLY).build())
        {
            ExcerptTailer tailer = queue.createTailer();
            assertTrue(tailer.readDocument(wire -> {
                assertEquals("AuditLog", wire.read("type").text());
                assertThat(wire.read("message").text(), containsString(AuditLogEntryType.PREPARE_STATEMENT.toString()));
            }));

            assertTrue(tailer.readDocument(wire -> {
                assertEquals("AuditLog", wire.read("type").text());
                assertThat(wire.read("message").text(), containsString(AuditLogEntryType.SELECT.toString()));
            }));
            assertFalse(tailer.readDocument(wire -> {
            }));
        }
    }

