    /**
     * Creates a new histogram with max bin size of maxBinSize
     * @param maxBinSize maximum number of bins this histogram can have
     * @param source the existing bins in map form
     */
    private StreamingHistogram(int maxBinSize, Map<Number, long[]> source)
    {
        this.maxBinSize = maxBinSize;
        this.bin = new TreeMap<>((o1, o2) -> {
            if (o1.getClass().equals(o2.getClass()))
                return ((Comparable)o1).compareTo(o2);
            else
                return Double.compare(o1.doubleValue(), o2.doubleValue());
        });
        for (Map.Entry<Number, long[]> entry : source.entrySet())
            this.bin.put(entry.getKey(), new long[]{entry.getValue()[0]});
    }

