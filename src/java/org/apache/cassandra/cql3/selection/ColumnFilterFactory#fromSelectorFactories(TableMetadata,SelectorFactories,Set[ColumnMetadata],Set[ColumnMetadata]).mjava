    /**
     * Creates a new {@code ColumnFilterFactory} instance from the specified {@code SelectorFactories}.
     *
     * @param table the table metadata
     * @param factories the {@code SelectorFactories}
     * @param orderingColumns the columns used for ordering
     * @param nonPKRestrictedColumns the non primary key columns that have been resticted in the WHERE clause
     * @return a new {@code ColumnFilterFactory} instance
     */
    public static ColumnFilterFactory fromSelectorFactories(TableMetadata table,
                                                            SelectorFactories factories,
                                                            Set<ColumnMetadata> orderingColumns,
                                                            Set<ColumnMetadata> nonPKRestrictedColumns)
    {
        if (factories.areAllFetchedColumnsKnown())
        {
            ColumnFilter.Builder builder = ColumnFilter.allRegularColumnsBuilder(table);
            factories.addFetchedColumns(builder);
            builder.addAll(orderingColumns);
            // we'll also need to fetch any column on which we have a restriction (so we can apply said restriction)
            builder.addAll(nonPKRestrictedColumns);
            return new PrecomputedColumnFilter(builder.build());
        }

        return new OnRequestColumnFilterFactory(table, nonPKRestrictedColumns);
    }

