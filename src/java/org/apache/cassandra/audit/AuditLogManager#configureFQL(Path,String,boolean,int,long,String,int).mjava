    /**
     * Configure FQL
     *
     * @param path Path to store FQL files
     * @param rollCycle How often to roll FQL log segments so they can potentially be reclaimed
     * @param blocking Whether the FQL should block if the FQL falls behind or should drop log records
     * @param maxQueueWeight Maximum weight of in memory queue for records waiting to be written to the file before blocking or dropping
     * @param maxLogSize Maximum size of the rolled files to retain on disk before deleting the oldest file
     * @param archiveCommand the archive command to execute on rolled log files
     * @param maxArchiveRetries max number of retries of failed archive commands
     */
    public void configureFQL(Path path, String rollCycle, boolean blocking, int maxQueueWeight, long maxLogSize, String archiveCommand, int maxArchiveRetries)
    {
        if (path.equals(auditLogger.path()))
            throw new IllegalArgumentException(String.format("fullquerylogger path (%s) cannot be the same as the " +
                                                             "running audit logger (%s)",
                                                             path,
                                                             auditLogger.path()));

        fullQueryLogger.configure(path, rollCycle, blocking, maxQueueWeight, maxLogSize, archiveCommand, maxArchiveRetries);
    }

