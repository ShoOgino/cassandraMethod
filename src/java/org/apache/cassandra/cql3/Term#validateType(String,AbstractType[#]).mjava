    public void validateType(String identifier, AbstractType<?> validator) throws InvalidRequestException
    {
        if (skipTypeValidation)
            return;

        Set<Type> supported = validator.supportedCQL3Constants();
        // Treat null specially as this mean "I don't have a supportedCQL3Type method"
        if (supported == null)
            return;

        if (!supported.contains(type))
        {
            // Blobs should now be inputed as hexadecimal constants. However, to allow people to upgrade, we still allow
            // blob-as-strings, even though it is deprecated (see #5198).
            if (type == Type.STRING && validator instanceof BytesType)
            {
                if (!stringAsBlobWarningLogged)
                {
                    stringAsBlobWarningLogged = true;
                    logger.warn("Inputing CLQ3 blobs as strings (like %s = '%s') is now deprecated and will be removed in a future version. "
                              + "You should convert client code to use a blob constant (%s = %s) instead (see http://cassandra.apache.org/doc/cql3/CQL.html changelog section for more info).",
                              identifier, text, identifier, "0x" + text);
                }
                return;
            }

            // TODO: Ideallly we'd keep the declared CQL3 type of columns and use that in the following message, instead of the AbstracType class name.
            throw new InvalidRequestException(String.format("Invalid %s constant for %s of type %s", type, identifier, validator.asCQL3Type()));
        }
    }

