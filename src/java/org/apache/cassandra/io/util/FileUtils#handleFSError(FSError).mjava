    public static void handleFSError(FSError e)
    {
        switch (DatabaseDescriptor.getDiskFailurePolicy())
        {
            case stop:
                if (StorageService.instance.isInitialized())
                {
                    logger.error("Stopping gossiper");
                    StorageService.instance.stopGossiping();
                }

                if (StorageService.instance.isRPCServerRunning())
                {
                    logger.error("Stopping RPC server");
                    StorageService.instance.stopRPCServer();
                }

                if (StorageService.instance.isNativeTransportRunning())
                {
                    logger.error("Stopping native transport");
                    StorageService.instance.stopNativeTransport();
                }
                break;
            case best_effort:
                // for both read and write errors mark the path as unwritable.
                BlacklistedDirectories.maybeMarkUnwritable(e.path);
                if (e instanceof FSReadError)
                {
                    File directory = BlacklistedDirectories.maybeMarkUnreadable(e.path);
                    if (directory != null)
                        Keyspace.removeUnreadableSSTables(directory);
                }
                break;
            case ignore:
                // already logged, so left nothing to do
                break;
            default:
                throw new IllegalStateException();
        }
    }

