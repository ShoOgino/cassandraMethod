    @Test
    public void testSelectUDTLiteral() throws Throwable
    {
        String type = createType("CREATE TYPE %s(a int, b text)");
        createTable("CREATE TABLE %s (k int PRIMARY KEY, v " + type + ")");

        execute("INSERT INTO %s(k, v) VALUES (?, ?)", 0, userType("a", 3, "b", "foo"));

        assertInvalidMessage("Cannot infer type for term", "SELECT { a: 4, b: 'bar'} FROM %s");

        assertRows(execute("SELECT k, v, (" + type + "){ a: 4, b: 'bar'} FROM %s"),
            row(0, userType("a", 3, "b", "foo"), userType("a", 4, "b", "bar"))
        );

        assertRows(execute("SELECT k, v, (" + type + ")({ a: 4, b: 'bar'}) FROM %s"),
            row(0, userType("a", 3, "b", "foo"), userType("a", 4, "b", "bar"))
        );

        assertRows(execute("SELECT k, v, ((" + type + "){ a: 4, b: 'bar'}).a FROM %s"),
                   row(0, userType("a", 3, "b", "foo"), 4)
        );

        assertRows(execute("SELECT k, v, (" + type + "){ a: 4, b: 'bar'}.a FROM %s"),
                   row(0, userType("a", 3, "b", "foo"), 4)
        );

        assertInvalidMessage("Cannot infer type for term", "SELECT { a: 4} FROM %s");

        assertRows(execute("SELECT k, v, (" + type + "){ a: 4} FROM %s"),
            row(0, userType("a", 3, "b", "foo"), userType("a", 4, "b", null))
        );

        assertRows(execute("SELECT k, v, (" + type + "){ b: 'bar'} FROM %s"),
                   row(0, userType("a", 3, "b", "foo"), userType("a", null, "b", "bar"))
        );

        execute("INSERT INTO %s(k, v) VALUES (?, ?)", 1, userType("a", 5, "b", "foo"));
        assertRows(execute("SELECT (" + type + "){ a: max(v.a) , b: 'max'} FROM %s"),
                   row(userType("a", 5, "b", "max"))
        );
        assertRows(execute("SELECT (" + type + "){ a: min(v.a) , b: 'min'} FROM %s"),
                   row(userType("a", 3, "b", "min"))
        );
    }

