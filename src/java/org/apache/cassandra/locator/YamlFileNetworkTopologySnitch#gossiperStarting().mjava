    /**
     * Called in preparation for the initiation of the gossip loop.
     */
    @Override
    public synchronized void gossiperStarting()
    {
        gossiperInitialized = true;
        StorageService.instance.gossipSnitchInfo();

        final IEndpointStateChangeSubscriber escs = new IEndpointStateChangeSubscriber()
        {

            /**
             * Called upon a "restart" gossip event; does nothing.
             * 
             * @param endpoint
             *            the endpoint's broadcast address
             * @param state
             *            the endpoint's state
             */
            @Override
            public void onRestart(final InetAddress endpoint,
                    final EndpointState state)
            {
                // No-op
            }

            /**
             * Called upon a "remove" gossip event; does nothing.
             * 
             * @param endpoint
             *            the endpoint's broadcast address
             */
            @Override
            public void onRemove(final InetAddress endpoint)
            {
                // No-op
            }

            /**
             * Called upon a "join" gossip event; attempts a reconnect to a preferred non-broadcast address if
             * necessary.
             * 
             * @param endpoint
             *            the endpoint's broadcast address
             * @param epState
             *            the endpoint's state
             */
            @Override
            public void onJoin(final InetAddress endpoint,
                    final EndpointState epState)
            {
                reconnectViaPreferredAddress(endpoint);
            }

            /**
             * Called upon a "dead" gossip event; does nothing.
             * 
             * @param endpoint
             *            the endpoint's broadcast address
             * @param state
             *            the endpoint's state
             */
            @Override
            public void onDead(final InetAddress endpoint,
                    final EndpointState state)
            {
                // No-op
            }

            /**
             * Called upon a "change" gossip event; does nothing.
             * 
             * @param endpoint
             *            the endpoint's broadcast address
             * @param state
             *            the application state that has changed
             * @param value
             *            the new value of the state
             */
            @Override
            public void onChange(final InetAddress endpoint,
                    final ApplicationState state, final VersionedValue value)
            {
                // No-op
            }

            /**
             * Called upon an "alive" gossip event; attempts a reconnect to a preferred non-broadcast address if
             * necessary.
             * 
             * @param endpoint
             *            the endpoint's broadcast address
             * @param state
             *            the endpoint's state
             */
            @Override
            public void onAlive(final InetAddress endpoint,
                    final EndpointState state)
            {
                reconnectViaPreferredAddress(endpoint);
            }
        };
        Gossiper.instance.register(escs);
    }

