      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, atomic_batch_mutate_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        {
          org.apache.thrift.protocol.TMap _map335 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
          struct.mutation_map = new HashMap<ByteBuffer,Map<String,List<Mutation>>>(2*_map335.size);
          for (int _i336 = 0; _i336 < _map335.size; ++_i336)
          {
            ByteBuffer _key337; // required
            Map<String,List<Mutation>> _val338; // required
            _key337 = iprot.readBinary();
            {
              org.apache.thrift.protocol.TMap _map339 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
              _val338 = new HashMap<String,List<Mutation>>(2*_map339.size);
              for (int _i340 = 0; _i340 < _map339.size; ++_i340)
              {
                String _key341; // required
                List<Mutation> _val342; // required
                _key341 = iprot.readString();
                {
                  org.apache.thrift.protocol.TList _list343 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
                  _val342 = new ArrayList<Mutation>(_list343.size);
                  for (int _i344 = 0; _i344 < _list343.size; ++_i344)
                  {
                    Mutation _elem345; // optional
                    _elem345 = new Mutation();
                    _elem345.read(iprot);
                    _val342.add(_elem345);
                  }
                }
                _val338.put(_key341, _val342);
              }
            }
            struct.mutation_map.put(_key337, _val338);
          }
        }
        struct.setMutation_mapIsSet(true);
        struct.consistency_level = ConsistencyLevel.findByValue(iprot.readI32());
        struct.setConsistency_levelIsSet(true);
      }

