    public SettingsCommandUser(Options options)
    {
        super(Command.USER, options.parent);

        this.options = options;
        clustering = options.clustering.get();
        ratios = options.ops.ratios();
        default_profile_name=null;


        String yamlPath = options.profile.value();
        profiles = new LinkedHashMap<>();

        String[] yamlPaths = yamlPath.split(",");
        for (String curYamlPath : yamlPaths)
        {
            File yamlFile = new File(curYamlPath);
            URI yamlURI;
            if (yamlFile.exists()) {
            	yamlURI = yamlFile.toURI();
            } else {
            	yamlURI = URI.create(curYamlPath);
            	String uriScheme = yamlURI.getScheme();
            	if (uriScheme == null || "file".equals(uriScheme)) {
                    throw new IllegalArgumentException("File '" + yamlURI.getPath() + "' doesn't exist!");
            	}
            }
            StressProfile profile = StressProfile.load(yamlURI);
            String specName = profile.specName;
            if (default_profile_name == null) {default_profile_name=specName;} //first file is default
            if (profiles.containsKey(specName))
            {
                throw new IllegalArgumentException("Must only specify a singe YAML file per table (including keyspace qualifier).");
            }
            profiles.put(specName, profile);
        }


        if (ratios.size() == 0)
            throw new IllegalArgumentException("Must specify at least one command with a non-zero ratio");
    }

