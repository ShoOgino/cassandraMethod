    @Test
    public void testMigrateTransferredRanges() throws Throwable
    {
        String insert = String.format("INSERT INTO %s ("
                                      + "operation, "
                                      + "peer, "
                                      + "keyspace_name, "
                                      + "ranges) "
                                      + " values ( ?, ?, ?, ? )",
                                      SystemKeyspaceMigrator40.legacyTransferredRangesName);
        execute(insert,
                "foo",
                InetAddress.getByName("127.0.0.1"),
                "bar",
                ImmutableSet.of(ByteBuffer.wrap(new byte[] { 42 })));
        SystemKeyspaceMigrator40.migrate();

        int rowCount = 0;
        for (UntypedResultSet.Row row : execute(String.format("SELECT * FROM %s", SystemKeyspaceMigrator40.transferredRangesName)))
        {
            rowCount++;
            assertEquals("foo", row.getString("operation"));
            assertEquals(InetAddress.getByName("127.0.0.1"), row.getInetAddress("peer"));
            assertEquals(DatabaseDescriptor.getStoragePort(), row.getInt("peer_port"));
            assertEquals("bar", row.getString("keyspace_name"));
            assertEquals(ImmutableSet.of(ByteBuffer.wrap(new byte[] { 42 })), row.getSet("ranges", BytesType.instance));
        }
        assertEquals(1, rowCount);

        //Test nulls/missing don't prevent the row from propagating
        execute(String.format("TRUNCATE %s", SystemKeyspaceMigrator40.legacyTransferredRangesName));
        execute(String.format("TRUNCATE %s", SystemKeyspaceMigrator40.transferredRangesName));

        execute(String.format("INSERT INTO %s (operation, peer, keyspace_name) VALUES (?, ?, ?)", SystemKeyspaceMigrator40.legacyTransferredRangesName),
                "foo",
                InetAddress.getByName("127.0.0.1"),
                "bar");
        SystemKeyspaceMigrator40.migrate();

        rowCount = 0;
        for (UntypedResultSet.Row row : execute(String.format("SELECT * FROM %s", SystemKeyspaceMigrator40.transferredRangesName)))
        {
            rowCount++;
        }
        assertEquals(1, rowCount);
    }

