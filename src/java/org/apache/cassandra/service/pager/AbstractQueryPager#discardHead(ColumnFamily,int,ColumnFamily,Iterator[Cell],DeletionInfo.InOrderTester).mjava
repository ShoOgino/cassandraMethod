    private int discardHead(ColumnFamily cf, int toDiscard, ColumnFamily copy, Iterator<Cell> iter, DeletionInfo.InOrderTester tester)
    {
        ColumnCounter counter = columnCounter();

        List<Cell> staticCells = new ArrayList<>(cfm.staticColumns().size());

        // Discard the first 'toDiscard' live, non-static cells
        while (iter.hasNext())
        {
            Cell c = iter.next();

            // if it's a static column, don't count it and save it to add to the trimmed results
            ColumnDefinition columnDef = cfm.getColumnDefinition(c.name());
            if (columnDef != null && columnDef.kind == ColumnDefinition.Kind.STATIC)
            {
                staticCells.add(c);
                continue;
            }

            counter.count(c, tester);

            // once we've discarded the required amount, add the rest
            if (counter.live() > toDiscard)
            {
                for (Cell staticCell : staticCells)
                    copy.addColumn(staticCell);

                copy.addColumn(c);
                while (iter.hasNext())
                    copy.addColumn(iter.next());
            }
        }
        int live = counter.live();
        // We want to take into account the row even if it was containing only static columns
        if (live == 0 && !staticCells.isEmpty())
            live = 1;
        return Math.min(live, toDiscard);
    }

