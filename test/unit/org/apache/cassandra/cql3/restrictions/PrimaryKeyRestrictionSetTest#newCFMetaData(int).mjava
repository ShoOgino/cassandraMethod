    /**
     * Creates a new <code>CFMetaData</code> instance.
     *
     * @param numberOfClusteringColumns the number of clustering column
     * @return a new <code>CFMetaData</code> instance
     */
    private static CFMetaData newCFMetaData(int numberOfClusteringColumns)
    {
        List<AbstractType<?>> types = new ArrayList<>();

        for (int i = 0; i < numberOfClusteringColumns; i++)
            types.add(Int32Type.instance);

        CompoundSparseCellNameType cType = new CompoundSparseCellNameType(types);
        CFMetaData cfMetaData = new CFMetaData("keyspace", "test", ColumnFamilyType.Standard, cType);

        for (int i = 0; i < numberOfClusteringColumns; i++)
        {
            ByteBuffer name = ByteBufferUtil.bytes("clustering_" + i);
            ColumnDefinition columnDef = ColumnDefinition.clusteringKeyDef(cfMetaData, name, Int32Type.instance, i);
            cfMetaData.addColumnDefinition(columnDef);
        }
        cfMetaData.rebuild();
        return cfMetaData;
    }

