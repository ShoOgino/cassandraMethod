    /**
     * lock
     *
     * @param lockName lock to be locked for writing. name can be any string, but it must not
     * include slash (/) or any character disallowed by ZooKeeper (see
     * hadoop.apache.org/zookeeper/docs/current/zookeeperProgrammers.html#ch_zkDataModel).
     * @return name of the znode inside zookeeper holding this lock.
     */
    public String lock(String lockName) throws KeeperException, InterruptedException, IOException
    {
        for (int i=1; i<=OperationRetries; i++)
        {
            try
            {
                return lockInternal(lockName);
            }
            catch (KeeperException.SessionExpiredException e)
            {
                logger.warn("ZooKeeper session expired, reconnecting");
                reestablishZooKeeperSession();
            }
            catch (KeeperException.ConnectionLossException e)
            {
                // ZooKeeper handles lost connection automatically, but in order to reset all
                // ephemeral nodes, we close the whole thing.
                logger.warn("ZooKeeper connection lost, reconnecting");
                reestablishZooKeeperSession();
            }

            try
            {
                Thread.sleep(RetryInterval * i);
            }
            catch (InterruptedException ignore)
            {
                // Just fall through to retry
            }
        }

        throw new KeeperException.ConnectionLossException();
    }

