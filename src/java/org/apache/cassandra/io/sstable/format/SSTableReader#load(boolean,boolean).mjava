    /**
     * Loads ifile, dfile and indexSummary, and optionally recreates the bloom filter.
     * @param saveSummaryIfCreated for bulk loading purposes, if the summary was absent and needed to be built, you can
     *                             avoid persisting it to disk by setting this to false
     */
    private void load(boolean recreateBloomFilter, boolean saveSummaryIfCreated) throws IOException
    {
        try(SegmentedFile.Builder ibuilder = SegmentedFile.getBuilder(DatabaseDescriptor.getIndexAccessMode(), false);
            SegmentedFile.Builder dbuilder = SegmentedFile.getBuilder(DatabaseDescriptor.getDiskAccessMode(), compression))
        {
            boolean summaryLoaded = loadSummary(ibuilder, dbuilder);
            boolean builtSummary = false;
            if (recreateBloomFilter || !summaryLoaded)
            {
                buildSummary(recreateBloomFilter, summaryLoaded, Downsampling.BASE_SAMPLING_LEVEL);
                builtSummary = true;
            }

            if (components.contains(Component.PRIMARY_INDEX))
                ifile = ibuilder.buildIndex(descriptor, indexSummary);

            dfile = dbuilder.buildData(descriptor, sstableMetadata);

            // Check for an index summary that was downsampled even though the serialization format doesn't support
            // that.  If it was downsampled, rebuild it.  See CASSANDRA-8993 for details.
        if (!descriptor.version.hasSamplingLevel() && !builtSummary && !validateSummarySamplingLevel() && ifile != null)
            {
                indexSummary.close();
                ifile.close();
                dfile.close();

                logger.info("Detected erroneously downsampled index summary; will rebuild summary at full sampling");
                FileUtils.deleteWithConfirm(new File(descriptor.filenameFor(Component.SUMMARY)));

                try(SegmentedFile.Builder ibuilderRebuild = SegmentedFile.getBuilder(DatabaseDescriptor.getIndexAccessMode(), false);
                    SegmentedFile.Builder dbuilderRebuild = SegmentedFile.getBuilder(DatabaseDescriptor.getDiskAccessMode(), compression))
                {
                    buildSummary(false, false, Downsampling.BASE_SAMPLING_LEVEL);
                    ifile = ibuilderRebuild.buildIndex(descriptor, indexSummary);
                    dfile = dbuilderRebuild.buildData(descriptor, sstableMetadata);
                    saveSummary(ibuilderRebuild, dbuilderRebuild);
                }
            }
            else if (saveSummaryIfCreated && builtSummary)
            {
                saveSummary(ibuilder, dbuilder);
            }
        }
        catch (Throwable t)
        { // Because the tidier has not been set-up yet in SSTableReader.open(), we must release the files in case of error
            if (ifile != null)
            {
                ifile.close();
                ifile = null;
            }

            if (dfile != null)
            {
                dfile.close();
                dfile = null;
            }

            if (indexSummary != null)
            {
                indexSummary.close();
                indexSummary = null;
            }

            throw t;
        }
    }

