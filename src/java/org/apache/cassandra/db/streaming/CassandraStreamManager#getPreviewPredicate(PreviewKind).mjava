    private static Predicate<SSTableReader> getPreviewPredicate(PreviewKind kind)
    {
        switch (kind)
        {
            case ALL:
                return Predicates.alwaysTrue();
            case UNREPAIRED:
                return Predicates.not(SSTableReader::isRepaired);
            case REPAIRED:
                return SSTableReader::isRepaired;
            default:
                throw new IllegalArgumentException("Unsupported kind: " + kind);
        }
    }

