    public static void shutdown()
    {
        logger_.info("Shutting down ...");
        synchronized (MessagingService.class)
        {
            FailureDetector.instance().unregisterFailureDetectionEventListener(MessagingService.instance());
            /* Stop listening on any TCP socket */
            for (SelectionKey skey : listenSockets_.values())
            {
                skey.cancel();
                try
                {
                    skey.channel().close();
                }
                catch (IOException e) {}
            }
            listenSockets_.clear();

            /* Stop listening on any UDP ports. */
            for (UdpConnection con : udpConnections_.values())
            {
                con.close();
            }
            udpConnections_.clear();

            /* Shutdown the threads in the EventQueue's */
            messageDeserializationExecutor_.shutdownNow();
            messageDeserializerExecutor_.shutdownNow();
            streamExecutor_.shutdownNow();

            StageManager.shutdown();
            
            /* shut down the cachetables */
            taskCompletionMap_.shutdown();
            callbackMap_.shutdown();

            /* Interrupt the selector manager thread */
            SelectorManager.getSelectorManager().interrupt();

            connectionManagers_.clear();
            verbHandlers_.clear();
            bShutdown_ = true;
        }
        logger_.info("Shutdown invocation complete.");
    }

