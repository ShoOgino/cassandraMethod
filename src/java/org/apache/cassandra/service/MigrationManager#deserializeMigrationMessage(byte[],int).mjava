    /**
     * Deserialize migration message considering data compatibility starting from version 1.1
     *
     * @param data The data of the message from coordinator which hold schema mutations to apply
     * @param version The version of the message
     *
     * @return The collection of the row mutations to apply on the node (aka schema)
     *
     * @throws IOException if message is of incompatible version or data is corrupted
     */
    public static Collection<RowMutation> deserializeMigrationMessage(byte[] data, int version) throws IOException
    {
        if (version < MessagingService.VERSION_11)
            throw new IOException("Can't accept schema migrations from Cassandra versions previous to 1.1, please update first.");

        Collection<RowMutation> schema = new ArrayList<RowMutation>();
        DataInputStream in = new DataInputStream(new FastByteArrayInputStream(data));

        int count = in.readInt();

        for (int i = 0; i < count; i++)
            schema.add(RowMutation.serializer().deserialize(in, version));

        return schema;
    }

