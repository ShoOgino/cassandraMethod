    @Test
    public void testTableMetadataBuilder() throws ConfigurationException
    {
        TableMetadata.Builder builder =
            TableMetadata.builder(KEYSPACE1, "TestApplyCFM_CF")
                         .addPartitionKeyColumn("keys", BytesType.instance)
                         .addClusteringColumn("col", BytesType.instance)
                         .comment("No comment")
                         .readRepairChance(0.5)
                         .gcGraceSeconds(100000)
                         .compaction(CompactionParams.scts(ImmutableMap.of("min_threshold", "500", "max_threshold", "500")));

        for (int i = 0; i < 5; i++)
        {
            ByteBuffer name = ByteBuffer.wrap(new byte[] { (byte)i });
            builder.addRegularColumn(ColumnIdentifier.getInterned(name, BytesType.instance), ByteType.instance);
        }


        TableMetadata table = builder.build();
        // we'll be adding this one later. make sure it's not already there.
        assertNull(table.getColumn(ByteBuffer.wrap(new byte[]{ 5 })));

        // add one.
        ColumnMetadata addIndexDef = ColumnMetadata.regularColumn(table, ByteBuffer.wrap(new byte[] { 5 }), BytesType.instance);
        builder.addColumn(addIndexDef);

        // remove one.
        ColumnMetadata removeIndexDef = ColumnMetadata.regularColumn(table, ByteBuffer.wrap(new byte[] { 0 }), BytesType.instance);
        builder.removeRegularOrStaticColumn(removeIndexDef.name);

        TableMetadata table2 = builder.build();

        for (int i = 1; i < table2.columns().size(); i++)
            assertNotNull(table2.getColumn(ByteBuffer.wrap(new byte[]{ 1 })));
        assertNull(table2.getColumn(ByteBuffer.wrap(new byte[]{ 0 })));
        assertNotNull(table2.getColumn(ByteBuffer.wrap(new byte[]{ 5 })));
    }

