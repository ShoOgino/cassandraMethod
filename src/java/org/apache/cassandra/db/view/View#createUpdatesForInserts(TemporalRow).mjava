    /**
     * @return Mutation which is the transformed base table mutation for the view.
     */
    private PartitionUpdate createUpdatesForInserts(TemporalRow temporalRow)
    {
        TemporalRow.Resolver resolver = TemporalRow.latest;

        DecoratedKey partitionKey = viewPartitionKey(temporalRow, resolver);
        CFMetaData viewCfm = definition.metadata;

        if (partitionKey == null)
        {
            // Not having a partition key means we aren't updating anything
            return null;
        }

        Row.Builder regularBuilder = BTreeRow.unsortedBuilder(temporalRow.nowInSec);

        CBuilder clustering = CBuilder.create(viewCfm.comparator);
        for (int i = 0; i < viewCfm.clusteringColumns().size(); i++)
        {
            ColumnDefinition column = viewCfm.clusteringColumns().get(i);
            ByteBuffer value = temporalRow.clusteringValue(column, resolver);

            // handle single-column deletions correctly to avoid nulls in the view primary key
            if (value == null)
                return null;

            clustering.add(value);
        }
        regularBuilder.newRow(clustering.build());
        regularBuilder.addPrimaryKeyLivenessInfo(LivenessInfo.create(temporalRow.viewClusteringTimestamp(),
                                                                     temporalRow.viewClusteringTtl(),
                                                                     temporalRow.viewClusteringLocalDeletionTime()));

        for (ColumnDefinition columnDefinition : viewCfm.allColumns())
        {
            if (columnDefinition.isPrimaryKeyColumn())
                continue;

            for (Cell cell : temporalRow.values(columnDefinition, resolver))
            {
                regularBuilder.addCell(cell);
            }
        }

        Row row = regularBuilder.build();

        // although we check for empty rows in updateAppliesToView(), if there are any good rows in the PartitionUpdate,
        // all rows in the partition will be processed, and we need to handle empty/non-live rows here (CASSANDRA-10614)
        if (row.isEmpty())
            return null;

        return PartitionUpdate.singleRowUpdate(viewCfm, partitionKey, row);
    }

