    private void testCorruptRecord(BiConsumer<TransactionLog, SSTableReader> modifier, boolean isRecoverable) throws IOException
    {
        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);
        SSTableReader sstableOld = sstable(cfs, 0, 128);
        SSTableReader sstableNew = sstable(cfs, 1, 128);

        File dataFolder = sstableOld.descriptor.directory;

        // simulate tracking sstables with a committed transaction except the checksum will be wrong
        TransactionLog transactionLog = new TransactionLog(OperationType.COMPACTION, cfs.metadata);
        assertNotNull(transactionLog);

        transactionLog.trackNew(sstableNew);
        transactionLog.obsoleted(sstableOld);

        //Modify the transaction log in some way
        modifier.accept(transactionLog, sstableOld);

        String txnFilePath = transactionLog.getData().getLogFile().file.getPath();

        assertNull(transactionLog.complete(null));

        sstableOld.selfRef().release();
        sstableNew.selfRef().release();

        if (isRecoverable)
        { // the corruption is recoverable, we assume there is a commit record

            //This should return the old files and the tx log
            assertFiles(Iterables.concat(sstableOld.getAllFilePaths(), Collections.singleton(txnFilePath)),
                        TransactionLog.getTemporaryFiles(cfs.metadata, dataFolder));

            //This should remove old files
            TransactionLog.removeUnfinishedLeftovers(cfs.metadata);

            assertFiles(dataFolder.getPath(), Sets.newHashSet(sstableNew.getAllFilePaths()));
        }
        else
        { // if an intermediate line was modified, we cannot tell,
          // it should just throw and handle the exception with a log message

            //This should not return any files
            assertEquals(Collections.emptyList(), new TransactionLog.FileLister(dataFolder.toPath(),
                                                                                (file, type) -> type != Directories.FileType.FINAL,
                                                                                Directories.OnTxnErr.IGNORE).list());

            try
            {
                //This should throw a RuntimeException
                new TransactionLog.FileLister(dataFolder.toPath(),
                                              (file, type) -> type != Directories.FileType.FINAL,
                                              Directories.OnTxnErr.THROW).list();
                fail("Expected exception");
            }
            catch (RuntimeException ex)
            {
                // pass
                ex.printStackTrace();
            }

            //This should not remove any files
            TransactionLog.removeUnfinishedLeftovers(cfs.metadata);

            assertFiles(dataFolder.getPath(), Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths(),
                                                                               sstableOld.getAllFilePaths(),
                                                                               Collections.singleton(txnFilePath))),
                        true);
        }
    }

