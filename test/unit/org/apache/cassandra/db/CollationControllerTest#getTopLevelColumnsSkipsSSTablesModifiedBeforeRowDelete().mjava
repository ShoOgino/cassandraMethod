    @Test
    public void getTopLevelColumnsSkipsSSTablesModifiedBeforeRowDelete() 
    {
        Keyspace keyspace = Keyspace.open(KEYSPACE1);
        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF);
        Mutation rm;
        DecoratedKey dk = Util.dk("key1");
        
        // add data
        rm = new Mutation(keyspace.getName(), dk.getKey());
        rm.add(cfs.name, Util.cellname("Column1"), ByteBufferUtil.bytes("asdf"), 0);
        rm.applyUnsafe();
        cfs.forceBlockingFlush();
        
        // remove
        rm = new Mutation(keyspace.getName(), dk.getKey());
        rm.delete(cfs.name, 10);
        rm.applyUnsafe();
        
        // add another mutation because sstable maxtimestamp isn't set
        // correctly during flush if the most recent mutation is a row delete
        rm = new Mutation(keyspace.getName(), Util.dk("key2").getKey());
        rm.add(cfs.name, Util.cellname("Column1"), ByteBufferUtil.bytes("zxcv"), 20);
        rm.applyUnsafe();
        
        cfs.forceBlockingFlush();

        // add yet one more mutation
        rm = new Mutation(keyspace.getName(), dk.getKey());
        rm.add(cfs.name, Util.cellname("Column1"), ByteBufferUtil.bytes("foobar"), 30);
        rm.applyUnsafe();
        cfs.forceBlockingFlush();

        // A NamesQueryFilter goes down one code path (through collectTimeOrderedData())
        // It should only iterate the last flushed sstable, since it probably contains the most recent value for Column1
        QueryFilter filter = Util.namesQueryFilter(cfs, dk, "Column1");
        CollationController controller = new CollationController(cfs, filter, Integer.MIN_VALUE);
        controller.getTopLevelColumns(true);
        assertEquals(1, controller.getSstablesIterated());

        // SliceQueryFilter goes down another path (through collectAllData())
        // We will read "only" the last sstable in that case, but because the 2nd sstable has a tombstone that is more
        // recent than the maxTimestamp of the very first sstable we flushed, we should only read the 2 first sstables.
        filter = QueryFilter.getIdentityFilter(dk, cfs.name, System.currentTimeMillis());
        controller = new CollationController(cfs, filter, Integer.MIN_VALUE);
        controller.getTopLevelColumns(true);
        assertEquals(2, controller.getSstablesIterated());
    }

