    /**
     * Validate a column slices.
     * To be valid, the slice start must sort before the slice end.
     *
     * @throws IllegalArgumentException if the slice is not valid.
     */
    //public static void validate(ColumnSlice slice, AbstractType<?> comparator, boolean reversed)
    //{
    //    if (slice.isAlwaysEmpty(comparator, reversed))
    //        throw new IllegalArgumentException("Slice finish must come after start in traversal order");
    //}

    public boolean isAlwaysEmpty(AbstractType<?> comparator, boolean reversed)
    {
        Comparator<ByteBuffer> orderedComparator = reversed ? comparator.reverseComparator : comparator;
        return (start.remaining() > 0 && finish.remaining() > 0 && orderedComparator.compare(start, finish) > 0);
    }

