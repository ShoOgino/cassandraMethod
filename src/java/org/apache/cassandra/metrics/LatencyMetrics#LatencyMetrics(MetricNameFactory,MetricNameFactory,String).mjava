    public LatencyMetrics(MetricNameFactory factory, MetricNameFactory aliasFactory, String namePrefix)
    {
        this.factory = factory;
        this.aliasFactory = aliasFactory;
        this.namePrefix = namePrefix;

        LatencyMetricsTimer timer = new LatencyMetrics.LatencyMetricsTimer(new DecayingEstimatedHistogramReservoir());
        Counter counter = new LatencyMetricsCounter();

        if (aliasFactory == null)
        {
            latency = Metrics.register(factory.createMetricName(namePrefix + "Latency"), timer);
            totalLatency = Metrics.register(factory.createMetricName(namePrefix + "TotalLatency"), counter);
        }
        else
        {
            latency = Metrics.register(factory.createMetricName(namePrefix + "Latency"), aliasFactory.createMetricName(namePrefix + "Latency"), timer);
            totalLatency = Metrics.register(factory.createMetricName(namePrefix + "TotalLatency"), aliasFactory.createMetricName(namePrefix + "TotalLatency"), counter);
        }
    }

