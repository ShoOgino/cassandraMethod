    /**
     * Read the host ID from the system table, creating (and storing) one if
     * none exists.
     */
    public static UUID getLocalHostId()
    {
        UUID hostId = null;

        // Look up the Host UUID (return it if found)
        Table table = Table.open(Table.SYSTEM_TABLE);
        QueryFilter filter = QueryFilter.getNamesFilter(decorate(LOCAL_KEY),
                                                        new QueryPath(LOCAL_CF),
                                                        ImmutableSortedSet.<ByteBuffer>of(ByteBufferUtil.bytes("ring_id")));
        ColumnFamily cf = table.getColumnFamilyStore(LOCAL_CF).getColumnFamily(filter);
        if (cf != null)
        {
            cf = ColumnFamilyStore.removeDeleted(cf, 0);
            assert cf.getColumnCount() <= 1;
            if (cf.getColumnCount() > 0)
                return UUIDGen.getUUID(cf.iterator().next().value());
        }

        // ID not found, generate a new one, persist, and then return it.
        hostId = UUID.randomUUID();
        long now = FBUtilities.timestampMicros();

        logger.warn("No host ID found, created {} (Note: This should happen exactly once per node).", hostId);

        cf = ColumnFamily.create(Table.SYSTEM_TABLE, LOCAL_CF);
        cf.addColumn(Column.create(ByteBuffer.wrap(UUIDGen.decompose(hostId)), now, "ring_id"));

        RowMutation rm = new RowMutation(Table.SYSTEM_TABLE, LOCAL_KEY);
        rm.add(cf);
        try
        {
            rm.apply();
        }
        catch (IOException e)
        {
            throw new RuntimeException(e);
        }

        return hostId;
    }

