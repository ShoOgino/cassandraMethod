    private MessageOutSizes calculateSerializedSizePre40(int version)
    {
        long size = 0;
        size += CompactEndpointSerializationHelper.instance.serializedSize(from, version);

        size += TypeSizes.sizeof(verb.getId());
        size += TypeSizes.sizeof(parameters.size() / PARAMETER_TUPLE_SIZE);
        for (int ii = 0; ii < parameters.size(); ii += PARAMETER_TUPLE_SIZE)
        {
            ParameterType type = (ParameterType)parameters.get(ii + PARAMETER_TUPLE_TYPE_OFFSET);
            size += TypeSizes.sizeof(type.key());
            size += 4;//length prefix
            IVersionedSerializer serializer = type.serializer;
            Object parameter = parameters.get(ii + PARAMETER_TUPLE_PARAMETER_OFFSET);
            size += serializer.serializedSize(parameter, version);
        }

        long payloadSize = payload == null ? 0 : serializer.serializedSize(payload, version);
        assert payloadSize <= Integer.MAX_VALUE; // larger values are supported in sstables but not messages
        size += TypeSizes.sizeof((int) payloadSize);
        size += payloadSize;
        return new MessageOutSizes(size, payloadSize);
    }

