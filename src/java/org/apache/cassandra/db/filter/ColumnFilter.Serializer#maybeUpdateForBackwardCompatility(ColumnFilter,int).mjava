        private static ColumnFilter maybeUpdateForBackwardCompatility(ColumnFilter selection, int version)
        {
            if (version > MessagingService.VERSION_30 || !selection.fetchAllRegulars || selection.queried == null)
                return selection;

            // The meaning of fetchAllRegulars changed (at least when queried != null) due to CASSANDRA-12768: in
            // pre-4.0 it means that *all* columns are fetched, not just the regular ones, and so 3.0/3.X nodes
            // would send us more than we'd like. So instead recreating a filter that correspond to what we
            // actually want (it's a tiny bit less efficient as we include all columns manually and will mark as
            // queried some columns that are actually only fetched, but it's fine during upgrade).
            // More concretely, we replace our filter by a non-fetch-all one that queries every columns that our
            // current filter fetches.
            Columns allRegulars = selection.metadata.partitionColumns().regulars;
            Set<ColumnDefinition> queriedStatic = new HashSet<>();
            Iterables.addAll(queriedStatic, Iterables.filter(selection.queried, ColumnDefinition::isStatic));
            return new ColumnFilter(false,
                                    null,
                                    new PartitionColumns(Columns.from(queriedStatic), allRegulars),
                                    selection.subSelections);
        }

