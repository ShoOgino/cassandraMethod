    @Test
    public void testFileCacheService() throws IOException, InterruptedException
    {
        //see https://issues.apache.org/jira/browse/CASSANDRA-7756

        final FileCacheService.CacheKey cacheKey = new FileCacheService.CacheKey();

        final int THREAD_COUNT = 40;
        ExecutorService executorService = Executors.newFixedThreadPool(THREAD_COUNT);

        SequentialWriter w1 = createTempFile("fscache1");
        SequentialWriter w2 = createTempFile("fscache2");

        w1.write(new byte[30]);
        w1.close();

        w2.write(new byte[30]);
        w2.close();

        for (int i = 0; i < 20; i++)
        {


            RandomAccessReader r1 = RandomAccessReader.open(w1);
            RandomAccessReader r2 = RandomAccessReader.open(w2);


            FileCacheService.instance.put(cacheKey, r1);
            FileCacheService.instance.put(cacheKey, r2);

            final CountDownLatch finished = new CountDownLatch(THREAD_COUNT);
            final AtomicBoolean hadError = new AtomicBoolean(false);

            for (int k = 0; k < THREAD_COUNT; k++)
            {
                executorService.execute( new Runnable()
                {
                    @Override
                    public void run()
                    {
                        try
                        {
                            long size = FileCacheService.instance.sizeInBytes();

                            while (size > 0)
                                size = FileCacheService.instance.sizeInBytes();
                        }
                        catch (Throwable t)
                        {
                            t.printStackTrace();
                            hadError.set(true);
                        }
                        finally
                        {
                            finished.countDown();
                        }
                    }
                });

            }

            finished.await();
            assert !hadError.get();
        }
    }

