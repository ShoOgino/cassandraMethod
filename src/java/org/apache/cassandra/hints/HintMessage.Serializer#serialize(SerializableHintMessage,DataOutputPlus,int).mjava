        public void serialize(SerializableHintMessage obj, DataOutputPlus out, int version) throws IOException
        {
            if (obj instanceof HintMessage)
            {
                HintMessage message = (HintMessage) obj;

                Objects.requireNonNull(message.hint); // we should never *send* a HintMessage with null hint

                UUIDSerializer.serializer.serialize(message.hostId, out, version);

                /*
                 * We are serializing the hint size so that the receiver of the message could gracefully handle
                 * deserialize failure when a table had been dropped, by simply skipping the unread bytes.
                 */
                out.writeUnsignedVInt(Hint.serializer.serializedSize(message.hint, version));

                Hint.serializer.serialize(message.hint, out, version);
            }
            else if (obj instanceof Encoded)
            {
                Encoded message = (Encoded) obj;

                if (version != message.version)
                    throw new IllegalArgumentException("serialize() called with non-matching version " + version);

                UUIDSerializer.serializer.serialize(message.hostId, out, version);
                out.writeUnsignedVInt(message.hint.remaining());
                out.write(message.hint);
            }
            else
            {
                throw new IllegalStateException("Unexpected type: " + obj);
            }
        }

