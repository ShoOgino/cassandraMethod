    @VisibleForTesting
    DecayingEstimatedHistogramReservoir(boolean considerZeroes, int bucketCount, Clock clock)
    {
        if (bucketCount == DEFAULT_BUCKET_COUNT)
        {
            if (considerZeroes == true)
            {
                bucketOffsets = DEFAULT_WITH_ZERO_BUCKET_OFFSETS;
            }
            else
            {
                bucketOffsets = DEFAULT_WITHOUT_ZERO_BUCKET_OFFSETS;
            }
        }
        else
        {
            bucketOffsets = EstimatedHistogram.newOffsets(bucketCount, considerZeroes);
        }
        decayingBuckets = new LongAdder[bucketOffsets.length + 1];
        buckets = new LongAdder[bucketOffsets.length + 1];

        for(int i = 0; i < buckets.length; i++) 
        {
            decayingBuckets[i] = new LongAdder();
            buckets[i] = new LongAdder();
        }

        this.clock = clock;
        decayLandmark = clock.getTime();
    }

