    public static synchronized StreamResultFuture initReceivingSide(UUID planId,
                                                                    String description,
                                                                    InetAddress from,
                                                                    Socket socket,
                                                                    boolean isForOutgoing,
                                                                    int version) throws IOException
    {
        StreamResultFuture future = StreamManager.instance.getReceivingStream(planId);
        if (future == null)
        {
            final StreamSession session = new StreamSession(from, socket.getInetAddress(), null);

            // The main reason we create a StreamResultFuture on the receiving side is for JMX exposure.
            future = new StreamResultFuture(planId, description, Collections.singleton(session));
            StreamManager.instance.registerReceiving(future);

            session.init(future);
            session.handler.initiateOnReceivingSide(socket, isForOutgoing, version);
        }
        else
        {
            future.attachSocket(from, socket, isForOutgoing, version);
            logger.info("[Stream #{}] Received streaming plan for {}", planId,  description);
        }
        return future;
    }

