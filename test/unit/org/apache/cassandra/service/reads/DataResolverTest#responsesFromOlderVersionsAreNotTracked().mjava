    @Test
    public void responsesFromOlderVersionsAreNotTracked()
    {
        // In a mixed version cluster, responses from a replicas running older versions won't include
        // tracking info, so the digest and pending session status are defaulted. To make sure these
        // default values don't result in false positives we make sure not to consider them when
        // processing in DataResolver
        EndpointsForRange replicas = makeReplicas(2);
        TestRepairedDataVerifier verifier = new TestRepairedDataVerifier();
        ByteBuffer digest1 = ByteBufferUtil.bytes("digest1");
        InetAddressAndPort peer1 = replicas.get(0).endpoint();
        InetAddressAndPort peer2 = replicas.get(1).endpoint();
        verifier.expectDigest(peer1, digest1, true);

        DataResolver resolver = resolverWithVerifier(command, plan(replicas, ConsistencyLevel.ALL), readRepair, System.nanoTime(),  verifier);

        resolver.preprocess(response(peer1, iter(PartitionUpdate.emptyUpdate(cfm,dk)), digest1, true, command));
        // peer2 is advertising an older version, so when we deserialize its response there are two things to note:
        // i) the actual serialized response cannot contain any tracking info so deserialization will use defaults of
        //    an empty digest and pending sessions = false
        // ii) under normal circumstances, this would cause a mismatch with peer1, but because of the older version,
        //     here it will not
        resolver.preprocess(response(command, peer2, iter(PartitionUpdate.emptyUpdate(cfm,dk)),
                                     false, MessagingService.VERSION_30,
                                     ByteBufferUtil.EMPTY_BYTE_BUFFER, false));

        resolveAndConsume(resolver);
        assertTrue(verifier.verified);
    }

