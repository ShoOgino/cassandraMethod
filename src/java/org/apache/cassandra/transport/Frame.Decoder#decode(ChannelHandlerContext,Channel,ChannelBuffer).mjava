        @Override
        protected Object decode(ChannelHandlerContext ctx, Channel channel, ChannelBuffer buffer)
        throws Exception
        {
            try
            {
                // We must at least validate that the frame version is something we support/know and it doesn't hurt to
                // check the opcode is not garbage. And we should do that indenpently of what is the the bytes corresponding
                // to the frame length are, i.e. we shouldn't wait for super.decode() to return non-null.
                if (buffer.readableBytes() == 0)
                    return null;

                int firstByte = buffer.getByte(0);
                Message.Direction direction = Message.Direction.extractFromVersion(firstByte);
                int version = firstByte & 0x7F;

                if (version > Header.CURRENT_VERSION)
                    throw new ProtocolException("Invalid or unsupported protocol version: " + version);

                // Validate the opcode
                if (buffer.readableBytes() >= 4)
                    Message.Type.fromOpcode(buffer.getByte(3), direction);

                ChannelBuffer frame = (ChannelBuffer) super.decode(ctx, channel, buffer);
                if (frame == null)
                {
                    return null;
                }

                Connection connection = (Connection)channel.getAttachment();
                if (connection == null)
                {
                    // First message seen on this channel, attach the connection object
                    connection = factory.newConnection(channel, version);
                    channel.setAttachment(connection);
                }
                else if (connection.getVersion() != version)
                {
                    throw new ProtocolException(String.format("Invalid message version. Got %d but previous messages on this connection had version %d", version, connection.getVersion()));
                }
                return Frame.create(frame);
            }
            catch (CorruptedFrameException e)
            {
                throw new ProtocolException(e.getMessage());
            }
            catch (TooLongFrameException e)
            {
                throw new ProtocolException(e.getMessage());
            }
        }

