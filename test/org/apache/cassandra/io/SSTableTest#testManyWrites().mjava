    // @Test
    public void testManyWrites() throws IOException {
        File f = File.createTempFile("sstable", "");
        SSTable ssTable;

        TreeMap<String, byte[]> map = new TreeMap<String,byte[]>();
        for ( int i = 100; i < 1000; ++i )
        {
            map.put(Integer.toString(i), ("Avinash Lakshman is a good man: " + i).getBytes());
        }

        // write
        ssTable = new SSTable(f.getParent(), f.getName());
        BloomFilter bf = new BloomFilter(1000, 8);
        for (String key: map.navigableKeySet())
        {
            ssTable.append(key, map.get(key));
        }
        ssTable.close(bf);

        // TODO append/next are not symmetrical ops anymore

        // verify
        List<String> keys = new ArrayList(map.keySet());
        Collections.shuffle(keys);
        ssTable = new SSTable(f.getPath() + "-Data.db");
        for (String key: keys)
        {
            DataInputBuffer bufIn = ssTable.next(key, "Test:C");
            byte[] bytes2 = new byte[map.get(key).length];
            bufIn.readFully(bytes2);
            assert Arrays.equals(bytes2, map.get(key));
        }
    }

