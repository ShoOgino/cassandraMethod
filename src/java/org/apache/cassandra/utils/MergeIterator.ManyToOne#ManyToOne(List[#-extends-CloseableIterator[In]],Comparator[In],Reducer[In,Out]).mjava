        public ManyToOne(List<? extends CloseableIterator<In>> iters, Comparator<In> comp, Reducer<In,Out> reducer)
        {
            super(iters, reducer);
            this.comp = comp;
            this.queue = new PriorityQueue<Candidate<In>>(Math.max(1, iters.size()));
            for (CloseableIterator<In> iter : iters)
            {
                Candidate<In> candidate = new Candidate<In>(iter, comp);
                if (!candidate.advance())
                    // was empty
                    continue;
                this.queue.add(candidate);
            }
            this.candidates = new ArrayDeque<Candidate<In>>(queue.size());
        }

