        public PartitionUpdate build()
        {
            // Collect all updated columns
            RegularAndStaticColumns.Builder columns = RegularAndStaticColumns.builder();
            for (RowBuilder builder : rowBuilders.values())
                columns.addAll(builder.columns());

            // Note that rowBuilders.size() could include the static column so could be 1 off the really need capacity
            // of the final PartitionUpdate, but as that's just a sizing hint, we'll live.
            PartitionUpdate.Builder update = new PartitionUpdate.Builder(metadata, key, columns.build(), rowBuilders.size());

            update.addPartitionDeletion(partitionDeletion);
            if (rangeBuilders != null)
            {
                for (RTBuilder builder : rangeBuilders)
                    update.add(builder.build());
            }

            if (rangeTombstones != null)
            {
                for (RangeTombstone rt : rangeTombstones)
                    update.add(rt);
            }

            for (RowBuilder builder : rowBuilders.values())
                update.add(builder.build());

            return update.build();
        }

