    /**
     * Differs from the above because it can work on any file instead of just existing
     * commit log segments managed by this allocator.
     *
     * @param file segment file that is no longer in use.
     */
    public void recycleSegment(final File file)
    {
        // check against SEGMENT_SIZE avoids recycling odd-sized or empty segments from old C* versions and unit tests
        if (isCapExceeded() || file.length() != DatabaseDescriptor.getCommitLogSegmentSize())
        {
            // (don't decrease managed size, since this was never a "live" segment)
            try
            {
                logger.debug("(Unopened) segment {} is no longer needed and will be deleted now", file);
                FileUtils.deleteWithConfirm(file);
            }
            catch (IOException e)
            {
                throw new IOError(e);
            }
            return;
        }

        logger.debug("Recycling {}", file);
        // this wasn't previously a live segment, so add it to the managed size when we make it live
        size.addAndGet(DatabaseDescriptor.getCommitLogSegmentSize());
        queue.add(new Runnable()
        {
            public void run()
            {
                CommitLogSegment segment = new CommitLogSegment(file.getPath());
                internalAddReadySegment(segment);
            }
        });
    }

