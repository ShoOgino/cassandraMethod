        public WeighableMarshallableBatch(String batchType, List<String> queries, List<List<ByteBuffer>> values, QueryOptions queryOptions, long batchTimeMillis)
        {
           super(queryOptions, batchTimeMillis);
           this.queries = queries;
           this.values = values;
           this.batchType = batchType;
           boolean success = false;
           try
           {
               //weight, batch type, queries, values
               int weightTemp = 8 + EMPTY_LIST_SIZE + EMPTY_LIST_SIZE;
               for (int ii = 0; ii < queries.size(); ii++)
               {
                   weightTemp += ObjectSizes.sizeOf(queries.get(ii));
               }

               weightTemp += EMPTY_LIST_SIZE * values.size();
               for (int ii = 0; ii < values.size(); ii++)
               {
                   List<ByteBuffer> sublist = values.get(ii);
                   weightTemp += EMPTY_BYTEBUFFER_SIZE * sublist.size();
                   for (int zz = 0; zz < sublist.size(); zz++)
                   {
                       weightTemp += sublist.get(zz).capacity();
                   }
               }
               weightTemp += super.weight();
               weightTemp += ObjectSizes.sizeOf(batchType);
               weight = weightTemp;
               success = true;
           }
           finally
           {
               if (!success)
               {
                   release();
               }
           }
        }

