    /**
     * Replaces old SSTables with new by creating new immutable tracker.
     *
     * @param oldSSTables A set of SSTables to remove.
     * @param newSSTables A set of SSTables to add to tracker.
     *
     * @return A collection of SSTables which don't have component attached for current index.
     */
    public Iterable<SSTableReader> update(Collection<SSTableReader> oldSSTables, Collection<SSTableReader> newSSTables)
    {
        final Set<SSTableIndex> newIndexes = getIndexes(newSSTables);
        final Set<SSTableReader> indexedSSTables = getSSTables(newIndexes);

        View currentView, newView;
        do
        {
            currentView = view.get();
            newView = new View(columnIndex, currentView.getIndexes(), oldSSTables, newIndexes);
        }
        while (!view.compareAndSet(currentView, newView));

        return newSSTables.stream().filter(sstable -> !indexedSSTables.contains(sstable)).collect(Collectors.toList());
    }

