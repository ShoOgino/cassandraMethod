    /**
     * This function finds the most suitable endpoint given a key.
     * It checks for locality and alive test.
     */
	public InetAddress findSuitableEndPoint(String key) throws IOException, UnavailableException
	{
		InetAddress[] endpoints = getReadStorageEndPoints(key);
		for(InetAddress endPoint: endpoints)
		{
            if(endPoint.equals(FBUtilities.getLocalAddress()))
			{
				return endPoint;
			}
		}
		int j = 0;
		for ( ; j < endpoints.length; ++j )
		{
			if ( StorageService.instance().isInSameDataCenter(endpoints[j]) && FailureDetector.instance().isAlive(endpoints[j]))
			{
				return endpoints[j];
			}
		}
		// We have tried to be really nice but looks like there are no servers 
		// in the local data center that are alive and can service this request so 
		// just send it to the first alive guy and see if we get anything.
		j = 0;
		for ( ; j < endpoints.length; ++j )
		{
			if ( FailureDetector.instance().isAlive(endpoints[j]))
			{
				if (logger_.isDebugEnabled())
				  logger_.debug("InetAddress " + endpoints[j] + " is alive so get data from it.");
				return endpoints[j];
			}
		}

        throw new UnavailableException(); // no nodes that could contain key are alive
	}

