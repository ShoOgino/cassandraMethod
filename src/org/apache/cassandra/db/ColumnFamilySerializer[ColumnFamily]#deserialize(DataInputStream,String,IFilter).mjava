    /*
     * Deserialize a particular column or super column or the entire columnfamily given a : seprated name
     * name could be of the form cf:superColumn:column  or cf:column or cf
     */
    public ColumnFamily deserialize(DataInputStream dis, String name, IFilter filter) throws IOException
    {        
        String[] names = RowMutation.getColumnAndColumnFamily(name);
        String columnName = "";
        if ( names.length == 1 )
            return deserialize(dis, filter);
        if( names.length == 2 )
            columnName = names[1];
        if( names.length == 3 )
            columnName = names[1]+ ":" + names[2];

        ColumnFamily cf = defreezeColumnFamily(dis);
        if ( !cf.isMarkedForDelete() )
        {
            /* read the number of columns */
            int size = dis.readInt();            
            for ( int i = 0; i < size; ++i )
            {
	            IColumn column = cf.getColumnSerializer().deserialize(dis, columnName, filter);
	            if ( column != null )
	            {
	                cf.addColumn(column.name(), column);
	                break;
	            }
            }
        }
        return cf;
    }

