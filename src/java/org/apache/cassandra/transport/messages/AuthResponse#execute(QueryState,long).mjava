    @Override
    public Response execute(QueryState queryState, long queryStartNanoTime)
    {
        try
        {
            IAuthenticator.SaslNegotiator negotiator = ((ServerConnection) connection).getSaslNegotiator(queryState);
            byte[] challenge = negotiator.evaluateResponse(token);
            if (negotiator.isComplete())
            {
                AuthenticatedUser user = negotiator.getAuthenticatedUser();
                queryState.getClientState().login(user);
                ClientMetrics.instance.markAuthSuccess();
                if (auditLogEnabled)
                {
                    AuditLogEntry auditEntry = new AuditLogEntry.Builder(queryState.getClientState())
                                               .setOperation("LOGIN SUCCESSFUL")
                                               .setType(AuditLogEntryType.LOGIN_SUCCESS)
                                               .build();
                    auditLogManager.log(auditEntry);
                }
                // authentication is complete, send a ready message to the client
                return new AuthSuccess(challenge);
            }
            else
            {
                return new AuthChallenge(challenge);
            }
        }
        catch (AuthenticationException e)
        {
            ClientMetrics.instance.markAuthFailure();
            if (auditLogEnabled)
            {
                AuditLogEntry auditEntry = new AuditLogEntry.Builder(queryState.getClientState())
                                           .setOperation("LOGIN FAILURE")
                                           .setType(AuditLogEntryType.LOGIN_ERROR)
                                           .build();
                auditLogManager.log(auditEntry, e);
            }
            return ErrorMessage.fromException(e);
        }
    }

