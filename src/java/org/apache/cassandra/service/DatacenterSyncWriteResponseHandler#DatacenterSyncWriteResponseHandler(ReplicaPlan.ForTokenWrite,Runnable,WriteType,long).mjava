    public DatacenterSyncWriteResponseHandler(ReplicaPlan.ForTokenWrite replicaPlan,
                                              Runnable callback,
                                              WriteType writeType,
                                              long queryStartNanoTime)
    {
        // Response is been managed by the map so make it 1 for the superclass.
        super(replicaPlan, callback, writeType, queryStartNanoTime);
        assert replicaPlan.consistencyLevel() == ConsistencyLevel.EACH_QUORUM;

        if (replicaPlan.keyspace().getReplicationStrategy() instanceof NetworkTopologyStrategy)
        {
            NetworkTopologyStrategy strategy = (NetworkTopologyStrategy) replicaPlan.keyspace().getReplicationStrategy();
            for (String dc : strategy.getDatacenters())
            {
                int rf = strategy.getReplicationFactor(dc).allReplicas;
                responses.put(dc, new AtomicInteger((rf / 2) + 1));
            }
        }
        else
        {
            responses.put(DatabaseDescriptor.getLocalDataCenter(), new AtomicInteger(ConsistencyLevel.quorumFor(replicaPlan.keyspace())));
        }

        // During bootstrap, we have to include the pending endpoints or we may fail the consistency level
        // guarantees (see #833)
        for (Replica pending : replicaPlan.pending())
        {
            responses.get(snitch.getDatacenter(pending)).incrementAndGet();
        }
    }

