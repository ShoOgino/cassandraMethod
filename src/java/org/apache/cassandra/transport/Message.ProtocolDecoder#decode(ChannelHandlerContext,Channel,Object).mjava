        public Object decode(ChannelHandlerContext ctx, Channel channel, Object msg)
        {
            assert msg instanceof Frame : "Expecting frame, got " + msg;

            Frame frame = (Frame)msg;
            boolean isRequest = frame.header.type.direction == Direction.REQUEST;
            boolean isTracing = frame.header.flags.contains(Frame.Header.Flag.TRACING);

            UUID tracingId = isRequest || !isTracing ? null : CBUtil.readUuid(frame.body);

            try
            {
                Message message = frame.header.type.codec.decode(frame.body);
                message.setStreamId(frame.header.streamId);

                if (isRequest)
                {
                    assert message instanceof Request;
                    Request req = (Request)message;
                    req.attach(frame.connection);
                    if (isTracing)
                        req.setTracingRequested();
                }
                else
                {
                    assert message instanceof Response;
                    if (isTracing)
                        ((Response)message).setTracingId(tracingId);
                }

                return message;
            }
            catch (Exception ex)
            {
                // Remember the streamId
                throw ErrorMessage.wrap(ex, frame.header.streamId);
            }
        }

