    public static Future rename(final KSMetaData oldKsm, final String newName)
    {
        return executor.submit(new WrappedRunnable()
        {
            protected void runMayThrow() throws Exception
            {
                if (oldKsm == null || DatabaseDescriptor.getTableDefinition(oldKsm.name) != oldKsm)
                    throw new ConfigurationException("Keyspace either does not exist or does not match the one currently defined.");
                if (DatabaseDescriptor.getTableDefinition(newName) != null)
                    throw new ConfigurationException("Keyspace already exists.");
                
                // clone the ksm, replacing thename.
                KSMetaData newKsm = KSMetaData.rename(oldKsm, newName);
                // at this point, the static methods in CFMetaData will start returning references to the new table, so
                // it helps if the node is reasonably quiescent with respect to this ks. 
                UUID newVersion = saveKeyspaceDefs(newKsm, oldKsm);
                try
                {
                    renameKsStorageFiles(oldKsm.name, newName);
                }
                catch (IOException e)
                {
                    ConfigurationException cex = new ConfigurationException("Critical: encountered IOException while attempting to rename KS storage files from " + oldKsm.name + " to " + newName);
                    throw cex;
                }
                
                DatabaseDescriptor.clearTableDefinition(oldKsm, newVersion);
                DatabaseDescriptor.setTableDefinition(newKsm, newVersion);
                Table.clear(oldKsm.name);
                Table.open(newName);
                // this isn't strictly necessary since the set of all cfs was not modified.
                CommitLog.instance().forceNewSegment(); 
            }
        });
    }

