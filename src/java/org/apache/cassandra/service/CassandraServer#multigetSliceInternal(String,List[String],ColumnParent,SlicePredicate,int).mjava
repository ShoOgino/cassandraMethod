    private Map<String, List<ColumnOrSuperColumn>> multigetSliceInternal(String keyspace, List<String> keys, ColumnParent column_parent, SlicePredicate predicate, int consistency_level)
    throws InvalidRequestException, UnavailableException, TimedOutException
    {
        ThriftValidation.validateColumnParent(keyspace, column_parent);
        List<ReadCommand> commands = new ArrayList<ReadCommand>();
        SliceRange range = predicate.slice_range;

        if (predicate.column_names != null)
        {
            for (String key: keys)
            {
                ThriftValidation.validateKey(key);
                commands.add(new SliceByNamesReadCommand(keyspace, key, column_parent, predicate.column_names));
            }
            ThriftValidation.validateColumns(keyspace, column_parent, predicate.column_names);
        }
        else
        {
            for (String key: keys)
            {
                ThriftValidation.validateKey(key);
                commands.add(new SliceFromReadCommand(keyspace, key, column_parent, range.start, range.finish, range.reversed, range.count));
            }
            ThriftValidation.validateRange(keyspace, column_parent, range);
        }

        return getSlice(commands, consistency_level);
    }

