    @Test
    public void testWithNoSourceWithLocal() throws Exception
    {
        Multimap<Range<Token>, InetAddress> rangesWithSources = HashMultimap.create();
        addRangeAndSources(rangesWithSources, 1, 10, "127.0.0.1", "127.0.0.5");
        addRangeAndSources(rangesWithSources, 11, 20, "127.0.0.2");
        addRangeAndSources(rangesWithSources, 21, 30, "127.0.0.3");

        //Return false for all except 127.0.0.5
        final RangeStreamer.ISourceFilter filter = new RangeStreamer.ISourceFilter()
        {
            public boolean shouldInclude(InetAddress endpoint)
            {
                try
                {
                    if (endpoint.equals(InetAddress.getByName("127.0.0.5")))
                        return false;
                    else
                        return true;
                }
                catch (UnknownHostException e)
                {
                    return true;
                }
            }
        };

        RangeFetchMapCalculator calculator = new RangeFetchMapCalculator(rangesWithSources, Arrays.asList(filter), "Test");
        Multimap<InetAddress, Range<Token>> map = calculator.getRangeFetchMap();

        validateRange(rangesWithSources, map);

        //We should validate that it streamed from only non local host and only one range
        Assert.assertEquals(2, map.asMap().keySet().size());

        assertArrays(Arrays.asList(generateRange(11, 20)), map.asMap().get(InetAddress.getByName("127.0.0.2")));
        assertArrays(Arrays.asList(generateRange(21, 30)), map.asMap().get(InetAddress.getByName("127.0.0.3")));
    }

