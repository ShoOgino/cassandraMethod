    @Test
    public void testCloseInboundConnections() throws UnknownHostException, InterruptedException
    {
        try
        {
            messagingService.listen();
            Assert.assertTrue(messagingService.isListening());
            Assert.assertTrue(messagingService.serverChannels.size() > 0);
            for (ServerChannel serverChannel : messagingService.serverChannels)
                Assert.assertEquals(0, serverChannel.size());

            // now, create a connection and make sure it's in a channel group
            InetAddressAndPort server = FBUtilities.getBroadcastAddressAndPort();
            OutboundConnectionIdentifier id = OutboundConnectionIdentifier.small(InetAddressAndPort.getByNameOverrideDefaults("127.0.0.2", 0), server);

            CountDownLatch latch = new CountDownLatch(1);
            OutboundConnectionParams params = OutboundConnectionParams.builder()
                                                                      .mode(NettyFactory.Mode.MESSAGING)
                                                                      .sendBufferSize(1 << 10)
                                                                      .connectionId(id)
                                                                      .callback(handshakeResult -> latch.countDown())
                                                                      .protocolVersion(MessagingService.current_version)
                                                                      .build();
            Bootstrap bootstrap = NettyFactory.instance.createOutboundBootstrap(params);
            Channel channel = bootstrap.connect().awaitUninterruptibly().channel();
            Assert.assertNotNull(channel);
            latch.await(1, TimeUnit.SECONDS); // allow the netty pipeline/c* handshake to get set up

            int connectCount = 0;
            for (ServerChannel serverChannel : messagingService.serverChannels)
                connectCount += serverChannel.size();
            Assert.assertTrue(connectCount > 0);
        }
        finally
        {
            // last, shutdown the MS and make sure connections are removed
            messagingService.shutdown(true);
            for (ServerChannel serverChannel : messagingService.serverChannels)
                Assert.assertEquals(0, serverChannel.size());
            messagingService.clearServerChannels();
        }
    }

