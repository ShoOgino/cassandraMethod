    private Message receiveMessage(DataInputStream input, int version) throws IOException
    {
        int size = input.readInt();
        byte[] contentBytes = new byte[size];
        // readFully allocates a direct buffer the size of the chunk it is asked to read,
        // so we cap that at CHUNK_SIZE. See https://issues.apache.org/jira/browse/CASSANDRA-2654
        int remainder = size % CHUNK_SIZE;
        for (int offset = 0; offset < size - remainder; offset += CHUNK_SIZE)
            input.readFully(contentBytes, offset, CHUNK_SIZE);
        input.readFully(contentBytes, size - remainder, remainder);

        // for non-streaming connections, continue to read the messages (and ignore them) until sender
        // starts sending correct-version messages (which it can do without reconnecting -- version is per-Message)
        if (version <= MessagingService.version_)
        {
            DataInputStream dis = new DataInputStream(new ByteArrayInputStream(contentBytes));
            String id = dis.readUTF();
            Message message = Message.serializer().deserialize(dis, version);
            MessagingService.instance().receive(message, id);
            return message;
        }
        logger.info("Received connection from newer protocol version. Ignorning message.");
        return null;
    }

