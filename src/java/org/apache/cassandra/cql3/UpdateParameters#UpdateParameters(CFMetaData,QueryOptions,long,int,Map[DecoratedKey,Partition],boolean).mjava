    public UpdateParameters(CFMetaData metadata, QueryOptions options, long timestamp, int ttl, Map<DecoratedKey, Partition> prefetchedRows, boolean validateIndexedColumns)
    throws InvalidRequestException
    {
        this.metadata = metadata;
        this.options = options;

        int nowInSec = FBUtilities.nowInSeconds();
        this.defaultLiveness = SimpleLivenessInfo.forUpdate(timestamp, ttl, nowInSec, metadata);
        this.deletionLiveness = SimpleLivenessInfo.forDeletion(timestamp, nowInSec);
        this.deletionTime = new SimpleDeletionTime(timestamp, nowInSec);

        this.prefetchedRows = prefetchedRows;

        // Index column validation triggers a call to Keyspace.open() which we want to be able to avoid in some case (e.g. when using CQLSSTableWriter)
        if (validateIndexedColumns)
        {
            SecondaryIndexManager manager = Keyspace.openAndGetStore(metadata).indexManager;
            indexManager = manager.hasIndexes() ? manager : null;
        }
        else
        {
            indexManager = null;
        }

        // We use MIN_VALUE internally to mean the absence of of timestamp (in Selection, in sstable stats, ...), so exclude
        // it to avoid potential confusion.
        if (timestamp == Long.MIN_VALUE)
            throw new InvalidRequestException(String.format("Out of bound timestamp, must be in [%d, %d]", Long.MIN_VALUE + 1, Long.MAX_VALUE));
    }

