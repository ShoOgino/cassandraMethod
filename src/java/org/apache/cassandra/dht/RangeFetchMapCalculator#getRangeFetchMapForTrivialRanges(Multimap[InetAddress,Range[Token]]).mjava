    @VisibleForTesting
    Multimap<InetAddress, Range<Token>> getRangeFetchMapForTrivialRanges(Multimap<InetAddress, Range<Token>> optimisedMap)
    {
        Multimap<InetAddress, Range<Token>> fetchMap = HashMultimap.create();
        for (Range<Token> trivialRange : trivialRanges)
        {
            boolean added = false;
            boolean localDCCheck = true;
            while (!added)
            {
                List<InetAddress> srcs = new ArrayList<>(rangesWithSources.get(trivialRange));
                // sort with the endpoint having the least number of streams first:
                srcs.sort(Comparator.comparingInt(o -> optimisedMap.get(o).size()));
                for (InetAddress src : srcs)
                {
                    if (passFilters(src, localDCCheck))
                    {
                        fetchMap.put(src, trivialRange);
                        added = true;
                        break;
                    }
                }
                if (!added && !localDCCheck)
                    throw new IllegalStateException("Unable to find sufficient sources for streaming range " + trivialRange + " in keyspace " + keyspace);
                if (!added)
                    logger.info("Using other DC endpoints for streaming for range: {} and keyspace {}", trivialRange, keyspace);
                localDCCheck = false;
            }
        }
        return fetchMap;
    }

