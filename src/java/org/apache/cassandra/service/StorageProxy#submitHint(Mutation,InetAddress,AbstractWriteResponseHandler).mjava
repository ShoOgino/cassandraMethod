    public static Future<Void> submitHint(final Mutation mutation,
                                          final InetAddress target,
                                          final AbstractWriteResponseHandler responseHandler)
    {
        // local write that time out should be handled by LocalMutationRunnable
        assert !target.equals(FBUtilities.getBroadcastAddress()) : target;
        mutation.retain();

        HintRunnable runnable = new HintRunnable(target)
        {
            public void runMayThrow()
            {
                try
                {
                    int ttl = HintedHandOffManager.calculateHintTTL(mutation);
                    if (ttl > 0)
                    {
                        logger.debug("Adding hint for {}", target);
                        writeHintForMutation(mutation, System.currentTimeMillis(), ttl, target);
                        // Notify the handler only for CL == ANY
                        if (responseHandler != null && responseHandler.consistencyLevel == ConsistencyLevel.ANY)
                            responseHandler.response(null);
                    } else
                    {
                        logger.debug("Skipped writing hint for {} (ttl {})", target, ttl);
                    }
                }
                finally
                {
                    mutation.release();
                }
            }
        };

        return submitHint(runnable);
    }

