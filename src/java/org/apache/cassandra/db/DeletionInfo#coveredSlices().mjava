    /**
     * Return the slice range covered by this deletion info or null is nothing is deleted.
     */
    public ColumnSlice[] coveredSlices()
    {
        if (isLive())
            return null;

        if (!topLevel.equals(DeletionTime.LIVE))
            return ColumnSlice.ALL_COLUMNS_ARRAY;

        List<ColumnSlice> slices = new ArrayList<ColumnSlice>();
        ColumnSlice current = null;
        for (RangeTombstone tombstone : ranges)
        {
            if (current == null)
            {
                current = new ColumnSlice(tombstone.min, tombstone.max);
            }
            else if (ranges.comparator().compare(current.finish, tombstone.min) < 0)
            {
                // If next if strictly after current, we've finish current slice
                slices.add(current);
                current = new ColumnSlice(tombstone.min, tombstone.max);
            }
            else if (ranges.comparator().compare(current.finish, tombstone.max) < 0)
            {
                // if tombstone end if after current end, extend current
                current = new ColumnSlice(current.start, tombstone.max);
            }
            // otherwise, tombstone is fully included in current already, skip it
        }
        if (current != null)
            slices.add(current);
        return slices.isEmpty() ? null : slices.toArray(new ColumnSlice[slices.size()]);
    }

