    @Test
    public void testGetIndexedDecoratedKeysFor() throws IOException {
        final String ssname = "indexedkeys";

        int numkeys = 1000;
        TreeMap<String, byte[]> map = new TreeMap<String,byte[]>();
        for ( int i = 0; i < numkeys; i++ )
        {
            map.put(Integer.toString(i), "blah".getBytes());
        }

        // write
        SSTableReader ssTable = SSTableUtils.writeSSTable(ssname, map, 1000,
                                                          new OrderPreservingPartitioner(), 0.01);


        // verify
        Predicate<SSTable> cfpred;
        Predicate<DecoratedKey> dkpred;

        cfpred = new Predicate<SSTable>() {
            public boolean apply(SSTable ss)
            {
                return ss.getColumnFamilyName().equals(ssname);
            }
            };
        dkpred = Predicates.alwaysTrue();
        int actual = SSTableReader.getIndexedDecoratedKeysFor(cfpred, dkpred).size();
        assert 0 < actual;
        assert actual <= Math.ceil((double)numkeys/SSTableReader.indexInterval());
    }

