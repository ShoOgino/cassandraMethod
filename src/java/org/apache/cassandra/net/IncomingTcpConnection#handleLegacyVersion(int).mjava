    private void handleLegacyVersion(int version) throws IOException
    {
        DataInputStream in = new DataInputStream(new BufferedInputStream(socket.getInputStream(), 4096));

        from = receiveMessage(in, version); // why? see => CASSANDRA-4099
        logger.debug("Version for {} is {}", from, version);
        if (version > MessagingService.current_version)
        {
            // save the endpoint so gossip will reconnect to it
            Gossiper.instance.addSavedEndpoint(from);
            logger.info("Received messages from newer protocol version. Ignoring");
            return;
        }
        int lastVersion = MessagingService.instance().setVersion(from, version);
        logger.debug("set version for {} to {}", from, version);
        if (lastVersion < version)
        {
            logger.debug("breaking outbound connections to force version upgrade");
            MessagingService.instance().getConnectionPool(from).resetToNewerVersion(version);
        }

        while (true)
        {
            MessagingService.validateMagic(in.readInt());
            int header = in.readInt(); // legacy protocol re-sends header for each message
            assert !(MessagingService.getBits(header, 3, 1) == 1) : "Non-stream connection cannot change to stream";
            version = MessagingService.getBits(header, 15, 8);
            logger.trace("Version is now {}", version);
            receiveMessage(in, version);
        }
    }

