    @Test // see CASSANDRA-13691
    public void testCounterUpdate()
    {
        /*
         * a context with just one 'update' shard - a local shard with a hardcoded value of CounterContext.UPDATE_CLOCK_ID
         */

        ByteBuffer updateContext = CounterContext.instance().createUpdate(10L);

        assertEquals(ClockAndCount.create(1L, 10L), cc.getClockAndCountOf(updateContext, CounterContext.UPDATE_CLOCK_ID));
        assertTrue(cc.isUpdate(updateContext));


        /*
         * a context with a regular local shard sorting first and a couple others in it - should *not* be identified as an update
         */

        ContextState notUpdateContextState = ContextState.allocate(1, 1, 1);
        notUpdateContextState.writeLocal( CounterId.fromInt(1), 1L, 10L);
        notUpdateContextState.writeRemote(CounterId.fromInt(2), 1L, 10L);
        notUpdateContextState.writeGlobal(CounterId.fromInt(3), 1L, 10L);
        ByteBuffer notUpdateContext = notUpdateContextState.context;

        assertFalse(cc.isUpdate(notUpdateContext));
    }

