    public void read(org.apache.thrift.protocol.TProtocol iprot, Mutation struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COLUMN_OR_SUPERCOLUMN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.column_or_supercolumn = new ColumnOrSuperColumn();
              struct.column_or_supercolumn.read(iprot);
              struct.setColumn_or_supercolumnIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DELETION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.deletion = new Deletion();
              struct.deletion.read(iprot);
              struct.setDeletionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

