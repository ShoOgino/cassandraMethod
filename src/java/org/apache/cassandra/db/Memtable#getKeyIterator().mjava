    public Iterator<DecoratedKey> getKeyIterator()
    {
        // even though we are using NBHM, it is okay to use size() twice here, since size() will never decrease
        // w/in a single memtable's lifetime
        if (columnFamilies.size() == 0)
        {
            // cannot create a PQ of size zero (wtf?)
            return Arrays.asList(new DecoratedKey[0]).iterator();
        }
        PriorityQueue<DecoratedKey> pq = new PriorityQueue<DecoratedKey>(columnFamilies.size());
        pq.addAll(columnFamilies.keySet());
        return new DestructivePQIterator<DecoratedKey>(pq);
    }

