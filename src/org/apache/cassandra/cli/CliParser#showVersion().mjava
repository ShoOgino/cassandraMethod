    // $ANTLR start showVersion
    // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cli/Cli.g:123:1: showVersion : K_SHOW K_VERSION -> ^( NODE_SHOW_VERSION ) ;
    public final showVersion_return showVersion() throws RecognitionException {
        showVersion_return retval = new showVersion_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token K_SHOW37=null;
        Token K_VERSION38=null;

        CommonTree K_SHOW37_tree=null;
        CommonTree K_VERSION38_tree=null;
        RewriteRuleTokenStream stream_K_SHOW=new RewriteRuleTokenStream(adaptor,"token K_SHOW");
        RewriteRuleTokenStream stream_K_VERSION=new RewriteRuleTokenStream(adaptor,"token K_VERSION");

        try {
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cli/Cli.g:124:5: ( K_SHOW K_VERSION -> ^( NODE_SHOW_VERSION ) )
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cli/Cli.g:124:7: K_SHOW K_VERSION
            {
            K_SHOW37=(Token)input.LT(1);
            match(input,K_SHOW,FOLLOW_K_SHOW_in_showVersion567); if (failed) return retval;
            if ( backtracking==0 ) stream_K_SHOW.add(K_SHOW37);

            K_VERSION38=(Token)input.LT(1);
            match(input,K_VERSION,FOLLOW_K_VERSION_in_showVersion569); if (failed) return retval;
            if ( backtracking==0 ) stream_K_VERSION.add(K_VERSION38);


            // AST REWRITE
            // elements: 
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            if ( backtracking==0 ) {
            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval!=null?retval.tree:null);

            root_0 = (CommonTree)adaptor.nil();
            // 124:24: -> ^( NODE_SHOW_VERSION )
            {
                // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cli/Cli.g:124:27: ^( NODE_SHOW_VERSION )
                {
                CommonTree root_1 = (CommonTree)adaptor.nil();
                root_1 = (CommonTree)adaptor.becomeRoot(adaptor.create(NODE_SHOW_VERSION, "NODE_SHOW_VERSION"), root_1);

                adaptor.addChild(root_0, root_1);
                }

            }

            }

            }

            retval.stop = input.LT(-1);

            if ( backtracking==0 ) {
                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return retval;
    }
    // $ANTLR end showVersion

