    @Test
    public void testValidatorDigest()
    {
        Digest[] digests = new Digest[]
                           {
                           Digest.forValidator(),
                           new Digest(Hashing.murmur3_128(1000).newHasher()),
                           new Digest(Hashing.murmur3_128(2000).newHasher())
                           };
        byte [] random = UUIDGen.getTimeUUIDBytes();

        for (Digest digest : digests)
        {
            digest.updateWithByte((byte) 33)
                  .update(random, 0, random.length)
                  .update(ByteBuffer.wrap(random))
                  .update(random, 0, 3)
                  .updateWithBoolean(false)
                  .updateWithInt(77)
                  .updateWithLong(101);
        }

        long len = Byte.BYTES
                   + random.length * 2 // both the byte[] and the ByteBuffer
                   + 3 // 3 bytes from the random byte[]
                   + Byte.BYTES
                   + Integer.BYTES
                   + Long.BYTES;

        assertEquals(len, digests[0].inputBytes());
        byte[] h = digests[0].digest();
        assertArrayEquals(digests[1].digest(), Arrays.copyOfRange(h, 0, 16));
        assertArrayEquals(digests[2].digest(), Arrays.copyOfRange(h, 16, 32));
    }

