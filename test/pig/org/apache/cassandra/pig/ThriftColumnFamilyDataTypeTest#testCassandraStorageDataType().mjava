    @Test
    public void testCassandraStorageDataType() throws IOException
    {
        pig.registerQuery("rows = LOAD 'cql://thrift_ks/some_app?" + defaultParameters + "' USING CqlNativeStorage();");
        Tuple t = pig.openIterator("rows").next();

        // key
        assertEquals("foo", t.get(0));

        // col_ascii
        Object column = t.get(1);
        assertEquals("ascii", column);

        // col_bigint
        column = t.get(2);
        assertEquals(12345678L, column);

        // col_blob
        column = t.get(3);
        assertEquals(new DataByteArray(Hex.hexToBytes("DEADBEEF")), column);

        // col_boolean
        column = t.get(4);
        assertEquals(false, column);

        // col_decimal
        column = t.get(5);
        assertEquals("23.345", column);

        // col_double
        column = t.get(6);
        assertEquals(2.7182818284590451d, column);

        // col_float
        column = t.get(7);
        assertEquals(23.45f, column);

        // col_inet
        column = t.get(8);
        assertEquals("127.0.0.1", column);

        // col_int
        column = t.get(9);
        assertEquals(23, column);

        // col_text
        column = t.get(10);
        assertEquals("hello", column);

        // col_timestamp
        column = t.get(11);
        assertEquals(1296705900000L, column);

        // col_timeuuid
        column = t.get(12);
        assertEquals(new DataByteArray((TimeUUIDType.instance.fromString("e23f450f-53a6-11e2-7f7f-7f7f7f7f7f7f").array())), column);

        // col_uuid
        column = t.get(13);
        assertEquals(new DataByteArray((UUIDType.instance.fromString("550e8400-e29b-41d4-a716-446655440000").array())), column);

        // col_varint
        column = t.get(14);
        assertEquals(12345, column);

        pig.registerQuery("cc_rows = LOAD 'cql://thrift_ks/cc?" + defaultParameters + "' USING CqlNativeStorage();");
        t = pig.openIterator("cc_rows").next();

        assertEquals("chuck", t.get(0));

        assertEquals("kick", t.get(1));
        assertEquals(3L, t.get(2));
    }

