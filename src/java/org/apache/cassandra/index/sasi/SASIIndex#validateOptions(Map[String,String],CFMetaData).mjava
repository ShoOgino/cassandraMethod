    public static Map<String, String> validateOptions(Map<String, String> options, CFMetaData cfm)
    {
        String targetColumn = options.get("target");
        if (targetColumn == null)
            throw new ConfigurationException("unknown target column");

        Pair<ColumnDefinition, IndexTarget.Type> target = TargetParser.parse(cfm, targetColumn);
        if (target == null)
            throw new ConfigurationException("failed to retrieve target column for: " + targetColumn);

        IndexMode.validateAnalyzer(options);

        IndexMode mode = IndexMode.getMode(target.left, options);
        if (mode.mode == Mode.SPARSE)
        {
            if (mode.isLiteral)
                throw new ConfigurationException("SPARSE mode is only supported on non-literal columns.");

            if (mode.isAnalyzed)
                throw new ConfigurationException("SPARSE mode doesn't support analyzers.");
        }

        ColumnFamilyStore store = Schema.instance.getColumnFamilyStoreIncludingIndexes(Pair.create(cfm.ksName, cfm.cfName));
        if (store != null && store.indexManager.listIndexes()
                                               .stream()
                                               .filter((index) -> index.dependsOn(target.left)
                                                               && index.getClass().isAssignableFrom(SASIIndex.class))
                                               .findFirst().isPresent())
            throw new ConfigurationException("Index on '" + targetColumn + "' already exists, SASI doesn't support multiple indexes per column.");

        return Collections.emptyMap();
    }

