    // $ANTLR start getStmt
    // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:124:1: getStmt : K_GET columnSpec -> ^( A_GET columnSpec ) ;
    public final getStmt_return getStmt() throws RecognitionException {
        getStmt_return retval = new getStmt_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token K_GET13=null;
        columnSpec_return columnSpec14 = null;


        CommonTree K_GET13_tree=null;
        RewriteRuleTokenStream stream_K_GET=new RewriteRuleTokenStream(adaptor,"token K_GET");
        RewriteRuleSubtreeStream stream_columnSpec=new RewriteRuleSubtreeStream(adaptor,"rule columnSpec");
        try {
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:125:5: ( K_GET columnSpec -> ^( A_GET columnSpec ) )
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:125:7: K_GET columnSpec
            {
            K_GET13=(Token)input.LT(1);
            match(input,K_GET,FOLLOW_K_GET_in_getStmt358); if (failed) return retval;
            if ( backtracking==0 ) stream_K_GET.add(K_GET13);

            pushFollow(FOLLOW_columnSpec_in_getStmt360);
            columnSpec14=columnSpec();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) stream_columnSpec.add(columnSpec14.getTree());

            // AST REWRITE
            // elements: columnSpec
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            if ( backtracking==0 ) {
            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval!=null?retval.tree:null);

            root_0 = (CommonTree)adaptor.nil();
            // 125:25: -> ^( A_GET columnSpec )
            {
                // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:125:28: ^( A_GET columnSpec )
                {
                CommonTree root_1 = (CommonTree)adaptor.nil();
                root_1 = (CommonTree)adaptor.becomeRoot(adaptor.create(A_GET, "A_GET"), root_1);

                adaptor.addChild(root_1, stream_columnSpec.next());

                adaptor.addChild(root_0, root_1);
                }

            }

            }

            }

            retval.stop = input.LT(-1);

            if ( backtracking==0 ) {
                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return retval;
    }
    // $ANTLR end getStmt

