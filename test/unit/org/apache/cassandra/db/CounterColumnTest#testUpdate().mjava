    @Test
    public void testUpdate() throws UnknownHostException
    {
        CounterColumn c = new CounterColumn(ByteBufferUtil.bytes("x"), FBUtilities.toByteBuffer(0L), 0L);
        assert 0L == c.value().getLong(c.value().arrayOffset());

        assert c.partitionedCounter().length == 0 : "badly formatted initial context";

        c.value = FBUtilities.toByteBuffer(1L);
        c.update(InetAddress.getByAddress(FBUtilities.toByteArray(1)));
        assert 1L == c.value().getLong(c.value().arrayOffset());

        assert c.partitionedCounter().length == stepLength;

        assert  1 == FBUtilities.byteArrayToInt( c.partitionedCounter(), 0*stepLength);
        assert 1L == FBUtilities.byteArrayToLong(c.partitionedCounter(), 0*stepLength + idLength);
        assert 1L == FBUtilities.byteArrayToLong(c.partitionedCounter(), 0*stepLength + idLength + clockLength);

        c.value = FBUtilities.toByteBuffer(3L);
        c.update(InetAddress.getByAddress(FBUtilities.toByteArray(2)));

        c.value = FBUtilities.toByteBuffer(2L);
        c.update(InetAddress.getByAddress(FBUtilities.toByteArray(2)));

        c.value = FBUtilities.toByteBuffer(9L);
        c.update(InetAddress.getByAddress(FBUtilities.toByteArray(2)));

        assert 15L == c.value().getLong(c.value().arrayOffset());

        assert c.partitionedCounter().length == (2 * stepLength);

        assert   2 == FBUtilities.byteArrayToInt(c.partitionedCounter(),  0*stepLength);
        assert  3L == FBUtilities.byteArrayToLong(c.partitionedCounter(), 0*stepLength + idLength);
        assert 14L == FBUtilities.byteArrayToLong(c.partitionedCounter(), 0*stepLength + idLength + clockLength);

        assert  1 == FBUtilities.byteArrayToInt(c.partitionedCounter(),  1*stepLength);
        assert 1L == FBUtilities.byteArrayToLong(c.partitionedCounter(), 1*stepLength + idLength);
        assert 1L == FBUtilities.byteArrayToLong(c.partitionedCounter(), 1*stepLength + idLength + clockLength);
    }

