    private MockMessagingSpy createPrepareSpy(Collection<InetAddressAndPort> failed,
                                              Collection<InetAddressAndPort> timeout,
                                              Function<PrepareConsistentRequest, UUID> sessionIdFunc,
                                              CountDownLatch latch)
    {
        return MockMessagingService.when(verb(Verb.PREPARE_CONSISTENT_REQ)).respond((msgOut, to) ->
        {
            try
            {
                latch.await();
            }
            catch (InterruptedException e) { }
            if (timeout.contains(to))
                return null;

            return Message.out(Verb.PREPARE_CONSISTENT_RSP,
                               new PrepareConsistentResponse(sessionIdFunc.apply((PrepareConsistentRequest) msgOut.payload), to, !failed.contains(to)));
        });
    }

