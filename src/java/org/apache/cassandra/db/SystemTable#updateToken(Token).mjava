    /*
     * This method is used to update the SystemTable on disk with the new token.
    */
    public static synchronized void updateToken(Token token) throws IOException
    {
        assert metadata_ != null;
        IPartitioner p = StorageService.getPartitioner();
        Table table = Table.open(Table.SYSTEM_TABLE);
        /* Retrieve the "LocationInfo" column family */
        QueryFilter filter = new NamesQueryFilter(LOCATION_KEY, new QueryPath(LOCATION_CF), TOKEN);
        ColumnFamily cf = table.getColumnFamilyStore(LOCATION_CF).getColumnFamily(filter);
        long oldTokenColumnTimestamp = cf.getColumn(SystemTable.TOKEN).timestamp();
        /* create the "Token" whose value is the new token. */
        IColumn tokenColumn = new Column(SystemTable.TOKEN, p.getTokenFactory().toByteArray(token), oldTokenColumnTimestamp + 1);
        /* replace the old "Token" column with this new one. */
        if (logger_.isDebugEnabled())
          logger_.debug("Replacing old token " + p.getTokenFactory().fromByteArray(cf.getColumn(SystemTable.TOKEN).value()) + " with " + token);
        RowMutation rm = new RowMutation(Table.SYSTEM_TABLE, LOCATION_KEY);
        cf.addColumn(tokenColumn);
        rm.add(cf);
        rm.apply();
        metadata_.setStorageId(token);
    }

