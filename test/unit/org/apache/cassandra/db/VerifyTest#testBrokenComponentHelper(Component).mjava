    private void testBrokenComponentHelper(Component componentToBreak) throws IOException
    {
        CompactionManager.instance.disableAutoCompaction();
        Keyspace keyspace = Keyspace.open(KEYSPACE);
        ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CORRUPT_CF2);

        fillCF(cfs, 2);

        SSTableReader sstable = cfs.getLiveSSTables().iterator().next();
        try (Verifier verifier = new Verifier(cfs, sstable, false, Verifier.options().build()))
        {
            verifier.verify(); //still not corrupt, should pass
        }
        String filenameToCorrupt = sstable.descriptor.filenameFor(componentToBreak);
        try (RandomAccessFile file = new RandomAccessFile(filenameToCorrupt, "rw"))
        {
            file.setLength(3);
        }

        try (Verifier verifier = new Verifier(cfs, sstable, false, Verifier.options().invokeDiskFailurePolicy(true).build()))
        {
            verifier.verify();
            fail("should throw exception");
        }
        catch(CorruptSSTableException e)
        {
            //expected
        }
    }

