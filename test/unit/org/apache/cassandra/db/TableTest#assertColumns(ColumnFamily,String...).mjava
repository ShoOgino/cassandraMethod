    public static void assertColumns(ColumnFamily cf, String... columnNames)
    {
        Collection<IColumn> columns = cf == null ? new TreeSet<IColumn>() : cf.getSortedColumns();
        List<String> L = new ArrayList<String>();
        for (IColumn column : columns)
        {
            L.add(new String(column.name()));
        }

        List<String> names = new ArrayList<String>(columnNames.length);

        names.addAll(Arrays.asList(columnNames));

        String[] columnNames1 = names.toArray(new String[0]);
        String[] la = L.toArray(new String[columns.size()]);
        StringBuffer lasb = new StringBuffer();
        for (String l: la)
        {
            lasb.append(l);
            lasb.append(", ");
        }

        assert Arrays.equals(la, columnNames1)
                : String.format("Columns [%s(as string: %s)])] is not expected [%s] (bitmasks %s)",
                                ((cf == null) ? "" : cf.getComparator().getColumnsString(columns)),
                                lasb.toString(),
                                StringUtils.join(columnNames1, ","),
                                SliceFromReadCommand.getBitmaskDescription(null));

    }

