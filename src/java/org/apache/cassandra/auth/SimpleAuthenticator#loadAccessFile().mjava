    /**
     * Loads the user access map for each keyspace from the deprecated access.properties file.
     */
    @Deprecated
    public Map<String,Map<String,AccessLevel>> loadAccessFile() throws ConfigurationException 
    {
        Map<String,Map<String,AccessLevel>> keyspacesAccess = new HashMap();
        final String accessFilenameProperty = "access.properties";
        String afilename = System.getProperty(accessFilenameProperty);
        Properties props = new Properties();
        try
        {
            FileInputStream in = new FileInputStream(afilename);
            props.load(in);
            in.close();
        }
        catch (Exception e)
        {
            throw new ConfigurationException("Authorization table file given by property " + accessFilenameProperty + " could not be loaded: " + e.getMessage());
        }
        for (String keyspace : props.stringPropertyNames())
        {
            // structure:
            // given keyspace X, users A B and C can be authorized like this (separate their names with spaces):
            // X = A B C
            Map<String,AccessLevel> usersAccess = new HashMap();
            for (String user : props.getProperty(keyspace).split(","))
                usersAccess.put(user, AccessLevel.FULL);
            keyspacesAccess.put(keyspace, usersAccess);
        }
        return keyspacesAccess;
    }

