    /**
     * Attempt delivery to any node for which we have hints.  Necessary since we can generate hints even for
     * nodes which are never officially down/failed.
     */
    private void scheduleAllDeliveries()
    {
        logger.debug("Started scheduleAllDeliveries");

        // Force a major compaction to get rid of the tombstones and expired hints. Do it once, before we schedule any
        // individual replay, to avoid N - 1 redundant individual compactions (when N is the number of nodes with hints
        // to deliver to).
        compact();

        ReadCommand cmd = new PartitionRangeReadCommand(hintStore.metadata,
                                                        FBUtilities.nowInSeconds(),
                                                        ColumnFilter.all(hintStore.metadata),
                                                        RowFilter.NONE,
                                                        DataLimits.cqlLimits(Integer.MAX_VALUE, 1),
                                                        DataRange.allData(hintStore.metadata.partitioner));

        try (ReadOrderGroup orderGroup = cmd.startOrderGroup(); UnfilteredPartitionIterator iter = cmd.executeLocally(orderGroup))
        {
            while (iter.hasNext())
            {
                try (UnfilteredRowIterator partition = iter.next())
                {
                    UUID hostId = UUIDGen.getUUID(partition.partitionKey().getKey());
                    InetAddress target = StorageService.instance.getTokenMetadata().getEndpointForHostId(hostId);
                    // token may have since been removed (in which case we have just read back a tombstone)
                    if (target != null)
                        scheduleHintDelivery(target, false);
                }
            }
        }

        logger.debug("Finished scheduleAllDeliveries");
    }

