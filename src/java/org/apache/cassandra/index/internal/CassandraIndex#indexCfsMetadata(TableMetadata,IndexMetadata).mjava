    /**
     * Construct the TableMetadata for an index table, the clustering columns in the index table
     * vary dependent on the kind of the indexed value.
     * @param baseCfsMetadata
     * @param indexMetadata
     * @return
     */
    public static TableMetadata indexCfsMetadata(TableMetadata baseCfsMetadata, IndexMetadata indexMetadata)
    {
        Pair<ColumnMetadata, IndexTarget.Type> target = TargetParser.parse(baseCfsMetadata, indexMetadata);
        CassandraIndexFunctions utils = getFunctions(indexMetadata, target);
        ColumnMetadata indexedColumn = target.left;
        AbstractType<?> indexedValueType = utils.getIndexedValueType(indexedColumn);

        TableMetadata.Builder builder =
            TableMetadata.builder(baseCfsMetadata.keyspace, baseCfsMetadata.indexTableName(indexMetadata), baseCfsMetadata.id)
                         .kind(TableMetadata.Kind.INDEX)
                         .partitioner(new LocalPartitioner(indexedValueType))
                         .addPartitionKeyColumn(indexedColumn.name, indexedColumn.type)
                         .addClusteringColumn("partition_key", baseCfsMetadata.partitioner.partitionOrdering());

        // Adding clustering columns, which depends on the index type.
        builder = utils.addIndexClusteringColumns(builder, baseCfsMetadata, indexedColumn);

        return builder.build().updateIndexTableMetadata(baseCfsMetadata.params);
    }

