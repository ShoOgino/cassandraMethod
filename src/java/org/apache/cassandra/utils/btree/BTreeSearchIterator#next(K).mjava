    public V next(K target)
    {
        while (depth > 0)
        {
            byte successorParentDepth = findSuccessorParentDepth();
            if (successorParentDepth < 0)
                break; // we're in last section of tree, so can only search down
            int successorParentIndex = indexes[successorParentDepth] + 1;
            Object[] successParentNode = path[successorParentDepth];
            Object successorParentKey = successParentNode[successorParentIndex];
            int c = BTree.compare(comparator, target, successorParentKey);
            if (c < 0)
                break;
            if (c == 0)
            {
                depth = successorParentDepth;
                indexes[successorParentDepth]++;
                return (V) successorParentKey;
            }
            depth = successorParentDepth;
            indexes[successorParentDepth]++;
        }
        if (find(comparator, target, Op.CEIL, true))
            return (V) currentKey();
        return null;
    }

