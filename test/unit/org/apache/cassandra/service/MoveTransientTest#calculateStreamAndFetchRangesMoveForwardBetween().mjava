    /**
     * Ring with start A 1-3 B 3-6 C 6-9 D 9-11 E 11-1
     * A's moves from 3 to 7
     *
     * @throws Exception
     */
    private Pair<RangesAtEndpoint, RangesAtEndpoint> calculateStreamAndFetchRangesMoveForwardBetween() throws Exception
    {
        Range<Token> aPrimeRange = new Range<>(sixToken, sevenToken);
        Range<Token> bPrimeRange = new Range<>(oneToken, sixToken);


        RangesAtEndpoint updated = RangesAtEndpoint.of(
            new Replica(aAddress, aPrimeRange, true),
            new Replica(aAddress, bPrimeRange, true),
            new Replica(aAddress, eRange, false)
        );

        Pair<RangesAtEndpoint, RangesAtEndpoint> result = StorageService.calculateStreamAndFetchRanges(current, updated);

        assertContentsIgnoreOrder(result.left, fullReplica(aAddress, elevenToken, oneToken), transientReplica(aAddress, nineToken, elevenToken));
        assertContentsIgnoreOrder(result.right, fullReplica(aAddress, threeToken, sixToken), fullReplica(aAddress, sixToken, sevenToken));
        return result;
    }

