        public void toCQLLiteral(ByteBuffer buffer, int version, StringBuilder target)
        {
            // Not sure whether the !buffer.hasRemaining() check is correct here or whether an empty
            // BB should be returned as "[]" resp "{}" or whether it is not valid at all.
            //
            // Currently, all empty collections return '[]' or '{}'. Except frozen collections with
            // a null BB return 'null'.
            //
            if (buffer == null || !buffer.hasRemaining())
            {
                if (buffer == null && type.isFrozenCollection())
                {
                    target.append("null");
                }
                else
                {
                    switch (type.kind)
                    {
                        case LIST:
                            target.append("[]");
                            break;
                        case SET:
                        case MAP:
                            target.append("{}");
                            break;
                    }
                }
            }
            else
            {
                int size = CollectionSerializer.readCollectionSize(buffer, version);

                switch (type.kind)
                {
                    case LIST:
                        CQL3Type elements = ((ListType) type).getElementsType().asCQL3Type();
                        target.append('[');
                        generateSetOrListCQLLiteral(buffer, version, target, size, elements);
                        target.append(']');
                        break;
                    case SET:
                        elements = ((SetType) type).getElementsType().asCQL3Type();
                        target.append('{');
                        generateSetOrListCQLLiteral(buffer, version, target, size, elements);
                        target.append('}');
                        break;
                    case MAP:
                        target.append('{');
                        generateMapCQLLiteral(buffer, version, target, size);
                        target.append('}');
                        break;
                }
            }
        }

