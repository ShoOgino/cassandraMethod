    @Test // test for CASSANDRA-9867
    public void testDropCompactStaticColumn()
    {
        ColumnDef column1 = new ColumnDef();
        column1.setName(bytes(42))
              .setValidation_class(UTF8Type.instance.toString());

        ColumnDef column2 = new ColumnDef();
        column2.setName(bytes(25))
               .setValidation_class(UTF8Type.instance.toString());

        CfDef cf = new CfDef("thriftks", "staticcompact");
        cf.setColumn_type("Standard")
          .setComparator_type(Int32Type.instance.toString())
          .setDefault_validation_class(UTF8Type.instance.toString())
          .setKey_validation_class(BytesType.instance.toString())
          .setColumn_metadata(Arrays.asList(column1, column2));

        SchemaLoader.createKeyspace("thriftks", KeyspaceParams.simple(1), ThriftConversion.fromThrift(cf));
        CFMetaData cfm = Schema.instance.getCFMetaData("thriftks", "staticcompact");

        // assert the both columns are in the metadata
        assertTrue(cfm.getColumnMetadata().containsKey(bytes(42)));
        assertTrue(cfm.getColumnMetadata().containsKey(bytes(25)));

        // remove column2
        cf.setColumn_metadata(Collections.singletonList(column1));
        MigrationManager.announceColumnFamilyUpdate(ThriftConversion.fromThriftForUpdate(cf, cfm), true);

        // assert that it's gone from metadata
        assertTrue(cfm.getColumnMetadata().containsKey(bytes(42)));
        assertFalse(cfm.getColumnMetadata().containsKey(bytes(25)));
    }

