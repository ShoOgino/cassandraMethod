    @VisibleForTesting
    long writeFileToChannel(FileChannel fc, StreamRateLimiter limiter, int batchSize) throws IOException
    {
        final long length = fc.size();
        long bytesTransferred = 0;

        try
        {
            while (bytesTransferred < length)
            {
                int toWrite = (int) min(batchSize, length - bytesTransferred);
                final long position = bytesTransferred;

                writeToChannel(bufferSupplier -> {
                    ByteBuffer outBuffer = bufferSupplier.get(toWrite);
                    long read = fc.read(outBuffer, position);
                    if (read != toWrite)
                        throw new IOException(String.format("could not read required number of bytes from " +
                                                            "file to be streamed: read %d bytes, wanted %d bytes",
                                                            read, toWrite));
                    outBuffer.flip();
                }, limiter);

                if (logger.isTraceEnabled())
                    logger.trace("Writing {} bytes at position {} of {}", toWrite, bytesTransferred, length);
                bytesTransferred += toWrite;
            }
        }
        finally
        {
            // we don't need to wait until byte buffer is flushed by netty
            fc.close();
        }

        return bytesTransferred;
    }

