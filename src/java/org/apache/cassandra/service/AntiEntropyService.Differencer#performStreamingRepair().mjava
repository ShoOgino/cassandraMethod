        /**
         * Starts sending/receiving our list of differences to/from the remote endpoint: creates a callback
         * that will be called out of band once the streams complete.
         */
        void performStreamingRepair() throws IOException
        {
            logger.info("Performing streaming repair of " + differences.size() + " ranges for " + request);
            ColumnFamilyStore cfstore = Table.open(request.cf.left).getColumnFamilyStore(request.cf.right);
            try
            {
                List<Range> ranges = new ArrayList<Range>(differences);
                Collection<SSTableReader> sstables = cfstore.getSSTables();
                Callback callback = new Callback();
                // send ranges to the remote node
                StreamOutSession outsession = StreamOutSession.create(request.cf.left, request.endpoint, callback);
                StreamOut.transferSSTables(outsession, sstables, ranges);
                // request ranges from the remote node
                StreamIn.requestRanges(request.endpoint, request.cf.left, ranges, callback);
            }
            catch(Exception e)
            {
                throw new IOException("Streaming repair failed.", e);
            }
        }

