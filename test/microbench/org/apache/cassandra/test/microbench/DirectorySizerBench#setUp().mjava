    @Setup(Level.Trial)
    public void setUp() throws IOException
    {
        tempDir = Files.createTempDirectory(randString()).toFile();

        // Since #'s on laptops and commodity desktops are so useful in considering enterprise virtualized server environments...

        // Spinning disk 7200rpm 1TB, win10, ntfs, i6600 skylake, 256 files:
        // [java] Result: 0.581 ▒(99.9%) 0.003 ms/op [Average]
        // [java]   Statistics: (min, avg, max) = (0.577, 0.581, 0.599), stdev = 0.005
        // [java]   Confidence interval (99.9%): [0.577, 0.584]

        // Same hardware, 25600 files:
        // [java] Result: 56.990 ▒(99.9%) 0.374 ms/op [Average]
        // [java]   Statistics: (min, avg, max) = (56.631, 56.990, 59.829), stdev = 0.560
        // [java]   Confidence interval (99.9%): [56.616, 57.364]

        // #'s on a rmbp, 2014, SSD, ubuntu 15.10, ext4, i7-4850HQ @ 2.3, 25600 samples
        // [java] Result: 74.714 ±(99.9%) 0.558 ms/op [Average]
        // [java]   Statistics: (min, avg, max) = (73.687, 74.714, 76.872), stdev = 0.835
        // [java]   Confidence interval (99.9%): [74.156, 75.272]

        // Throttle CPU on the Windows box to .87GHZ from 4.3GHZ turbo single-core, and #'s for 25600:
        // [java] Result: 298.628 ▒(99.9%) 14.755 ms/op [Average]
        // [java]   Statistics: (min, avg, max) = (291.245, 298.628, 412.881), stdev = 22.085
        // [java]   Confidence interval (99.9%): [283.873, 313.383]

        // Test w/25,600 files, 100x the load of a full default CommitLog (8192) divided by size (32 per)
        populateRandomFiles(tempDir, 25600);
        sizer = new DirectorySizeCalculator(tempDir);
    }

