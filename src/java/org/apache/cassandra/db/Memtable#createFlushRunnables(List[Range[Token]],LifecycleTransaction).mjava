    private List<FlushRunnable> createFlushRunnables(List<Range<Token>> localRanges, LifecycleTransaction txn)
    {
        assert cfs.getPartitioner().splitter().isPresent();

        Directories.DataDirectory[] locations = cfs.getDirectories().getWriteableLocations();
        List<PartitionPosition> boundaries = StorageService.getDiskBoundaries(localRanges, cfs.getPartitioner(), locations);
        List<FlushRunnable> runnables = new ArrayList<>(boundaries.size());
        PartitionPosition rangeStart = cfs.getPartitioner().getMinimumToken().minKeyBound();
        ReplayPosition context = lastReplayPosition.get();
        for (int i = 0; i < boundaries.size(); i++)
        {
            PartitionPosition t = boundaries.get(i);
            runnables.add(new FlushRunnable(context, rangeStart, t, locations[i], txn));
            rangeStart = t;
        }
        return runnables;
    }

