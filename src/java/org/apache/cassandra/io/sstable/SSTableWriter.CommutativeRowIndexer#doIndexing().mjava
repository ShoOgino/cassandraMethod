        @Override
        protected long doIndexing() throws IOException
        {
            EstimatedHistogram rowSizes = SSTable.defaultRowHistogram();
            EstimatedHistogram columnCounts = SSTable.defaultColumnHistogram();
            long rows = 0L;
            ByteBuffer diskKey;
            DecoratedKey key;

            long readRowPosition  = 0L;
            long writeRowPosition = 0L;

            writerDfile.seek(writeRowPosition);
            dfile.seek(readRowPosition);

            long dfileLength = dfile.length();
            while (readRowPosition < dfileLength)
            {
                // read key
                diskKey = ByteBufferUtil.readWithShortLength(dfile);

                // skip data size, bloom filter, column index
                long dataSize = SSTableReader.readRowSize(dfile, desc);
                dfile.skipBytes(dfile.readInt());
                dfile.skipBytes(dfile.readInt());

                // deserialize CF
                ColumnFamily cf = ColumnFamily.create(desc.ksname, desc.cfname);
                ColumnFamily.serializer().deserializeFromSSTableNoColumns(cf, dfile);
                // The data is coming from another host
                ColumnFamily.serializer().deserializeColumns(dfile, cf, false, true);
                rowSizes.add(dataSize);
                columnCounts.add(cf.getEstimatedColumnCount());

                readRowPosition = dfile.getFilePointer();

                // update index writer
                key = SSTableReader.decodeKey(StorageService.getPartitioner(), desc, diskKey);
                iwriter.afterAppend(key, writeRowPosition);

                // write key
                ByteBufferUtil.writeWithShortLength(diskKey, writerDfile);

                // write data size; serialize CF w/ bloom filter, column index
                long writeSizePosition = writerDfile.getFilePointer();
                writerDfile.writeLong(-1L);
                ColumnFamily.serializer().serializeWithIndexes(cf, writerDfile);
                long writeEndPosition = writerDfile.getFilePointer();
                writerDfile.seek(writeSizePosition);
                writerDfile.writeLong(writeEndPosition - (writeSizePosition + 8L));

                writeRowPosition = writeEndPosition;
                writerDfile.seek(writeRowPosition);

                rows++;
            }
            writeStatistics(desc, rowSizes, columnCounts);

            if (writeRowPosition != readRowPosition)
            {
                // truncate file to new, reduced length
                writerDfile.setLength(writeRowPosition);
            }
            writerDfile.sync();

            return rows;
        }

