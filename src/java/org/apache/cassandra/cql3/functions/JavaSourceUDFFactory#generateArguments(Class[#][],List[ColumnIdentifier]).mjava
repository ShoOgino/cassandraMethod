    private static String generateArguments(Class<?>[] paramTypes, List<ColumnIdentifier> argNames)
    {
        StringBuilder code = new StringBuilder(64 * paramTypes.length);
        for (int i = 0; i < paramTypes.length; i++)
        {
            if (i > 0)
                code.append(",\n");

            if (logger.isDebugEnabled())
                code.append("                /* parameter '").append(argNames.get(i)).append("' */\n");

            code
                // cast to Java type
                .append("                (").append(javaSourceName(paramTypes[i])).append(") ")
                // generate object representation of input parameter (call UDFunction.compose)
                .append(composeMethod(paramTypes[i])).append("(protocolVersion, ").append(i).append(", params.get(").append(i).append("))");
        }
        return code.toString();
    }

