    /**
     * Selects tokens by repeatedly splitting the largest range in the ring at the given ratio.
     * This is used to choose tokens for the first nodes in the ring where the algorithm cannot be applied (e.g. when
     * number of nodes < RF). It generates a reasonably chaotic initial token split, after which the algorithm behaves
     * well for an unbounded number of nodes.
     */

    @Override
    Collection<Token> generateSplits(Unit newUnit, int numTokens)
    {
        Collection<Token> tokens = super.generateSplits(newUnit, numTokens);
        unitToTokens.putAll(newUnit, tokens);
        TokenAllocatorDiagnostics.splitsGenerated(this, numTokens, unitToTokens, sortedTokens, newUnit, tokens);
        return tokens;
    }

