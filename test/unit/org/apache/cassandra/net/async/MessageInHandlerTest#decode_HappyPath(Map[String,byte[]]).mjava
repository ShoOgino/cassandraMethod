    private MessageInWrapper decode_HappyPath(Map<String, byte[]> parameters) throws Exception
    {
        MessageOut msgOut = new MessageOut(MessagingService.Verb.ECHO);
        for (Map.Entry<String, byte[]> param : parameters.entrySet())
            msgOut = msgOut.withParameter(param.getKey(), param.getValue());
        serialize(msgOut);

        MessageInWrapper wrapper = new MessageInWrapper();
        MessageInHandler handler = new MessageInHandler(addr.getAddress(), MSG_VERSION, wrapper.messageConsumer);
        List<Object> out = new ArrayList<>();
        handler.decode(null, buf, out);

        Assert.assertNotNull(wrapper.messageIn);
        Assert.assertEquals(MSG_ID, wrapper.id);
        Assert.assertEquals(msgOut.from, wrapper.messageIn.from);
        Assert.assertEquals(msgOut.verb, wrapper.messageIn.verb);
        Assert.assertTrue(out.isEmpty());

        return wrapper;
    }

