    public static void main(String args[]) throws IOException
    {
        // process command line args
        CliOptions cliOptions = new CliOptions();
        cliOptions.processArgs(css_, args);

        // connect to cassandra server if host argument specified.
        if (css_.hostName != null)
        {
            connect(css_.hostName, css_.thriftPort);
        }
        
        if ( cliClient_ == null )
        {
            // Connection parameter was either invalid or not present.
            // User must connect explicitly using the "connect" CLI statement.
            cliClient_ = new CliClient(css_, null);
        }

        ConsoleReader reader = new ConsoleReader();
        reader.addCompletor(completer_);
        reader.setBellEnabled(false);

        String historyFile = System.getProperty("user.home") + File.separator + HISTORYFILE;

        try
        {
            History history = new History(new File(historyFile));
            reader.setHistory(history);
        }
        catch (IOException exp)
        {
            css_.err.printf("Unable to open %s for writing%n", historyFile);
        }

        printBanner();

        String line;
        while ((line = reader.readLine("[" + cliClient_.getUsername() + "@" + cliClient_.getKeySpace() + "] ")) != null)
        {
            processCLIStmt(line);
        }
    }

