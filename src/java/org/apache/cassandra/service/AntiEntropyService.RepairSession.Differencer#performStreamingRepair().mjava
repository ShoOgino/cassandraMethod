            /**
             * Starts sending/receiving our list of differences to/from the remote endpoint: creates a callback
             * that will be called out of band once the streams complete.
             */
            void performStreamingRepair() throws IOException
            {
                logger.info("Performing streaming repair of " + differences.size() + " ranges with " + remote + " for " + range);
                ColumnFamilyStore cfstore = Table.open(tablename).getColumnFamilyStore(cfname);
                try
                {
                    // We acquire references for transferSSTables
                    Collection<SSTableReader> sstables = cfstore.markCurrentSSTablesReferenced();
                    Callback callback = new Callback();
                    // send ranges to the remote node
                    StreamOutSession outsession = StreamOutSession.create(tablename, remote, callback);
                    StreamOut.transferSSTables(outsession, sstables, differences, OperationType.AES);
                    // request ranges from the remote node
                    StreamIn.requestRanges(remote, tablename, differences, callback, OperationType.AES);
                }
                catch(Exception e)
                {
                    throw new IOException("Streaming repair failed.", e);
                }
            }

