        /**
         * Computes the RangeTombstone that are needed at the beginning of an index
         * block starting with {@code firstColumn}.
         *
         * @return the total serialized size of said tombstones and write them to
         * {@code out} it if isn't null.
         */
        public long writeOpenedMarkers(Composite startPos, DataOutputPlus out, OnDiskAtom.Serializer atomSerializer) throws IOException
        {
            long size = 0;

            for (RangeTombstone rt : openedTombstones)
            {
                if (rt instanceof ExpiredRangeTombstone || comparator.compare(rt.max, startPos) < 0)
                    continue;

                size += writeTombstone(rt, out, atomSerializer);
            }
            return size;
        }

