    /**
     * If the full replicas need to repair each other, repairs shouldn't be sent to transient replicas
     */
    @Test
    public void fullRepairsIgnoreTransientReplicas()
    {
        SinglePartitionReadCommand command = SinglePartitionReadCommand.fullPartitionRead(cfm, nowInSec, dk(5));
        EndpointsForToken targetReplicas = EndpointsForToken.of(key.getToken(), full(EP1), full(EP2), trans(EP3));
        TestableReadRepair repair = new TestableReadRepair(command);
        DataResolver resolver = new DataResolver(command, plan(targetReplicas, QUORUM), repair, 0);

        Assert.assertFalse(resolver.isDataPresent());
        resolver.preprocess(response(command, EP1, iter(update(row(1000, 5, 5)).build()), false));
        resolver.preprocess(response(command, EP2, iter(update(row(2000, 4, 4)).build()), false));
        resolver.preprocess(response(command, EP3, EmptyIterators.unfilteredPartition(cfm), false));

        Assert.assertFalse(repair.dataWasConsumed());

        consume(resolver.resolve());

        Assert.assertTrue(repair.dataWasConsumed());

        Assert.assertTrue(repair.sent.containsKey(EP1));
        Assert.assertTrue(repair.sent.containsKey(EP2));
        Assert.assertFalse(repair.sent.containsKey(EP3));
    }

