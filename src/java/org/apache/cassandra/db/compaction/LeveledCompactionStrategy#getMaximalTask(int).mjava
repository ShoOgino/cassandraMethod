    public AbstractCompactionTask getMaximalTask(int gcBefore)
    {
        while (true)
        {
            Pair<? extends Collection<SSTableReader>, Integer> pair = manifest.getCompactionCandidates();
            Collection<SSTableReader> sstables;
            OperationType op;
            int level;
            if (pair == null)
            {
                // if there is no sstable to compact in standard way, try compacting based on droppable tombstone ratio
                SSTableReader sstable = findDroppableSSTable(gcBefore);
                if (sstable == null)
                {
                    logger.debug("No compaction necessary for {}", this);
                    return null;
                }
                sstables = Collections.singleton(sstable);
                op = OperationType.TOMBSTONE_COMPACTION;
                level = sstable.getSSTableLevel();
            }
            else
            {
                op = OperationType.COMPACTION;
                sstables = pair.left;
                level = pair.right;
            }

            if (cfs.getDataTracker().markCompacting(sstables))
            {
                LeveledCompactionTask newTask = new LeveledCompactionTask(cfs, sstables, level, gcBefore, maxSSTableSizeInMB);
                newTask.setCompactionType(op);
                return newTask;
            }
        }
    }

