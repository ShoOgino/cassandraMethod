    /**
     * Get metadata about given compressed file including uncompressed data length, chunk size
     * and list of the chunk offsets of the compressed data.
     *
     * @param dataFilePath Path to the compressed file
     *
     * @return metadata about given compressed file.
     */
    public static CompressionMetadata get(String dataFilePath)
    {
        CompressionMetadata metadata = cache.get(dataFilePath);
        if (metadata != null)
            return metadata;

        // We want this to be relatively fast, because it's called often (for each
        // range query). On the side, we don't care too much if the initial
        // creation is no thread-safe, because we'll call this when the
        // SSTableReader is loaded/created, so we're pretty sure there won't
        // be any contention. Besides, if we really do create two
        // CompressionMetadata, it's not the end of the world, so we don't
        // bother with synchronization
        Descriptor desc = Descriptor.fromFilename(dataFilePath);
        try
        {
            metadata = new CompressionMetadata(desc.filenameFor(Component.COMPRESSION_INFO), new File(dataFilePath).length());
            cache.put(dataFilePath, metadata);
            return metadata;
        }
        catch (IOException e)
        {
            throw new IOError(e);
        }
    }

