    /**
     * Converts the specified type into its CQL representation.
     *
     * <p>For user function and aggregates tuples need to be handle in a special way as they are frozen by nature
     * but the frozen keyword should not appear in their CQL definition.</p>
     *
     * @param type the type
     * @return the CQL representation of the specified type
     */
    protected String toCqlString(AbstractType<?> type)
    {
        return type.isTuple() ? ((Tuple) type.asCQL3Type()).toString(false)
                              : type.asCQL3Type().toString();
    }

