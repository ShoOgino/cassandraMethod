    /**
     * Initiate all the actions required to establish a working, valid connection. This includes
     * opening the socket, negotiating the internode messaging handshake, and setting up the working
     * Netty {@link Channel}. However, this method will not block for all those actions: it will only
     * kick off the connection attempt as everything is asynchronous.
     * <p>
     * Threads compete to update the {@link #state} field to {@link State#CREATING_CHANNEL} to ensure only one
     * connection is attempted at a time.
     *
     * @return true if kicking off the connection attempt was started by this thread; else, false.
     */
    public boolean connect()
    {
        // try to be the winning thread to create the channel
        if (!state.compareAndSet(State.NOT_READY, State.CREATING_CHANNEL))
            return false;

        // clean up any lingering connection attempts
        if (connectionTimeoutFuture != null)
        {
            connectionTimeoutFuture.cancel(false);
            connectionTimeoutFuture = null;
        }

        return tryConnect();
    }

