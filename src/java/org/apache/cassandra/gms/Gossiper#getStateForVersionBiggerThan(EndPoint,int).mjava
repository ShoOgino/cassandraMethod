    synchronized EndPointState getStateForVersionBiggerThan(EndPoint forEndpoint, int version)
    {
        EndPointState epState = endPointStateMap_.get(forEndpoint);
        EndPointState reqdEndPointState = null;

        if ( epState != null )
        {
            /*
             * Here we try to include the Heart Beat state only if it is
             * greater than the version passed in. It might happen that
             * the heart beat version maybe lesser than the version passed
             * in and some application state has a version that is greater
             * than the version passed in. In this case we also send the old
             * heart beat and throw it away on the receiver if it is redundant.
            */
            int localHbVersion = epState.getHeartBeatState().getHeartBeatVersion();
            if ( localHbVersion > version )
            {
                reqdEndPointState = new EndPointState(epState.getHeartBeatState());
            }
            Map<String, ApplicationState> appStateMap = epState.getApplicationState();
            /* Accumulate all application states whose versions are greater than "version" variable */
            Set<String> keys = appStateMap.keySet();
            for ( String key : keys )
            {
                ApplicationState appState = appStateMap.get(key);
                if ( appState.getStateVersion() > version )
                {
                    if ( reqdEndPointState == null )
                    {
                        reqdEndPointState = new EndPointState(epState.getHeartBeatState());
                    }
                    reqdEndPointState.addApplicationState(key, appState);
                }
            }
        }
        return reqdEndPointState;
    }

