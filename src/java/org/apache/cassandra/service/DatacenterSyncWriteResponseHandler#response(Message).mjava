    @Override
    // synchronized for the benefit of dcResponses and responseCounts.  "responses" itself
    // is inherited from WRH and is concurrent.
    // TODO can we use concurrent structures instead?
    public synchronized void response(Message message)
    {
        try
        {
            String dataCenter = endPointSnitch.getLocation(message.getFrom());
            Object blockFor = responseCounts.get(dataCenter);
            // If this DC needs to be blocked then do the below.
            if (blockFor != null)
            {
                Integer quorumCount = dcResponses.get(dataCenter);
                if (quorumCount == null)
                {
                    // Intialize and recognize the first response
                    dcResponses.put(dataCenter, 1);
                }
                else if ((Integer) blockFor > quorumCount)
                {
                    // recognize the consequtive responses.
                    dcResponses.put(dataCenter, quorumCount + 1);
                }
                else
                {
                    // No need to wait on it anymore so remove it.
                    responseCounts.remove(dataCenter);
                }
            }
        }
        catch (UnknownHostException e)
        {
            throw new RuntimeException(e);
        }
        responses.add(message);
        // If done then the response count will be empty
        if (responseCounts.isEmpty())
        {
            condition.signal();
        }
    }

