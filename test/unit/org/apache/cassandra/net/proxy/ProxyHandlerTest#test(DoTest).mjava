    public void test(DoTest test) throws Throwable
    {
        EventLoopGroup serverGroup = new NioEventLoopGroup(1);
        EventLoopGroup clientGroup = new NioEventLoopGroup(1);

        InboundProxyHandler.Controller controller = new InboundProxyHandler.Controller();
        InboundProxyHandler proxyHandler = new InboundProxyHandler(controller);
        TestHandler testHandler = new TestHandler();

        ServerBootstrap sb = new ServerBootstrap();
        sb.group(serverGroup)
          .channel(LocalServerChannel.class)
          .childHandler(new ChannelInitializer<LocalChannel>() {
              @Override
              public void initChannel(LocalChannel ch)
              {
                  ch.pipeline()
                    .addLast(proxyHandler)
                    .addLast(testHandler);
              }
          })
          .childOption(ChannelOption.AUTO_READ, false);

        Bootstrap cb = new Bootstrap();
        cb.group(clientGroup)
          .channel(LocalChannel.class)
          .handler(new ChannelInitializer<LocalChannel>() {
              @Override
              public void initChannel(LocalChannel ch) throws Exception {
                  ch.pipeline()
                    .addLast(new LoggingHandler(LogLevel.TRACE));
              }
          });

        final LocalAddress addr = new LocalAddress("test");

        Channel serverChannel = sb.bind(addr).sync().channel();

        Channel clientChannel = cb.connect(addr).sync().channel();
        test.doTest(controller, testHandler, clientChannel);

        clientChannel.close();
        serverChannel.close();
        serverGroup.shutdownGracefully();
        clientGroup.shutdownGracefully();
    }

