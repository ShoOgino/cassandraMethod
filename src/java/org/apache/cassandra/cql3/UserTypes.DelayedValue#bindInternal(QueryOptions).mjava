        private ByteBuffer[] bindInternal(QueryOptions options) throws InvalidRequestException
        {
            if (values.size() > type.size())
            {
                throw new InvalidRequestException(String.format(
                        "UDT value contained too many fields (expected %s, got %s)", type.size(), values.size()));
            }

            ByteBuffer[] buffers = new ByteBuffer[values.size()];
            for (int i = 0; i < type.size(); i++)
            {
                buffers[i] = values.get(i).bindAndGet(options);
                // Since a frozen UDT value is always written in its entirety Cassandra can't preserve a pre-existing
                // value by 'not setting' the new value. Reject the query.
                if (!type.isMultiCell() && buffers[i] == ByteBufferUtil.UNSET_BYTE_BUFFER)
                    throw new InvalidRequestException(String.format("Invalid unset value for field '%s' of user defined type %s", type.fieldNameAsString(i), type.getNameAsString()));
            }
            return buffers;
        }

