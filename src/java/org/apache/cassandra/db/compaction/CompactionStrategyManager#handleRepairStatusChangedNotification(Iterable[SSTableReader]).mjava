    private void handleRepairStatusChangedNotification(Iterable<SSTableReader> sstables)
    {
        // we need a write lock here since we move sstables from one strategy instance to another
        writeLock.lock();
        try
        {
            for (SSTableReader sstable : sstables)
            {
                int index = getCompactionStrategyIndex(cfs, getDirectories(), sstable);
                if (sstable.isPendingRepair())
                {
                    pendingRepairs.get(index).addSSTable(sstable);
                    unrepaired.get(index).removeSSTable(sstable);
                    repaired.get(index).removeSSTable(sstable);
                }
                else if (sstable.isRepaired())
                {
                    pendingRepairs.get(index).removeSSTable(sstable);
                    unrepaired.get(index).removeSSTable(sstable);
                    repaired.get(index).addSSTable(sstable);
                }
                else
                {
                    pendingRepairs.get(index).removeSSTable(sstable);
                    repaired.get(index).removeSSTable(sstable);
                    unrepaired.get(index).addSSTable(sstable);
                }
            }
        }
        finally
        {
            writeLock.unlock();
        }
    }

