    // $ANTLR start columnOrSuperColumn
    // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cli/Cli.g:150:1: columnOrSuperColumn : StringLiteral ;
    public final columnOrSuperColumn_return columnOrSuperColumn() throws RecognitionException {
        columnOrSuperColumn_return retval = new columnOrSuperColumn_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token StringLiteral58=null;

        CommonTree StringLiteral58_tree=null;

        try {
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cli/Cli.g:150:20: ( StringLiteral )
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cli/Cli.g:150:22: StringLiteral
            {
            root_0 = (CommonTree)adaptor.nil();

            StringLiteral58=(Token)input.LT(1);
            match(input,StringLiteral,FOLLOW_StringLiteral_in_columnOrSuperColumn773); if (failed) return retval;
            if ( backtracking==0 ) {
            StringLiteral58_tree = (CommonTree)adaptor.create(StringLiteral58);
            adaptor.addChild(root_0, StringLiteral58_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( backtracking==0 ) {
                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return retval;
    }
    // $ANTLR end columnOrSuperColumn

