    @Test
    public void compareBufferSizes() throws IOException
    {
        final int currentFrameSize = getMessage().message.serializedSize(MessagingService.current_version);

        ByteBuffer buffer = ByteBuffer.allocateDirect(currentFrameSize); //bufferedOut.nioBuffer(0, bufferedOut.writableBytes());
        getMessage().message.serialize(new DataOutputBuffer(buffer), MessagingService.current_version);
        Assert.assertFalse(buffer.hasRemaining());
        Assert.assertEquals(buffer.capacity(), buffer.position());

        ByteBuf bbosOut = PooledByteBufAllocator.DEFAULT.ioBuffer(currentFrameSize, currentFrameSize);
        try
        {
            getMessage().message.serialize(new ByteBufDataOutputPlus(bbosOut), MessagingService.current_version);

            Assert.assertFalse(bbosOut.isWritable());
            Assert.assertEquals(bbosOut.capacity(), bbosOut.writerIndex());

            Assert.assertEquals(buffer.position(), bbosOut.writerIndex());
            for (int i = 0; i < currentFrameSize; i++)
            {
                Assert.assertEquals(buffer.get(i), bbosOut.getByte(i));
            }
        }
        finally
        {
            bbosOut.release();
        }
    }

