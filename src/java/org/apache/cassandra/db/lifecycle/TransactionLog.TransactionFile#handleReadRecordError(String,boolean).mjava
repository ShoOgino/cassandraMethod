        private void handleReadRecordError(String message, boolean isLast)
        {
            if (isLast)
            {
                for (Record record : records)
                {
                    if (!record.verify(parent.getFolder(), true))
                        throw new CorruptTransactionLogException(String.format("Last record of transaction %s is corrupt [%s] and at least " +
                                                                               "one previous record does not match state on disk, unexpected disk state, aborting",
                                                                               parent.getId(), message),
                                                                 this);
                }

                // if only the last record is corrupt and all other records have matching files on disk, @see verifyRecord,
                // then we simply exited whilst serializing the last record and we carry on
                logger.warn(String.format("Last record of transaction %s is corrupt or incomplete [%s], but all previous records match state on disk; continuing", parent.getId(), message));

            }
            else
            {
                throw new CorruptTransactionLogException(String.format("Non-last record of transaction %s is corrupt [%s], unexpected disk state, aborting", parent.getId(), message), this);
            }
        }

