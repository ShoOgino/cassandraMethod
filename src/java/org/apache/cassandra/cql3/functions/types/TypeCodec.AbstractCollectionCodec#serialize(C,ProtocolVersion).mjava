        @Override
        public ByteBuffer serialize(C value, ProtocolVersion protocolVersion)
        {
            if (value == null) return null;
            int i = 0;
            ByteBuffer[] bbs = new ByteBuffer[value.size()];
            for (E elt : value)
            {
                if (elt == null)
                {
                    throw new NullPointerException("Collection elements cannot be null");
                }
                ByteBuffer bb;
                try
                {
                    bb = eltCodec.serialize(elt, protocolVersion);
                }
                catch (ClassCastException e)
                {
                    throw new InvalidTypeException(
                    String.format(
                    "Invalid type for %s element, expecting %s but got %s",
                    cqlType, eltCodec.getJavaType(), elt.getClass()),
                    e);
                }
                bbs[i++] = bb;
            }
            return CodecUtils.pack(bbs, value.size(), protocolVersion);
        }

