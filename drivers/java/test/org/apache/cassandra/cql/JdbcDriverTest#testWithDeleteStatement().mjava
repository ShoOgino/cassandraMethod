    /* Method to test with Delete statement. */
    @Test
    public void testWithDeleteStatement() throws SQLException
    {
        // the pattern: 0) a deltion, 1) ensure deletion 2) ensure deletion wasn't over-eager.
        String[] statements = 
        {
//                "DELETE \"firstN\", \"lastN\" FROM Standard1 WHERE KEY=\"jsmith\"",
//                "SELECT \"firstN\", \"lastN\" FROM Standard1 WHERE KEY=\"jsmith\"",
//                "SELECT \"first\" FROM Standard1 WHERE KEY=\"jsmith\"",
                
                "DELETE 1, 3 FROM JdbcInteger WHERE KEY=\"jsmith\"",
                "SELECT 1, 3 FROM JdbcInteger WHERE KEY=\"jsmith\"", // fails.
                "SELECT 2, 4 FROM JdbcInteger WHERE KEY=\"jsmith\"",
                
                "DELETE 1L FROM JdbcLong WHERE KEY=\"jsmith\"",
                "SELECT 1L FROM JdbcLong WHERE KEY=\"jsmith\"",
                "SELECT 2L FROM JdbcLong WHERE KEY=\"jsmith\"",
                
                "DELETE \"first\" FROM JdbcAscii WHERE KEY=\"jsmith\"",
                "SELECT \"first\" FROM JdbcAscii WHERE KEY=\"jsmith\"",
                "SELECT \"last\" FROM JdbcAscii WHERE KEY=\"jsmith\"",
                
//                "DELETE \"first\" FROM JdbcBytes WHERE KEY=\"jsmith\"",
//                "SELECT \"first\" FROM JdbcBytes WHERE KEY=\"jsmith\"",
//                "SELECT \"last\" FROM JdbcBytes WHERE KEY=\"jsmith\"",
                
                "DELETE \"first\" FROM JdbcUtf8 WHERE KEY=\"jsmith\"",
                "SELECT \"first\" FROM JdbcUtf8 WHERE KEY=\"jsmith\"",
                "SELECT \"last\" FROM JdbcUtf8 WHERE KEY=\"jsmith\"",
        };
        
        for (int i = 0; i < statements.length/3; i++) 
        {
            executeNoResults(con, statements[3*i]);
            ResultSet rs = executePreparedStatementWithResults(con, statements[3*i+1]);
            assert !rs.next() : statements[3*i+1];
            rs.close();
            rs = executePreparedStatementWithResults(con, statements[3*i+2]);
            assert rs.next() : statements[3*i+2];
        }
    }

