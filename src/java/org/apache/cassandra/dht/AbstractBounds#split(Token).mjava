    /**
     * Given token T and AbstractBounds ?L,R], returns Pair(?L,T], ?T,R])
     * (where ? means that the same type of Bounds is returned -- Range or Bounds -- as the original.)
     * The original AbstractBounds must contain the token T.
     * If R==T, null is returned as the right element of the Pair.
     */

    public Pair<AbstractBounds,AbstractBounds> split(Token token)
    {
        assert contains(token);
        Range remainder = token.equals(right) ? null : new Range(token, right);
        return new Pair<AbstractBounds,AbstractBounds>(createFrom(token), remainder);
    }

