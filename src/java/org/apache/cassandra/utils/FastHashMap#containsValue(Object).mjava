    /**
     * checks for the presence of <tt>val</tt> in the values of the map.
     * 
     * @param val
     *            an <code>Object</code> value
     * @return a <code>boolean</code> value
     */
    public boolean containsValue(Object val)
    {
        Object[] set = set_;
        V[] vals = values_;

        // special case null values so that we don't have to
        // perform null checks before every call to equals()
        if (null == val)
        {
            for (int i = vals.length; i-- > 0;)
            {
                if ((set[i] != FREE && set[i] != REMOVED) && val == vals[i])
                {
                    return true;
                }
            }
        }
        else
        {
            for (int i = vals.length; i-- > 0;)
            {
                if ((set[i] != FREE && set[i] != REMOVED)
                        && (val == vals[i] || val.equals(vals[i])))
                {
                    return true;
                }
            }
        } // end of else
        return false;
    }

