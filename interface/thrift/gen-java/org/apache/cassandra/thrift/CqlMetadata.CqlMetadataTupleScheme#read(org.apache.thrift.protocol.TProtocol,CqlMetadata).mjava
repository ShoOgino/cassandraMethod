    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CqlMetadata struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TMap _map166 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
        struct.name_types = new HashMap<ByteBuffer,String>(2*_map166.size);
        for (int _i167 = 0; _i167 < _map166.size; ++_i167)
        {
          ByteBuffer _key168; // required
          String _val169; // required
          _key168 = iprot.readBinary();
          _val169 = iprot.readString();
          struct.name_types.put(_key168, _val169);
        }
      }
      struct.setName_typesIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map170 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
        struct.value_types = new HashMap<ByteBuffer,String>(2*_map170.size);
        for (int _i171 = 0; _i171 < _map170.size; ++_i171)
        {
          ByteBuffer _key172; // required
          String _val173; // required
          _key172 = iprot.readBinary();
          _val173 = iprot.readString();
          struct.value_types.put(_key172, _val173);
        }
      }
      struct.setValue_typesIsSet(true);
      struct.default_name_type = iprot.readString();
      struct.setDefault_name_typeIsSet(true);
      struct.default_value_type = iprot.readString();
      struct.setDefault_value_typeIsSet(true);
    }

