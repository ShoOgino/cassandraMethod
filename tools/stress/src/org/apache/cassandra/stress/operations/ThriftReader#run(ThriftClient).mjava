    public void run(final ThriftClient client) throws IOException
    {
        final SlicePredicate predicate = new SlicePredicate();
        if (state.settings.columns.names == null)
            predicate.setSlice_range(new SliceRange()
                    .setStart(new byte[] {})
                    .setFinish(new byte[] {})
                    .setReversed(false)
                    .setCount(state.settings.columns.maxColumnsPerKey)
            );
        else // see CASSANDRA-3064 about why this is useful
            predicate.setColumn_names(state.settings.columns.names);

        final ByteBuffer key = getKey();
        for (final ColumnParent parent : state.columnParents)
        {
            timeWithRetry(new RunOp()
            {
                @Override
                public boolean run() throws Exception
                {
                    return client.get_slice(key, parent, predicate, state.settings.command.consistencyLevel).size() != 0;
                }

                @Override
                public String key()
                {
                    return new String(key.array());
                }

                @Override
                public int keyCount()
                {
                    return 1;
                }
            });
        }
    }

