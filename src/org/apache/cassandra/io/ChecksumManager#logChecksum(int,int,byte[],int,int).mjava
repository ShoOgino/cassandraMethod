    /**
     * Log the checksum for the the specified file and chunk
     * within the file.
     * @param fileId id associated with the file
     * @param chunkId chunk within the file.
     * @param buffer for which the checksum needs to be calculated.
     * @param startoffset offset to start within the buffer
     * @param length size of the checksum buffer.
     * @throws IOException
     */
    void logChecksum(int fileId, int chunkId, byte[] buffer, int startOffset, int length)
    {
        try
        {            
            adler_.update(buffer, startOffset, length);
            long chksum = adler_.getValue();
            adler_.reset();
            /* log checksums to disk */
            raf_.writeLong(chksum);
            /* add the chksum to memory */
            long key = ChecksumManager.key(fileId, chunkId);
            chksums_.put(key, chksum);
        }
        catch ( IOException ex )
        {
            logger_.warn( LogUtil.throwableToString(ex) );
        }
    }

