    public void convict(InetAddress endpoint, double phi)
    {        
        // We want a higher confidence in the failure detection than usual because failing a repair wrongly has a high cost.
        // same logic as in RepairSession
        if (phi < 2 * DatabaseDescriptor.getPhiConvictThreshold())
            return;

        for (Map.Entry<InetAddress, Collection<Range<Token>>> value: toFetch().values())
        {
            if (value.getKey().equals(endpoint))
            {
                exceptionMessage = String.format("Node: %s died while streaming the ranges. Boostrap/rebuild Aborded.", endpoint);
                while (latch.getCount() > 0)
                    latch.countDown();
            }
        }
    }

