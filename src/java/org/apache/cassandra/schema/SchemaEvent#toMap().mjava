    public Map<String, Serializable> toMap()
    {
        HashMap<String, Serializable> ret = new HashMap<>();
        ret.put("keyspaces", this.keyspaces);
        ret.put("nonSystemKeyspaces", this.nonSystemKeyspaces);
        ret.put("userKeyspaces", this.userKeyspaces);
        ret.put("numberOfTables", this.numberOfTables);
        ret.put("version", this.version);
        ret.put("tables", this.tables);
        ret.put("indexTables", this.indexTables);
        if (ksUpdate != null) ret.put("ksMetadataUpdate", repr(ksUpdate));
        if (previous != null) ret.put("ksMetadataPrevious", repr(previous));
        if (ksDiff != null)
        {
            HashMap<String, Serializable> ks = new HashMap<>();
            ks.put("before", repr(ksDiff.before));
            ks.put("after", repr(ksDiff.after));
            ks.put("tables", repr(ksDiff.tables));
            ks.put("views", repr(ksDiff.views));
            ks.put("types", repr(ksDiff.types));
            ks.put("udas", repr(ksDiff.udas));
            ks.put("udfs", repr(ksDiff.udfs));
            ret.put("ksDiff", ks);
        }
        if (tableUpdate != null) ret.put("tableMetadataUpdate", repr(tableUpdate));
        if (tablesDiff != null) ret.put("tablesDiff", repr(tablesDiff));
        if (viewsDiff != null) ret.put("viewsDiff", repr(viewsDiff));
        if (indexesDiff != null) ret.put("indexesDiff", Lists.newArrayList(indexesDiff.entriesDiffering().keySet()));
        return ret;
    }

