    /**
     * This performs semantic comparison of Primary Keys.
     * If the partition algorithm chosen is "Random" then
     * the hash of the key is used for comparison. If it 
     * is an OPHF then the key is used.
     * 
     * @param rhs primary against which we wish to compare.
     * @return a negative integer, zero, or a positive integer as this object
     * is less than, equal to, or greater than the specified object.
     */
    public int compareTo(PrimaryKey rhs)
    {
        int value = 0;
        PartitionerType pType = StorageService.getPartitionerType();
        switch (pType)
        {
            case RANDOM:
                value = hash_.compareTo(rhs.hash_);
                break;
            
            case OPHF:
                value = key_.compareTo(rhs.key_);
                break;
                
            default:
                value = hash_.compareTo(rhs.hash_);
                break;
        }        
        return value;
    }

