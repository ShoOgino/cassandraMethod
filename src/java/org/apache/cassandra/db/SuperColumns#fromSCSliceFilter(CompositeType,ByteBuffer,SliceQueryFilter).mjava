    public static SliceQueryFilter fromSCSliceFilter(CompositeType type, ByteBuffer scName, SliceQueryFilter filter)
    {
        assert filter.slices.length == 1;
        if (scName == null)
        {
            ByteBuffer start = filter.start().remaining() == 0
                             ? filter.start()
                             : (filter.reversed ? type.builder().add(filter.start()).buildAsEndOfRange()
                                                : type.builder().add(filter.start()).build());
            ByteBuffer finish = filter.finish().remaining() == 0
                              ? filter.finish()
                              : (filter.reversed ? type.builder().add(filter.finish()).build()
                                                 : type.builder().add(filter.finish()).buildAsEndOfRange());
            return new SliceQueryFilter(start, finish, filter.reversed, filter.count, 1);
        }
        else
        {
            CompositeType.Builder builder = type.builder().add(scName);
            ByteBuffer start = filter.start().remaining() == 0
                             ? filter.reversed ? builder.buildAsEndOfRange() : builder.build()
                             : builder.copy().add(filter.start()).build();
            ByteBuffer end = filter.finish().remaining() == 0
                             ? filter.reversed ? builder.build() : builder.buildAsEndOfRange()
                             : builder.add(filter.finish()).build();
            return new SliceQueryFilter(start, end, filter.reversed, filter.count);
        }
    }

