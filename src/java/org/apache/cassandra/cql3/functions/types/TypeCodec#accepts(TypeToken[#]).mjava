    /**
     * Return {@code true} if this codec is capable of serializing the given {@code javaType}.
     *
     * <p>The implementation is <em>invariant</em> with respect to the passed argument (through the
     * usage of {@link TypeToken#equals(Object)} and <em>it's strongly recommended not to modify this
     * behavior</em>. This means that a codec will only ever return {@code true} for the
     * <em>exact</em> Java type that it has been created for.
     *
     * <p>If the argument represents a Java primitive type, its wrapper type is considered instead.
     *
     * @param javaType The Java type this codec should serialize from and deserialize to; cannot be
     *                 {@code null}.
     * @return {@code true} if the codec is capable of serializing the given {@code javaType}, and
     * {@code false} otherwise.
     * @throws NullPointerException if {@code javaType} is {@code null}.
     */
    public boolean accepts(TypeToken<?> javaType)
    {
        checkNotNull(javaType, "Parameter javaType cannot be null");
        return this.javaType.equals(javaType.wrap());
    }

