    public void delete(String columnFamilyColumn, long timestamp)
    {
        String[] values = RowMutation.getColumnAndColumnFamily(columnFamilyColumn);
        String cfName = values[0];
        if (modifications_.containsKey(cfName))
        {
            throw new IllegalArgumentException("ColumnFamily " + cfName + " is already being modified");
        }

        if (values.length == 0 || values.length > 3)
            throw new IllegalArgumentException("Column Family " + columnFamilyColumn + " in invalid format. Must be in <column family>:<column> format.");

        ColumnFamily columnFamily = modifications_.get(cfName);
        if (columnFamily == null)
            columnFamily = new ColumnFamily(cfName);
        if (values.length == 2)
        {
            if (DatabaseDescriptor.getColumnFamilyType(cfName).equals("Standard"))
            {
                columnFamily.addColumn(values[1], ArrayUtils.EMPTY_BYTE_ARRAY, timestamp, true);
            }
            else
            {
                SuperColumn sc = new SuperColumn(values[1]);
                sc.markForDeleteAt(timestamp);
                columnFamily.addColumn(sc);
            }
        }
        else if (values.length == 3)
        {
            columnFamily.addColumn(values[1] + ":" + values[2], ArrayUtils.EMPTY_BYTE_ARRAY, timestamp, true);
        }
        else
        {
            assert values.length == 1;
            columnFamily.delete(timestamp);
        }
        modifications_.put(cfName, columnFamily);
    }

