    /**
     * cleans up one particular file by removing keys that this node is not responsible for.
     * @throws IOException
     */
    /* TODO: Take care of the comments later. */
    void doCleanup(SSTableReader sstable) throws IOException
    {
        assert sstable != null;
        List<Range> myRanges;
        Map<EndPoint, List<Range>> endPointtoRangeMap = StorageService.instance().constructEndPointToRangesMap();
        myRanges = endPointtoRangeMap.get(StorageService.getLocalStorageEndPoint());
        List<SSTableReader> sstables = doFileAntiCompaction(Arrays.asList(sstable), myRanges, null);
        if (!sstables.isEmpty())
        {
            assert sstables.size() == 1;
            addSSTable(sstables.get(0));
        }
        if (logger_.isDebugEnabled())
          logger_.debug("Original file : " + sstable + " of size " + sstable.length());
        ssTables_.markCompacted(Arrays.asList(sstable));
    }

