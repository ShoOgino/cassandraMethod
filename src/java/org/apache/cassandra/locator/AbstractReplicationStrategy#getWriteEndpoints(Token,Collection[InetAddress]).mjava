    /**
     * write endpoints may be different from read endpoints, because read endpoints only need care about the
     * "natural" nodes for a token, but write endpoints also need to account for nodes that are bootstrapping
     * into the ring, and write data there too so that they stay up to date during the bootstrap process.
     * Thus, this method may return more nodes than the Replication Factor.
     *
     * Only ReplicationStrategy should care about this method (higher level users should only ask for Hinted).
     */
    public ArrayList<InetAddress> getWriteEndpoints(Token token, Collection<InetAddress> naturalEndpoints)
    {
        Map<Token, InetAddress> tokenToEndPointMap = tokenMetadata_.cloneTokenEndPointMap();
        Map<Token, InetAddress> bootstrapTokensToEndpointMap = tokenMetadata_.cloneBootstrapNodes();
        ArrayList<InetAddress> endpoints = new ArrayList<InetAddress>(naturalEndpoints);

        for (Token t : bootstrapTokensToEndpointMap.keySet())
        {
            InetAddress ep = bootstrapTokensToEndpointMap.get(t);
            tokenToEndPointMap.put(t, ep);
            try
            {
                for (Range r : getRangeMap(tokenToEndPointMap).get(ep))
                {
                    if (r.contains(token))
                    {
                        endpoints.add(ep);
                        break;
                    }
                }
            }
            finally
            {
                tokenToEndPointMap.remove(t);
            }
        }

        return endpoints;
    }

