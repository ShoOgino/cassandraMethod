    /**
     * Creates a new <code>SelectorFactories</code> instance and collect the column definitions.
     *
     * @param selectables the <code>Selectable</code>s for which the factories must be created
     * @param expectedTypes the returned types expected for each of the {@code selectables}, if there
     * is any such expectations, or {@code null} otherwise. This will be {@code null} when called on
     * the top-level selectables, but may not be for selectable nested within a function for instance
     * (as the argument selectable will be expected to be of the type expected by the function).
     * @param cfm the Column Family Definition
     * @param defs the collector parameter for the column definitions
     * @param boundNames the collector for the specification of bound markers in the selection
     * @return a new <code>SelectorFactories</code> instance
     * @throws InvalidRequestException if a problem occurs while creating the factories
     */
    public static SelectorFactories createFactoriesAndCollectColumnDefinitions(List<Selectable> selectables,
                                                                               List<AbstractType<?>> expectedTypes,
                                                                               CFMetaData cfm,
                                                                               List<ColumnDefinition> defs,
                                                                               VariableSpecifications boundNames)
                                                                               throws InvalidRequestException
    {
        return new SelectorFactories(selectables, expectedTypes, cfm, defs, boundNames);
    }

