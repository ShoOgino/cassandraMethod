    @Override
    protected void doFlush(int count) throws IOException
    {
        if (!channel.isOpen())
            throw new ClosedChannelException();

        // flush the current backing write buffer only if there's any pending data
        ByteBuffer flush = buffer;
        if (flush.position() == 0)
            return;

        flush.flip();
        int byteCount = flush.limit();
        ChannelPromise promise = beginFlush(byteCount, 0, Integer.MAX_VALUE);
        channel.writeAndFlush(GlobalBufferPoolAllocator.wrap(flush), promise);
        allocateBuffer();
    }

