    private List<SSTableReader> getCompactionCandidates(Iterable<SSTableReader> candidateSSTables)
    {
        Pair<HashMultimap<Long, SSTableReader>, Long> buckets = getBuckets(candidateSSTables, options.sstableWindowUnit, options.sstableWindowSize, options.timestampResolution);
        // Update the highest window seen, if necessary
        if(buckets.right > this.highestWindowSeen)
            this.highestWindowSeen = buckets.right;

        NewestBucket mostInteresting = newestBucket(buckets.left,
                cfs.getMinimumCompactionThreshold(),
                cfs.getMaximumCompactionThreshold(),
                options.stcsOptions,
                this.highestWindowSeen);

        this.estimatedRemainingTasks = mostInteresting.estimatedRemainingTasks;
        if (!mostInteresting.sstables.isEmpty())
            return mostInteresting.sstables;
        return null;
    }

