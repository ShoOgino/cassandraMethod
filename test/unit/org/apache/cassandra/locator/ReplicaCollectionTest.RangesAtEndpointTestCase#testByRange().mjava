        void testByRange()
        {
            // check byEndppint() and byRange().entrySet()
            Assert.assertFalse(test.byRange().containsKey(EP1));
            Assert.assertFalse(test.byRange().entrySet().contains(EP1));
            try
            {
                test.byRange().entrySet().contains(null);
                Assert.fail();
            } catch (NullPointerException | IllegalArgumentException e) {}
            try
            {
                test.byRange().containsKey(null);
                Assert.fail();
            } catch (NullPointerException | IllegalArgumentException e) {}

            for (Range<Token> r : ALL_R)
            {
                if (canonicalByRange.containsKey(r))
                {
                    Assert.assertTrue(test.byRange().containsKey(r));
                    Assert.assertEquals(canonicalByRange.get(r), ImmutableSet.of(test.byRange().get(r)));
                    for (Replica replica : canonicalByRange.get(r))
                        Assert.assertTrue(test.byRange().entrySet().contains(new AbstractMap.SimpleImmutableEntry<>(r, replica)));
                }
                else
                {
                    Assert.assertFalse(test.byRange().containsKey(r));
                    Assert.assertFalse(test.byRange().entrySet().contains(new AbstractMap.SimpleImmutableEntry<>(r, Replica.fullReplica(EP1, r))));
                }
            }
        }

