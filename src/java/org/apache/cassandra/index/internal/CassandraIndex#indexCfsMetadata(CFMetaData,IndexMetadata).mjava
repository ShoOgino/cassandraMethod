    /**
     * Construct the CFMetadata for an index table, the clustering columns in the index table
     * vary dependent on the kind of the indexed value.
     * @param baseCfsMetadata
     * @param indexMetadata
     * @return
     */
    public static final CFMetaData indexCfsMetadata(CFMetaData baseCfsMetadata, IndexMetadata indexMetadata)
    {
        CassandraIndexFunctions utils = getFunctions(baseCfsMetadata, indexMetadata);
        ColumnDefinition indexedColumn = indexMetadata.indexedColumn(baseCfsMetadata);
        AbstractType<?> indexedValueType = utils.getIndexedValueType(indexedColumn);
        CFMetaData.Builder builder = CFMetaData.Builder.create(baseCfsMetadata.ksName,
                                                               baseCfsMetadata.indexColumnFamilyName(indexMetadata))
                                                       .withId(baseCfsMetadata.cfId)
                                                       .withPartitioner(new LocalPartitioner(indexedValueType))
                                                       .addPartitionKey(indexedColumn.name, indexedColumn.type);

        builder.addClusteringColumn("partition_key", baseCfsMetadata.partitioner.partitionOrdering());
        builder = utils.addIndexClusteringColumns(builder, baseCfsMetadata, indexedColumn);
        return builder.build().reloadIndexMetadataProperties(baseCfsMetadata);
    }

