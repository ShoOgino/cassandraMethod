            public static ComponentOfSlice fromSlice(int component, Slice slice)
            {
                ClusteringBound<?> start = slice.start();
                ClusteringBound<?> end = slice.end();

                if (component >= start.size() && component >= end.size())
                    return null;

                boolean startInclusive = true, endInclusive = true;
                ByteBuffer startValue = null, endValue = null;
                if (component < start.size())
                {
                    startInclusive = start.isInclusive();
                    startValue = start.bufferAt(component);
                }
                if (component < end.size())
                {
                    endInclusive = end.isInclusive();
                    endValue = end.bufferAt(component);
                }
                return new ComponentOfSlice(startInclusive, startValue, endInclusive, endValue);
            }

