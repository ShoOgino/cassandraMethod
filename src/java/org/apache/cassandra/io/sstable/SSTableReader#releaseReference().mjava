    /**
     * Release reference to this SSTableReader.
     * If there is no one referring to this SSTable, and is marked as compacted,
     * all resources are cleaned up and files are deleted eventually.
     */
    public void releaseReference()
    {
        if (references.decrementAndGet() == 0)
        {
            FileUtils.closeQuietly(this);

            // if this SSTR instance was replaced by another with a different index summary, let the new instance
            // handle clearing the page cache and deleting the files
            if (isCompacted.get())
            {
                assert !isReplaced.get();

                /**
                 * Do the OS a favour and suggest (using fadvice call) that we
                 * don't want to see pages of this SSTable in memory anymore.
                 *
                 * NOTE: We can't use madvice in java because it requires the address of
                 * the mapping, so instead we always open a file and run fadvice(fd, 0, 0) on it
                 */
                dropPageCache();

                deletingTask.schedule();
            }
        }
        assert references.get() >= 0 : "Reference counter " +  references.get() + " for " + dfile.path;
    }

