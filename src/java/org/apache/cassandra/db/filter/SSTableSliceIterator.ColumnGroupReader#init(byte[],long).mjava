        private void init(byte[] startColumn, long position) throws IOException
        {
            file_.seek(position);
            String keyInDisk = file_.readUTF();
            assert keyInDisk.equals(key_);

            file_.readInt(); // row size
            IndexHelper.skipBloomFilter(file_);

            /* read the index */
            indexList_ = IndexHelper.deserializeIndex(SSTableReader.parseTableName(file_.getPath()), cfName_, file_);

            /* need to do two things here.
             * 1. move the file pointer to the beginning of the list of stored columns
             * 2. calculate the size of all columns */
            emptyColumnFamily = ColumnFamily.serializer().deserializeEmpty(file_);
            file_.readInt(); // column count

            columnStartPosition_ = file_.getFilePointer();

            if (startColumn.length == 0 && !isAscending_)
            {
                /* in this case, we assume that we want to scan from the largest column in descending order. */
                curRangeIndex_ = indexList_.size() - 1;
            }
            else
            {
                int index = Collections.binarySearch(indexList_, new IndexHelper.IndexInfo(startColumn, startColumn, 0, 0, comparator_));
                curRangeIndex_ = index < 0 ? -1 * (index + 1): index;
                if (curRangeIndex_ < 0)
                    curRangeIndex_ = 0;
            }
        }

