        @Override
        public void count(Column column, DeletionInfo.InOrderTester tester)
        {
            if (tester.isDeleted(column))
                return;

            if (!column.isLive(timestamp))
            {
                tombstones++;
                return;
            }

            if (toGroup == 0)
            {
                live = 1;
                return;
            }

            ByteBuffer[] current = type.split(column.name());
            assert current.length >= toGroup;

            boolean isStatic = CompositeType.isStaticName(column.name());
            if (previous == null)
            {
                // This is the first group we've seen, and it's static.  In this case we want to return a count of 1,
                // because there are no other live groups.
                previousGroupIsStatic = true;
                previous = current;
                live++;
            }
            else if (isStatic)
            {
                // Ignore statics if we've seen any other statics or any other groups
                return;
            }

            for (int i = 0; i < toGroup; i++)
            {
                if (ByteBufferUtil.compareUnsigned(previous[i], current[i]) != 0)
                {
                    // it's a new group
                    live++;
                    previous = current;
                    return;
                }
            }
        }

