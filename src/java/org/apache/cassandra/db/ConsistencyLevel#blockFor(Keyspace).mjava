    public int blockFor(Keyspace keyspace)
    {
        switch (this)
        {
            case ONE:
                return 1;
            case ANY:
                return 1;
            case TWO:
                return 2;
            case THREE:
                return 3;
            case QUORUM:
                return (keyspace.getReplicationStrategy().getReplicationFactor() / 2) + 1;
            case ALL:
                return keyspace.getReplicationStrategy().getReplicationFactor();
            case LOCAL_QUORUM:
                return localQuorumFor(keyspace, DatabaseDescriptor.getLocalDataCenter());
            case EACH_QUORUM:
                NetworkTopologyStrategy strategy = (NetworkTopologyStrategy) keyspace.getReplicationStrategy();
                int n = 0;
                for (String dc : strategy.getDatacenters())
                    n += localQuorumFor(keyspace, dc);
                return n;
            default:
                throw new UnsupportedOperationException("Invalid consistency level: " + toString());
        }
    }

