    public static boolean insertBlocking(RowMutation rm)
    {
        long startTime = System.currentTimeMillis();
        try
        {
            Message message = rm.makeRowMutationMessage();

            IResponseResolver<Boolean> writeResponseResolver = new WriteResponseResolver();
            QuorumResponseHandler<Boolean> quorumResponseHandler = new QuorumResponseHandler<Boolean>(
                    DatabaseDescriptor.getReplicationFactor(),
                    writeResponseResolver);
            EndPoint[] endpoints = StorageService.instance().getNStorageEndPoint(rm.key());
            logger.debug("insertBlocking writing to [" + StringUtils.join(endpoints, ", ") + "]");
            // TODO: throw a thrift exception if we do not have N nodes

            MessagingService.getMessagingInstance().sendRR(message, endpoints, quorumResponseHandler);
            return quorumResponseHandler.get();

            // TODO: if the result is false that means the writes to all the
            // servers failed hence we need to throw an exception or return an
            // error back to the client so that it can take appropriate action.
        }
        catch (Exception e)
        {
            throw new RuntimeException(e);
        }
        finally
        {
            if (writeOperations++ == Integer.MAX_VALUE)
            {
                writeOperations = 1;
                writeLatency = 0;
            }
            writeLatency += System.currentTimeMillis() - startTime;
        }
    }

