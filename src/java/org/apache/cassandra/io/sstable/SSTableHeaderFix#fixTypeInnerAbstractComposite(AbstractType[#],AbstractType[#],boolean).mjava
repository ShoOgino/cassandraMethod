    private AbstractType<?> fixTypeInnerAbstractComposite(AbstractType<?> typeInHeader, AbstractType<?> typeInSchema, boolean droppedColumnMode)
    {
        if (typeInHeader.getClass() != typeInSchema.getClass())
            return null;

        if (typeInHeader.getClass() == CompositeType.class)
            return fixTypeInnerComposite((CompositeType) typeInHeader, (CompositeType) typeInSchema, droppedColumnMode);

        if (typeInHeader.getClass() == DynamicCompositeType.class)
        {
            // Not sure if we should care about UDTs in DynamicCompositeType at all...
            if (!typeInHeader.isCompatibleWith(typeInSchema))
                return null;

            return typeInHeader;
        }

        throw new IllegalArgumentException("Unknown composite type class " + typeInHeader.getClass().getName());
    }

