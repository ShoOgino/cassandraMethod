    private void testPartitionKeyUsage(String type, Object v1, Object v2, Object v3, Object v4) throws Throwable
    {
        createTable("CREATE TABLE %s (k frozen<" + type + "> PRIMARY KEY, v int)");

        execute("INSERT INTO %s (k, v) VALUES (?, ?)", v1, 1);
        execute("INSERT INTO %s (k, v) VALUES (?, ?)", v2, 1);
        execute("INSERT INTO %s (k, v) VALUES (?, ?)", v3, 0);
        execute("INSERT INTO %s (k, v) VALUES (?, ?)", v4, 0);

        // overwrite with an update
        execute("UPDATE %s SET v=? WHERE k=?", 0, v1);
        execute("UPDATE %s SET v=? WHERE k=?", 0, v2);

        assertRows(execute("SELECT * FROM %s"),
                   row(v1, 0),
                   row(v2, 0),
                   row(v3, 0),
                   row(v4, 0)
        );

        assertRows(execute("SELECT k FROM %s"),
                   row(v1),
                   row(v2),
                   row(v3),
                   row(v4)
        );

        assertRows(execute("SELECT * FROM %s LIMIT 2"),
                   row(v1, 0),
                   row(v2, 0)
        );

        assertRows(execute("SELECT * FROM %s WHERE k=?", v3),
                   row(v3, 0)
        );

        assertRows(execute("SELECT * FROM %s WHERE k=?", v1),
                   row(v1, 0)
        );

        assertRows(execute("SELECT * FROM %s WHERE k IN ?", list(v3, v1)),
                   row(v1, 0),
                   row(v3, 0)
        );

        assertRows(execute("SELECT * FROM %s WHERE token(k) >= token(?)", v3),
                   row(v3, 0),
                   row(v4, 0)
        );

        assertInvalid("INSERT INTO %s (k, v) VALUES (null, 0)");

        execute("DELETE FROM %s WHERE k=?", v1);
        execute("DELETE FROM %s WHERE k=?", v3);
        assertRows(execute("SELECT * FROM %s"),
                   row(v2, 0),
                   row(v4, 0)
        );
    }

