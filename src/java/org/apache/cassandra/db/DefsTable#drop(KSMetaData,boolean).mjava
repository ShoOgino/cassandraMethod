    /** drop a keyspace. */
    public static Future drop(final KSMetaData ksm, final boolean blockOnFileDeletion)
    {
        return executor.submit(new WrappedRunnable()
        {
            protected void runMayThrow() throws Exception
            {
                if (DatabaseDescriptor.getTableDefinition(ksm.name) != ksm)
                    throw new ConfigurationException("Either keyspace doesn't exist or the name of the one you supplied doesn't match with the one being used.");
                
                // remove the table from the static instances.
                Table table = Table.clear(ksm.name);
                if (table == null)
                    throw new ConfigurationException("Table is not active. " + ksm.name);
                
                // remove all cfs from the table instance.
                for (CFMetaData cfm : ksm.cfMetaData().values())
                {
                    CFMetaData.purge(cfm);
                    table.dropCf(cfm.cfName);
                    SystemTable.markForRemoval(cfm);
                }
                                
                // update internal table.
                UUID versionId = saveKeyspaceDefs(null, ksm);
                
                // reset defs.
                DatabaseDescriptor.clearTableDefinition(ksm, versionId);
                
                CommitLog.instance().forceNewSegment();
                cleanupDeadFiles(blockOnFileDeletion);
                
            }
        });
    }

