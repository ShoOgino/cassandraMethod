      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, atomic_batch_mutate_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        {
          org.apache.thrift.protocol.TMap _map311 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
          struct.mutation_map = new HashMap<ByteBuffer,Map<String,List<Mutation>>>(2*_map311.size);
          for (int _i312 = 0; _i312 < _map311.size; ++_i312)
          {
            ByteBuffer _key313; // required
            Map<String,List<Mutation>> _val314; // required
            _key313 = iprot.readBinary();
            {
              org.apache.thrift.protocol.TMap _map315 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
              _val314 = new HashMap<String,List<Mutation>>(2*_map315.size);
              for (int _i316 = 0; _i316 < _map315.size; ++_i316)
              {
                String _key317; // required
                List<Mutation> _val318; // required
                _key317 = iprot.readString();
                {
                  org.apache.thrift.protocol.TList _list319 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
                  _val318 = new ArrayList<Mutation>(_list319.size);
                  for (int _i320 = 0; _i320 < _list319.size; ++_i320)
                  {
                    Mutation _elem321; // required
                    _elem321 = new Mutation();
                    _elem321.read(iprot);
                    _val318.add(_elem321);
                  }
                }
                _val314.put(_key317, _val318);
              }
            }
            struct.mutation_map.put(_key313, _val314);
          }
        }
        struct.setMutation_mapIsSet(true);
        struct.consistency_level = ConsistencyLevel.findByValue(iprot.readI32());
        struct.setConsistency_levelIsSet(true);
      }

