    /**
     * Split out files for all tables on disk locally for each range and then stream them to the target endpoint.
    */
    public static void transferRanges(InetAddress target, String tableName, Collection<Range> ranges, Runnable callback)
    {
        assert ranges.size() > 0;
        
        StreamContext context = new StreamContext(target);
        // this is so that this target shows up as a destination while anticompaction is happening.
        StreamOutManager.get(context);

        logger.info("Beginning transfer process to {} for ranges {}", context, StringUtils.join(ranges, ", "));

        try
        {
            Table table = flushSSTable(tableName);
            // send the matching portion of every sstable in the keyspace
            transferSSTables(context, tableName, table.getAllSSTables(), ranges);
        }
        catch (IOException e)
        {
            throw new IOError(e);
        }
        finally
        {
            StreamOutManager.remove(context);
        }
        if (callback != null)
            callback.run();
    }

