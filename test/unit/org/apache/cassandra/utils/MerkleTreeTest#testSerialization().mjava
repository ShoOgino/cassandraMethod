    @Test
    public void testSerialization() throws Exception
    {
        Range<Token> full = new Range<>(tok(-1), tok(-1));

        // populate and validate the tree
        mt.maxsize(256);
        mt.init();
        for (TreeRange range : mt.rangeIterator())
            range.addAll(new HIterator(range.right));

        byte[] initialhash = mt.hash(full);

        DataOutputBuffer out = new DataOutputBuffer();
        mt.serialize(out, MessagingService.current_version);
        byte[] serialized = out.toByteArray();

        MerkleTree restoredOnHeap =
            MerkleTree.deserialize(new DataInputBuffer(serialized), false, MessagingService.current_version);
        MerkleTree restoredOffHeap =
            MerkleTree.deserialize(new DataInputBuffer(serialized), true, MessagingService.current_version);
        MerkleTree movedOffHeap = mt.moveOffHeap();

        assertHashEquals(initialhash, restoredOnHeap.hash(full));
        assertHashEquals(initialhash, restoredOffHeap.hash(full));
        assertHashEquals(initialhash, movedOffHeap.hash(full));

        assertEquals(mt, restoredOnHeap);
        assertEquals(mt, restoredOffHeap);
        assertEquals(mt, movedOffHeap);

        assertEquals(restoredOnHeap, restoredOffHeap);
        assertEquals(restoredOnHeap, movedOffHeap);

        assertEquals(restoredOffHeap, movedOffHeap);
    }

