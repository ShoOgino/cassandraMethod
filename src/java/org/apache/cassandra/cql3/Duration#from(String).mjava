    /**
     * Converts a <code>String</code> into a duration.
     * <p>The accepted formats are:
     * <ul>
     * <li>multiple digits followed by a time unit like: 12h30m where the time unit can be:
     *   <ul>
     *      <li>{@code y}: years</li>
     *      <li>{@code m}: months</li>
     *      <li>{@code w}: weeks</li>
     *      <li>{@code d}: days</li>
     *      <li>{@code h}: hours</li>
     *      <li>{@code m}: minutes</li>
     *      <li>{@code s}: seconds</li>
     *      <li>{@code ms}: milliseconds</li>
     *      <li>{@code us} or {@code Âµs}: microseconds</li>
     *      <li>{@code ns}: nanoseconds</li>
     *   </ul>
     * </li>
     * <li>ISO 8601 format:  P[n]Y[n]M[n]DT[n]H[n]M[n]S or P[n]W</li>
     * <li>ISO 8601 alternative format: P[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss]</li>
     * </ul>
     *
     * @param input the <code>String</code> to convert
     * @return a number of nanoseconds
     */
    public static Duration from(String input)
    {
        boolean isNegative = input.startsWith("-");
        String source = isNegative ? input.substring(1) : input;

        if (source.startsWith("P"))
        {
            if (source.endsWith("W"))
                return parseIso8601WeekFormat(isNegative, source);

            if (source.contains("-"))
                return parseIso8601AlternativeFormat(isNegative, source);

            return parseIso8601Format(isNegative, source);
        }
        return parseStandardFormat(isNegative, source);
    }

