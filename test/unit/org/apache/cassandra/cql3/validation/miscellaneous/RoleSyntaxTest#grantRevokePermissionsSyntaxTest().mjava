    @Test
    public void grantRevokePermissionsSyntaxTest() throws Throwable
    {
        // grant/revoke on RoleResource
        assertValidSyntax("GRANT ALTER ON ROLE r1 TO r2");
        assertValidSyntax("GRANT ALTER ON ROLE 'r1' TO \"r2\"");
        assertValidSyntax("GRANT ALTER ON ROLE \"r1\" TO 'r2'");
        assertValidSyntax("GRANT ALTER ON ROLE $$r1$$ TO $$ r '2' $$");
        assertValidSyntax("REVOKE ALTER ON ROLE r1 FROM r2");
        assertValidSyntax("REVOKE ALTER ON ROLE 'r1' FROM \"r2\"");
        assertValidSyntax("REVOKE ALTER ON ROLE \"r1\" FROM 'r2'");
        assertValidSyntax("REVOKE ALTER ON ROLE $$r1$$ FROM $$ r '2' $$");

        // grant/revoke on DataResource
        assertValidSyntax("GRANT SELECT ON KEYSPACE ks TO r1");
        assertValidSyntax("GRANT SELECT ON KEYSPACE ks TO 'r1'");
        assertValidSyntax("GRANT SELECT ON KEYSPACE ks TO \"r1\"");
        assertValidSyntax("GRANT SELECT ON KEYSPACE ks TO $$ r '1' $$");
        assertValidSyntax("REVOKE SELECT ON KEYSPACE ks FROM r1");
        assertValidSyntax("REVOKE SELECT ON KEYSPACE ks FROM 'r1'");
        assertValidSyntax("REVOKE SELECT ON KEYSPACE ks FROM \"r1\"");
        assertValidSyntax("REVOKE SELECT ON KEYSPACE ks FROM $$ r '1' $$");
    }

