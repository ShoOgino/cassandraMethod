    @Test
    public void test()
    {
        int size = 4;

        BoundedStatsDeque bsd = new BoundedStatsDeque(size);
        //check the values for an empty result
        assertEquals(0, bsd.size());
        assertEquals(0, bsd.sum(), 0.001d);
        assertEquals(0, bsd.mean(), 0.001d);

        bsd.add(1L); //this one falls out, over limit
        bsd.add(2L);
        bsd.add(3L);
        bsd.add(4L);
        bsd.add(5L);

        //verify that everything is in there
        Iterator<Long> iter = bsd.iterator();
        assertTrue(iter.hasNext());
        assertEquals(2L, iter.next(), 0);
        assertTrue(iter.hasNext());
        assertEquals(3L, iter.next(), 0);
        assertTrue(iter.hasNext());
        assertEquals(4L, iter.next(), 0);
        assertTrue(iter.hasNext());
        assertEquals(5L, iter.next(), 0);
        assertFalse(iter.hasNext());

        //check results
        assertEquals(size, bsd.size());
        assertEquals(14, bsd.sum(), 0.001d);
        assertEquals(3.5, bsd.mean(), 0.001d);
    }

