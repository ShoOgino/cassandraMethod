        private void readTimeRange(String key, DataOutputBuffer bufOut, String columnFamilyName, IndexHelper.TimeRange timeRange)
                throws IOException
        {
            int dataSize = file_.readInt();

            /* write the key into buffer */
            bufOut.writeUTF(key);

            int bytesSkipped = IndexHelper.skipBloomFilter(file_);
            /*
             * read the correct number of bytes for the column family and
             * write data into buffer. Subtract from dataSize the bloom
             * filter size.
            */
            dataSize -= bytesSkipped;
            List<IndexHelper.ColumnIndexInfo> columnIndexList = new ArrayList<IndexHelper.ColumnIndexInfo>();
            /* Read the times indexes if present */
            int totalBytesRead = handleColumnTimeIndexes(columnFamilyName, columnIndexList);
            dataSize -= totalBytesRead;

            /* read the column family name */
            String cfName = file_.readUTF();
            dataSize -= (utfPrefix_ + cfName.length());

            String cfType = file_.readUTF();
            dataSize -= (utfPrefix_ + cfType.length());

            int indexType = file_.readInt();
            dataSize -= 4;

            /* read local deletion time */
            int localDeletionTime = file_.readInt();
            dataSize -=4;

            /* read if this cf is marked for delete */
            long markedForDeleteAt = file_.readLong();
            dataSize -= 8;

            /* read the total number of columns */
            int totalNumCols = file_.readInt();
            dataSize -= 4;

            /* get the column range we have to read */
            IndexHelper.ColumnRange columnRange = IndexHelper.getColumnRangeFromTimeIndex(timeRange, columnIndexList, dataSize, totalNumCols);

            Coordinate coordinate = columnRange.coordinate();
            /* seek to the correct offset to the data, and calculate the data size */
            file_.skipBytes((int) coordinate.start_);
            dataSize = (int) (coordinate.end_ - coordinate.start_);

            // returned data size
            bufOut.writeInt(dataSize + utfPrefix_ * 2 + cfName.length() + cfType.length() + 4 + 4 + 8 + 4);
            // echo back the CF data we read
            bufOut.writeUTF(cfName);
            bufOut.writeUTF(cfType);
            bufOut.writeInt(indexType);
            bufOut.writeInt(localDeletionTime);
            bufOut.writeLong(markedForDeleteAt);
            /* write number of columns */
            bufOut.writeInt(columnRange.count());
            /* now write the columns */
            bufOut.write(file_, dataSize);
        }

