    @Test
    public void testRemoveUnfinishedLeftovers_abort() throws Throwable
    {
        ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE);
        SSTableReader sstableOld = sstable(cfs, 0, 128);
        SSTableReader sstableNew = sstable(cfs, 1, 128);

        // simulate tracking sstables with a failed transaction (new log file NOT deleted)
        TransactionLog transactionLog = new TransactionLog(OperationType.COMPACTION, cfs.metadata);
        assertNotNull(transactionLog);

        transactionLog.trackNew(sstableNew);
        TransactionLog.SSTableTidier tidier = transactionLog.obsoleted(sstableOld);

        Set<File> tmpFiles = Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths().stream().map(File::new).collect(Collectors.toList()),
                                                              Collections.singleton(transactionLog.getData().getLogFile().file)));

        sstableNew.selfRef().release();
        sstableOld.selfRef().release();

        Assert.assertEquals(tmpFiles, TransactionLog.getTemporaryFiles(cfs.metadata, sstableNew.descriptor.directory));

        // normally called at startup
        TransactionLog.removeUnfinishedLeftovers(cfs.metadata);

        // sstableOld should be only table left
        Directories directories = new Directories(cfs.metadata);
        Map<Descriptor, Set<Component>> sstables = directories.sstableLister(Directories.OnTxnErr.THROW).list();
        assertEquals(1, sstables.size());

        assertFiles(transactionLog.getDataFolder(), new HashSet<>(sstableOld.getAllFilePaths()));

        tidier.run();

        // complete the transaction to avoid LEAK errors
        transactionLog.close();
    }

