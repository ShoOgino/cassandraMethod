    private static Map<ByteBuffer, List<Column>> groupSuperColumns(ColumnFamily scf)
    {
        CompositeType type = (CompositeType)scf.getComparator();
        // The order of insertion matters!
        Map<ByteBuffer, List<Column>> scMap = new LinkedHashMap<ByteBuffer, List<Column>>();

        ByteBuffer scName = null;
        List<Column> subColumns = null;
        for (Column column : scf)
        {
            ByteBuffer newScName = scName(column.name());
            ByteBuffer newSubName = subName(column.name());

            if (scName == null || type.types.get(0).compare(scName, newScName) != 0)
            {
                // new super column
                scName = newScName;
                subColumns = new ArrayList<Column>();
                scMap.put(scName, subColumns);
            }

            subColumns.add(((Column)column).withUpdatedName(newSubName));
        }
        return scMap;
    }

