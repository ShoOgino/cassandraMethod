    @Test
    public void bootstrapTest() throws Throwable
    {
        int originalNodeCount = 2;
        int expandedNodeCount = originalNodeCount + 1;
        Cluster.Builder<IInvokableInstance, Cluster> builder = Cluster.build(originalNodeCount)
                                                                      .withTokenSupplier(Cluster.evenlyDistributedTokens(expandedNodeCount))
                                                                      .withNodeIdTopology(NetworkTopology.singleDcNetworkTopology(originalNodeCount, "dc0", "rack0"))
                                                                      .withConfig(config -> config.with(NETWORK, GOSSIP));

        Map<Integer, Long> withBootstrap = null;
        Map<Integer, Long> naturally = null;

        try (Cluster cluster = builder.start())
        {
            populate(cluster);

            InstanceConfig config = builder.withNodeIdTopology(NetworkTopology.singleDcNetworkTopology(expandedNodeCount, "dc0", "rack0"))
                                           .newInstanceConfig(cluster);
            config.set("auto_bootstrap", true);

            IInstance newInstance = cluster.bootstrap(config);
            newInstance.startup();

            cluster.stream().forEach(instance -> {
                instance.nodetool("cleanup", KEYSPACE, "tbl");
            });

            withBootstrap = count(cluster);
        }

        builder = Cluster.build(expandedNodeCount)
                         .withTokenSupplier(Cluster.evenlyDistributedTokens(expandedNodeCount))
                         .withConfig(config -> config.with(NETWORK, GOSSIP));

        try (Cluster cluster = builder.start())
        {
            populate(cluster);
            naturally = count(cluster);
        }

        Assert.assertEquals(withBootstrap, naturally);
    }

