        @Override
        public RangeTombstoneMarker applyToMarker(RangeTombstoneMarker marker)
        {
            if (null == openMarkerDeletionTime)
            {
                 // there is no open RT in the stream - we are expecting a *_START_BOUND
                if (marker.isClose(isReverseOrder))
                    throw ise("unexpected end bound or boundary " + marker.toString(metadata));
            }
            else
            {
                // there is an open RT in the stream - we are expecting a *_BOUNDARY or an *_END_BOUND
                if (!marker.isClose(isReverseOrder))
                    throw ise("start bound followed by another start bound " + marker.toString(metadata));

                // deletion times of open/close markers must match
                DeletionTime deletionTime = marker.closeDeletionTime(isReverseOrder);
                if (!deletionTime.equals(openMarkerDeletionTime))
                    throw ise("open marker and close marker have different deletion times");

                openMarkerDeletionTime = null;
            }

            if (marker.isOpen(isReverseOrder))
                openMarkerDeletionTime = marker.openDeletionTime(isReverseOrder);

            return marker;
        }

