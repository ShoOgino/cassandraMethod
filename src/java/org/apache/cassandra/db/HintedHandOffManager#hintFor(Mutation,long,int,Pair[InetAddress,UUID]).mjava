    /**
     * Returns a mutation representing a Hint to be sent to <code>targetId</code>
     * as soon as it becomes available again.
     */
    public Mutation hintFor(Mutation mutation, long now, int ttl, Pair<InetAddress, UUID> target)
    {
        assert ttl > 0;

        InetAddress endpoint = target.left;
        UUID targetId = target.right;

        metrics.incrCreatedHints(endpoint);

        UUID hintId = UUIDGen.getTimeUUID();
        // serialize the hint with id and version as a composite column name
        CellName name = SystemKeyspace.Hints.comparator.makeCellName(hintId, MessagingService.current_version);
        ByteBuffer value = ByteBuffer.wrap(FBUtilities.serialize(mutation, Mutation.serializer, MessagingService.current_version));
        ColumnFamily cf = ArrayBackedSortedColumns.factory.create(Schema.instance.getCFMetaData(SystemKeyspace.NAME, SystemKeyspace.HINTS));
        cf.addColumn(name, value, now, ttl);
        return new Mutation(SystemKeyspace.NAME, UUIDType.instance.decompose(targetId), cf);
    }

