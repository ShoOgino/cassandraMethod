    /**
     * When building an index against existing data in sstables, add the given partition to the index
     */
    public void indexPartition(DecoratedKey key, Set<Index> indexes, int pageSize)
    {
        if (logger.isTraceEnabled())
            logger.trace("Indexing partition {}", baseCfs.metadata.getKeyValidator().getString(key.getKey()));

        if (!indexes.isEmpty())
        {
            SinglePartitionReadCommand cmd = SinglePartitionReadCommand.fullPartitionRead(baseCfs.metadata,
                                                                                          FBUtilities.nowInSeconds(),
                                                                                          key);
            int nowInSec = cmd.nowInSec();
            boolean readStatic = false;

            SinglePartitionPager pager = new SinglePartitionPager(cmd, null, ProtocolVersion.CURRENT);
            while (!pager.isExhausted())
            {
                try (ReadExecutionController controller = cmd.executionController();
                     OpOrder.Group writeGroup = Keyspace.writeOrder.start();
                     RowIterator partition =
                        PartitionIterators.getOnlyElement(pager.fetchPageInternal(pageSize, controller),
                                                          cmd))
                {
                    Set<Index.Indexer> indexers = indexes.stream()
                                                         .map(index -> index.indexerFor(key,
                                                                                        partition.columns(),
                                                                                        nowInSec,
                                                                                        writeGroup,
                                                                                        IndexTransaction.Type.UPDATE))
                                                         .filter(Objects::nonNull)
                                                         .collect(Collectors.toSet());

                    indexers.forEach(Index.Indexer::begin);

                    // only process the static row once per partition
                    if (!readStatic && !partition.staticRow().isEmpty())
                    {
                        indexers.forEach(indexer -> indexer.insertRow(partition.staticRow()));
                        readStatic = true;
                    }

                    while (partition.hasNext())
                    {
                        Row row = partition.next();
                        indexers.forEach(indexer -> indexer.insertRow(row));
                    }

                    indexers.forEach(Index.Indexer::finish);
                }
            }
        }
    }

