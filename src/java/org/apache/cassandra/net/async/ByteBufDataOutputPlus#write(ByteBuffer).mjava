    /**
     * {@inheritDoc} - "write the buffer without modifying its position"
     *
     * Unfortunately, netty's {@link ByteBuf#writeBytes(ByteBuffer)} modifies the byteBuffer's position,
     * and that is unsafe in our world wrt multithreading. Hence we need to be careful: reference the backing array
     * on heap ByteBuffers, and use a reusable "hollow" ByteBuffer ({@link #hollowBuffer}) for direct ByteBuffers.
     */
    @Override
    public void write(ByteBuffer byteBuffer) throws IOException
    {
        if (byteBuffer.hasArray())
        {
            write(byteBuffer.array(), byteBuffer.arrayOffset() + byteBuffer.position(), byteBuffer.remaining());
        }
        else
        {
            assert byteBuffer.isDirect();
            MemoryUtil.duplicateDirectByteBuffer(byteBuffer, hollowBuffer);
            buffer.writeBytes(hollowBuffer);
        }
    }

