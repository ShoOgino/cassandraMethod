    // remove the count for a given node id
    public ByteBuffer cleanNodeCounts(ByteBuffer context, InetAddress node)
    {
        // calculate node id
        ByteBuffer nodeId = ByteBuffer.wrap(node.getAddress());

        // look for this node id
        for (int offset = 0; offset < context.remaining(); offset += stepLength)
        {
            int cmp = ByteBufferUtil.compareSubArrays(context, context.position() + offset, nodeId, 0, idLength);
            if (cmp < 0)
                continue;
            else if (cmp == 0)
            {
                // node id found: remove node count
                ByteBuffer truncatedContext = ByteBuffer.allocate(context.remaining() - stepLength);
                ByteBufferUtil.arrayCopy(context, context.position(), truncatedContext, 0, offset);
                ByteBufferUtil.arrayCopy(
                        context,
                        context.position() + offset + stepLength,
                        truncatedContext,
                        offset,
                        context.remaining() - (offset + stepLength));
                return truncatedContext;
            }
            else // cmp > 0
            {
                break; // node id not present
            }
        }

        return context;
    }

