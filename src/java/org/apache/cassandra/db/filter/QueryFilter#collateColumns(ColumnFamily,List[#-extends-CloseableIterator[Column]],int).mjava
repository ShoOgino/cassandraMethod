    public void collateColumns(final ColumnFamily returnCF, List<? extends CloseableIterator<Column>> toCollate, final int gcBefore)
    {
        Comparator<Column> fcomp = filter.getColumnComparator(returnCF.getComparator());
        // define a 'reduced' iterator that merges columns w/ the same name, which
        // greatly simplifies computing liveColumns in the presence of tombstones.
        MergeIterator.Reducer<Column, Column> reducer = new MergeIterator.Reducer<Column, Column>()
        {
            ColumnFamily curCF = returnCF.cloneMeShallow();

            public void reduce(Column current)
            {
                curCF.addColumn(current);
            }

            protected Column getReduced()
            {
                Column c = curCF.iterator().next();
                curCF.clear();
                return c;
            }
        };
        Iterator<Column> reduced = MergeIterator.get(toCollate, fcomp, reducer);

        filter.collectReducedColumns(returnCF, reduced, gcBefore);
    }

