    // null type means just call param.toString() and quote it (default for keys).
    private static String applySimpleBindings(String q, AbstractType type, ParameterIterator params) throws SQLException
    {
        assert type != null;
        // we need to keep track of whether or not we are between quotes and ignore any question marks within them
        // so that they are not substituted.  
        StringBuffer sb = new StringBuffer();
        boolean between = false;
        for (char c : q.toCharArray())
        {
            if (c == '\'')
                between = !between;
            if (between)
                sb.append(c);
            else if (c == '?') // !between if we got here.
            {
                try
                {
                    // perform substitution!
                    Object param = params.nextParam();
                    String stringParam = type == null ? param.toString() : type.toString(param);
                    stringParam = makeCqlString(stringParam);
                    if (type == null || type.needsQuotes())
                        stringParam = "'" + stringParam + "'";
                    sb.append(stringParam);
                }
                catch (ClassCastException ex)
                {
                    throw new SQLException("Mismatched types: " + ex.getLocalizedMessage());
                }
            }
            else
                sb.append(c);
                
        }
        return sb.toString();
    }

