    @Test
    public void trackMatchingRepairedDigestsWithDifferentData()
    {
        // As far as repaired data tracking is concerned, the actual data in the response is not relevant
        EndpointsForRange replicas = makeReplicas(2);
        ByteBuffer digest1 = ByteBufferUtil.bytes("digest1");
        InetAddressAndPort peer1 = replicas.get(0).endpoint();
        InetAddressAndPort peer2 = replicas.get(1).endpoint();
        TestRepairedDataVerifier verifier = new TestRepairedDataVerifier();
        verifier.expectDigest(peer1, digest1, true);
        verifier.expectDigest(peer2, digest1, true);

        DataResolver resolver = resolverWithVerifier(command, plan(replicas, ConsistencyLevel.ALL), readRepair, System.nanoTime(),  verifier);

        resolver.preprocess(response(peer1, iter(new RowUpdateBuilder(cfm, nowInSec, 1L, dk).clustering("1") .buildUpdate()), digest1, true, command));
        resolver.preprocess(response(peer2, iter(PartitionUpdate.emptyUpdate(cfm, dk)), digest1, true, command));

        resolveAndConsume(resolver);
        assertTrue(verifier.verified);
    }

