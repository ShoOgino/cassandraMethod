    /**
     * Creates a {@code Slices} object that contains a single slice.
     *
     * @param comparator the comparator for the table {@code slice} is a slice of.
     * @param slice the single slice that the return object should contains.
     *
     * @return the newly created {@code Slices} object.
     */
    public static Slices with(ClusteringComparator comparator, Slice slice)
    {
        if (slice.start().isBottom() && slice.end().isTop())
            return Slices.ALL;

        Preconditions.checkArgument(!slice.isEmpty(comparator));
        return new ArrayBackedSlices(comparator, new Slice[]{ slice });
    }

