    // $ANTLR start keyExactMatch
    // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:177:1: keyExactMatch : columnOrSuperColumnName '=' stringVal -> ^( A_KEY_EXACT_MATCH columnOrSuperColumnName stringVal ) ;
    public final keyExactMatch_return keyExactMatch() throws RecognitionException {
        keyExactMatch_return retval = new keyExactMatch_return();
        retval.start = input.LT(1);

        CommonTree root_0 = null;

        Token char_literal56=null;
        columnOrSuperColumnName_return columnOrSuperColumnName55 = null;

        stringVal_return stringVal57 = null;


        CommonTree char_literal56_tree=null;
        RewriteRuleTokenStream stream_47=new RewriteRuleTokenStream(adaptor,"token 47");
        RewriteRuleSubtreeStream stream_columnOrSuperColumnName=new RewriteRuleSubtreeStream(adaptor,"rule columnOrSuperColumnName");
        RewriteRuleSubtreeStream stream_stringVal=new RewriteRuleSubtreeStream(adaptor,"rule stringVal");
        try {
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:178:5: ( columnOrSuperColumnName '=' stringVal -> ^( A_KEY_EXACT_MATCH columnOrSuperColumnName stringVal ) )
            // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:178:7: columnOrSuperColumnName '=' stringVal
            {
            pushFollow(FOLLOW_columnOrSuperColumnName_in_keyExactMatch740);
            columnOrSuperColumnName55=columnOrSuperColumnName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) stream_columnOrSuperColumnName.add(columnOrSuperColumnName55.getTree());
            char_literal56=(Token)input.LT(1);
            match(input,47,FOLLOW_47_in_keyExactMatch742); if (failed) return retval;
            if ( backtracking==0 ) stream_47.add(char_literal56);

            pushFollow(FOLLOW_stringVal_in_keyExactMatch744);
            stringVal57=stringVal();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) stream_stringVal.add(stringVal57.getTree());

            // AST REWRITE
            // elements: stringVal, columnOrSuperColumnName
            // token labels: 
            // rule labels: retval
            // token list labels: 
            // rule list labels: 
            if ( backtracking==0 ) {
            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval!=null?retval.tree:null);

            root_0 = (CommonTree)adaptor.nil();
            // 179:6: -> ^( A_KEY_EXACT_MATCH columnOrSuperColumnName stringVal )
            {
                // /home/kannan/fbomb/trunk/fbcode/cassandra/src/com/facebook/infrastructure/cql/compiler/parse/Cql.g:179:9: ^( A_KEY_EXACT_MATCH columnOrSuperColumnName stringVal )
                {
                CommonTree root_1 = (CommonTree)adaptor.nil();
                root_1 = (CommonTree)adaptor.becomeRoot(adaptor.create(A_KEY_EXACT_MATCH, "A_KEY_EXACT_MATCH"), root_1);

                adaptor.addChild(root_1, stream_columnOrSuperColumnName.next());
                adaptor.addChild(root_1, stream_stringVal.next());

                adaptor.addChild(root_0, root_1);
                }

            }

            }

            }

            retval.stop = input.LT(-1);

            if ( backtracking==0 ) {
                retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
                adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return retval;
    }
    // $ANTLR end keyExactMatch

