        private void doCheck(FailCheck testAndFailCheck)
        {
            if (checkReceived)
            {
                testAndFailCheck.accept("received count values don't match", received, connection.receivedCount());
                testAndFailCheck.accept("received bytes values don't match", receivedBytes, connection.receivedBytes());
            }
            if (checkProcessed)
            {
                testAndFailCheck.accept("processed count values don't match", processed, connection.processedCount());
                testAndFailCheck.accept("processed bytes values don't match", processedBytes, connection.processedBytes());
            }
            if (checkExpired)
            {
                testAndFailCheck.accept("expired count values don't match", expired, connection.expiredCount());
                testAndFailCheck.accept("expired bytes values don't match", expiredBytes, connection.expiredBytes());
            }
            if (checkError)
            {
                testAndFailCheck.accept("error count values don't match", error, connection.errorCount());
                testAndFailCheck.accept("error bytes values don't match", errorBytes, connection.errorBytes());
            }
            if (checkScheduled)
            {
                // scheduled cannot relied upon to not race with completion of the task,
                // so if it is currently above the value we expect, sleep for a bit
                if (scheduled < connection.scheduledCount())
                    for (int i = 0; i < 10 && scheduled < connection.scheduledCount() ; ++i)
                        Uninterruptibles.sleepUninterruptibly(1L, TimeUnit.MILLISECONDS);
                testAndFailCheck.accept("scheduled count values don't match", scheduled, connection.scheduledCount());
                testAndFailCheck.accept("scheduled bytes values don't match", scheduledBytes, connection.scheduledBytes());
            }
        }

