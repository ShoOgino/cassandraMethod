        protected AbstractCompactedRow getReduced()
        {
            assert rows.size() > 0;

            try
            {
                AbstractCompactedRow compactedRow = controller.getCompactedRow(new ArrayList<SSTableIdentityIterator>(rows));
                if (compactedRow.isEmpty())
                {
                    controller.invalidateCachedRow(compactedRow.key);
                    return null;
                }
                else
                {
                    // If the raw is cached, we call removeDeleted on it to have/ coherent query returns. However it would look
                    // like some deleted columns lived longer than gc_grace + compaction. This can also free up big amount of
                    // memory on long running instances
                    controller.removeDeletedInCache(compactedRow.key);
                }

                return compactedRow;
            }
            finally
            {
                rows.clear();
                if ((row++ % 1000) == 0)
                {
                    long n = 0;
                    for (SSTableScanner scanner : scanners)
                        n += scanner.getFilePointer();
                    bytesRead = n;
                    throttle.throttle(bytesRead);
                }
            }
        }

