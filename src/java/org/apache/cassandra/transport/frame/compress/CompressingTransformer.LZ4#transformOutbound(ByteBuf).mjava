        public ByteBuf transformOutbound(ByteBuf inputBuf) throws IOException
        {
            byte[] input = CBUtil.readRawBytes(inputBuf);
            int maxCompressedLength = LZ4Compressor.INSTANCE.maxCompressedLength(input.length);
            ByteBuf outputBuf = CBUtil.allocator.heapBuffer(Integer.BYTES + maxCompressedLength);
            byte[] output = outputBuf.array();
            int outputOffset = outputBuf.arrayOffset();
            output[outputOffset]     = (byte) (input.length >>> 24);
            output[outputOffset + 1] = (byte) (input.length >>> 16);
            output[outputOffset + 2] = (byte) (input.length >>>  8);
            output[outputOffset + 3] = (byte) (input.length);
            try
            {
                int written = LZ4Compressor.INSTANCE.compress(input, 0, input.length, output, Integer.BYTES + outputOffset);
                outputBuf.writerIndex(Integer.BYTES + written);
                return outputBuf;
            }
            catch (IOException e)
            {
                outputBuf.release();
                throw e;
            }
        }

