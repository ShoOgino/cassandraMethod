    @Test
    public void testConcurrentAdjacentLeavingNodes()
    {
        TokenMetadata tm = new TokenMetadata();
        AbstractReplicationStrategy strategy = simpleStrategy(tm, 2);

        Token token1 = token(-9);
        Token token2 = token(-4);
        Token token3 = token(0);
        Token token4 = token(4);

        InetAddressAndPort node1 = peer(1);
        InetAddressAndPort node2 = peer(2);
        InetAddressAndPort node3 = peer(3);
        InetAddressAndPort node4 = peer(4);

        addNode(tm, node1, token1);
        addNode(tm, node2, token2);
        addNode(tm, node3, token3);
        addNode(tm, node4, token4);

        tm.addLeavingEndpoint(node2);
        tm.addLeavingEndpoint(node3);

        tm.calculatePendingRanges(strategy, KEYSPACE);
        assertRangesAtEndpoint(RangesAtEndpoint.of(new Replica(node1, new Range<>(token1, token3), true)),
                               tm.getPendingRanges(KEYSPACE, node1));
        assertRangesAtEndpoint(RangesAtEndpoint.empty(node2), tm.getPendingRanges(KEYSPACE, node2));
        assertRangesAtEndpoint(RangesAtEndpoint.empty(node3), tm.getPendingRanges(KEYSPACE, node3));
        assertRangesAtEndpoint(RangesAtEndpoint.of(new Replica(node4, new Range<>(token4, token1), true),
                                                   new Replica(node4, new Range<>(token1, token2), true)),
                               tm.getPendingRanges(KEYSPACE, node4));
    }

