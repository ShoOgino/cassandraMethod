    /**
     * Sets the value for (all occurrences of) variable {@code name} to the provided set.
     *
     * <p>This method uses the {@link CodecRegistry} to find a codec to handle the conversion to the
     * underlying CQL type (the type of the elements in the Java set is not considered). If two or
     * more codecs target that CQL type, the one that was first registered will be used. For this
     * reason, it is generally preferable to use the more deterministic methods {@link #setSet(String,
     * Set, Class)} or {@link #setSet(String, Set, TypeToken)}.
     *
     * @param name the name of the value to set; if {@code name} is present multiple times, all its
     *             values are set.
     * @param v    the value to set. Note that {@code null} values inside collections are not supported
     *             by CQL.
     * @return this object.
     * @throws IllegalArgumentException if {@code name} is not a valid name for this object.
     * @throws NullPointerException     if {@code v} contains null values. Nulls are not supported in
     *                                  collections by CQL.
     * @throws CodecNotFoundException   if there is no registered codec to convert the value to the
     *                                  underlying CQL type.
     */
    public <E> T setSet(String name, Set<E> v);

