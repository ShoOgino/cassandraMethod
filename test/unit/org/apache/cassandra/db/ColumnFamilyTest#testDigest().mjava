    @Test
    public void testDigest()
    {
        ColumnFamily cf = ArrayBackedSortedColumns.factory.create(KEYSPACE1, CF_STANDARD1);
        ColumnFamily cf2 = ArrayBackedSortedColumns.factory.create(KEYSPACE1, CF_STANDARD1);

        ByteBuffer digest = ColumnFamily.digest(cf);

        cf.addColumn(column("col1", "", 1));
        cf2.addColumn(column("col1", "", 1));

        assert !digest.equals(ColumnFamily.digest(cf));

        digest = ColumnFamily.digest(cf);
        assert digest.equals(ColumnFamily.digest(cf2));

        cf.addColumn(column("col2", "", 2));
        assert !digest.equals(ColumnFamily.digest(cf));

        digest = ColumnFamily.digest(cf);
        cf.addColumn(column("col1", "", 3));
        assert !digest.equals(ColumnFamily.digest(cf));

        digest = ColumnFamily.digest(cf);
        cf.delete(new DeletionTime(4, 4));
        assert !digest.equals(ColumnFamily.digest(cf));

        digest = ColumnFamily.digest(cf);
        cf.delete(tombstone("col1", "col11", 5, 5));
        assert !digest.equals(ColumnFamily.digest(cf));

        digest = ColumnFamily.digest(cf);
        assert digest.equals(ColumnFamily.digest(cf));

        cf.delete(tombstone("col2", "col21", 5, 5));
        assert !digest.equals(ColumnFamily.digest(cf));

        digest = ColumnFamily.digest(cf);
        cf.delete(tombstone("col1", "col11", 5, 5)); // this does not change RangeTombstoneLList
        assert digest.equals(ColumnFamily.digest(cf));
    }

