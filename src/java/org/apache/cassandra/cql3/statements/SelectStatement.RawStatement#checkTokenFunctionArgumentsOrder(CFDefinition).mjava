        /**
         * Checks that the column identifiers used as argument for the token function have been specified in the
         * partition key order.
         * @param cfDef the Column Family Definition
         * @throws InvalidRequestException if the arguments have not been provided in the proper order.
         */
        private void checkTokenFunctionArgumentsOrder(CFDefinition cfDef) throws InvalidRequestException
        {
            Iterator<Name> iter = Iterators.cycle(cfDef.partitionKeys());
            for (Relation relation : whereClause)
            {
                if (!relation.isOnToken())
                    continue;

                assert !relation.isMultiColumn() : "Unexpectedly got multi-column token relation";
                SingleColumnRelation singleColumnRelation = (SingleColumnRelation) relation;
                if (!cfDef.get(singleColumnRelation.getEntity().prepare(cfDef.cfm)).equals(iter.next()))
                    throw new InvalidRequestException(String.format("The token function arguments must be in the partition key order: %s",
                                                                    Joiner.on(',').join(cfDef.partitionKeys())));
            }
        }

