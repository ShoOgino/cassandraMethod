    @Override
    public boolean remove(Object o)
    {
        if (null == o)
            throw new NullPointerException();

        Node<E> prev = this.head;
        Node<E> next = prev.next;

        while (null != next)
        {
            if (o.equals(next.item))
            {
                prev.lazySetNext(next.next); // update prev reference to next before making removed node unreachable,
                next.lazySetNext(next);      // to maintain the guarantee of tail being always reachable from head

                next.item = null;
                return true;
            }

            prev = next;
            next = next.next;
        }

        return false;
    }

