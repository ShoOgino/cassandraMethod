    /*
     * Here we handle the StreamInitiateMessage. Here we get the
     * array of StreamContexts. We get file names for the column
     * families associated with the files and replace them with the
     * file names as obtained from the column family store on the
     * receiving end.
    */
    public void doVerb(Message message)
    {
        byte[] body = message.getMessageBody();
        ByteArrayInputStream bufIn = new ByteArrayInputStream(body);
        if (logger.isDebugEnabled())
            logger.debug(String.format("StreamInitiateVerbeHandler.doVerb %s %s %s", message.getVerb(), message.getMessageId(), message.getMessageType()));

        try
        {
            StreamInitiateMessage biMsg = StreamInitiateMessage.serializer().deserialize(new DataInputStream(bufIn));
            InitiatedFile[] initiatedFiles = biMsg.getStreamContext();

            if (initiatedFiles.length == 0)
            {
                if (logger.isDebugEnabled())
                    logger.debug("no data needed from " + message.getFrom());
                if (StorageService.instance.isBootstrapMode())
                    StorageService.instance.removeBootstrapSource(message.getFrom(), new String(message.getHeader(StreamOut.TABLE_NAME)));
                return;
            }

            Map<String, String> fileNames = getNewNames(initiatedFiles);
            Map<String, String> pathNames = new HashMap<String, String>();
            for (String ssName : fileNames.keySet())
                pathNames.put(ssName, DatabaseDescriptor.getNextAvailableDataLocation());
            /*
             * For each of stream context's in the incoming message
             * generate the new file names and store the new file names
             * in the StreamContextManager.
            */
            for (InitiatedFile initiatedFile : initiatedFiles)
            {
                StreamInManager.StreamStatus streamStatus = new StreamInManager.StreamStatus(initiatedFile.getTargetFile(), initiatedFile.getExpectedBytes() );
                String file = getNewFileNameFromOldContextAndNames(fileNames, pathNames, initiatedFile);

                if (logger.isDebugEnabled())
                  logger.debug("Received Data from  : " + message.getFrom() + " " + initiatedFile.getTargetFile() + " " + file);
                initiatedFile.setTargetFile(file);
                addStreamContext(message.getFrom(), initiatedFile, streamStatus);
            }

            StreamInManager.registerStreamCompletionHandler(message.getFrom(), new StreamCompletionHandler());
            if (logger.isDebugEnabled())
              logger.debug("Sending a stream initiate done message ...");
            Message doneMessage = new Message(FBUtilities.getLocalAddress(), "", StorageService.Verb.STREAM_INITIATE_DONE, new byte[0] );
            MessagingService.instance.sendOneWay(doneMessage, message.getFrom());
        }
        catch (IOException ex)
        {
            throw new IOError(ex);
        }
    }

