    @Test
    public void testIsEOF() throws IOException
    {
        for (int bufferSize : Arrays.asList(1, 2, 3, 5, 8, 64))  // smaller, equal, bigger buffer sizes
        {
            final byte[] target = new byte[32];

            // single too-large read
            for (final int offset : Arrays.asList(0, 8))
            {
                File file1 = writeTemporaryFile(new byte[16]);
                try (final ChannelProxy channel = new ChannelProxy(file1);
                     final RandomAccessReader file = RandomAccessReader.builder(channel)
                                                     .bufferSize(bufferSize)
                                                     .build())
                {
                    expectEOF(() -> { file.readFully(target, offset, 17); return null; });
                }
            }

            // first read is ok but eventually EOFs
            for (final int n : Arrays.asList(1, 2, 4, 8))
            {
                File file1 = writeTemporaryFile(new byte[16]);
                try (final ChannelProxy channel = new ChannelProxy(file1);
                     final RandomAccessReader file = RandomAccessReader.builder(channel).bufferSize(bufferSize).build())
                {
                    expectEOF(() -> {
                        while (true)
                            file.readFully(target, 0, n);
                    });
                }
            }
        }
    }

