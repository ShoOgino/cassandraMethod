        public void doPrepare()
        {
            assert chunkCount == count;

            // finalize the size of memory used if it won't now change;
            // unnecessary if already correct size
            if (offsets.size() != count * 8L)
            {
                SafeMemory tmp = offsets;
                offsets = offsets.copy(count * 8L);
                tmp.free();
            }

            // flush the data to disk
            DataOutputStream out = null;
            try
            {
                out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(filePath)));
                writeHeader(out, dataLength, count);
                for (int i = 0 ; i < count ; i++)
                    out.writeLong(offsets.getLong(i * 8L));
            }
            catch (IOException e)
            {
                throw Throwables.propagate(e);
            }
            finally
            {
                FileUtils.closeQuietly(out);
            }
        }

