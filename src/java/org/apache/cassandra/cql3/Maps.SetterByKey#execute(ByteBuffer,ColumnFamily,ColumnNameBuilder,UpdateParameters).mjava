        public void execute(ByteBuffer rowKey, ColumnFamily cf, ColumnNameBuilder prefix, UpdateParameters params) throws InvalidRequestException
        {
            Term.Terminal key = k.bind(params.variables);
            Term.Terminal value = t.bind(params.variables);
            if (key == null)
                throw new InvalidRequestException("Invalid null map key");
            assert key instanceof Constants.Value;
            assert value == null || value instanceof Constants.Value;

            ByteBuffer cellName = prefix.add(columnName.key).add(((Constants.Value)key).bytes).build();

            if (value == null)
            {
                cf.addColumn(params.makeTombstone(cellName));
            }
            else
            {
                ByteBuffer bytes = ((Constants.Value)value).bytes;
                // We don't support value > 64K because the serialization format encode the length as an unsigned short.
                if (bytes.remaining() > FBUtilities.MAX_UNSIGNED_SHORT)
                    throw new InvalidRequestException(String.format("Map value is too long. Map values are limited to %d bytes but %d bytes value provided",
                                                                    FBUtilities.MAX_UNSIGNED_SHORT,
                                                                    bytes.remaining()));

                cf.addColumn(params.makeColumn(cellName, bytes));
            }
        }

