    void shutdown()
    {
        runOnInstance(() -> {
            Throwable error = null;
            error = runAndMergeThrowable(error,
                    BatchlogManager.instance::shutdown,
                    HintsService.instance::shutdownBlocking,
                    CommitLog.instance::shutdownBlocking,
                    CompactionManager.instance::forceShutdown,
                    Gossiper.instance::stop,
                    SecondaryIndexManager::shutdownExecutors,
                    MessagingService.instance()::shutdown,
                    ColumnFamilyStore::shutdownFlushExecutor,
                    ColumnFamilyStore::shutdownPostFlushExecutor,
                    ColumnFamilyStore::shutdownReclaimExecutor,
                    ColumnFamilyStore::shutdownPerDiskFlushExecutors,
                    PendingRangeCalculatorService.instance::shutdownExecutor,
                    BufferPool::shutdownLocalCleaner,
                    Ref::shutdownReferenceReaper,
                    StageManager::shutdownAndWait,
                    SharedExecutorPool.SHARED::shutdown,
                    Memtable.MEMORY_POOL::shutdown,
                    ScheduledExecutors::shutdownAndWait);
            error = shutdownAndWait(error, ActiveRepairService.repairCommandExecutor);
            Throwables.maybeFail(error);
        });
    }

