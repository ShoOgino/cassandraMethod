    @Test
    public void testInitCache()
    {
        // Test that a validity of <= 0 will turn off caching
        DatabaseDescriptor.setCredentialsValidity(0);
        AuthCache<String, String> authCache = new AuthCache<>("TestCache2",
                                                              DatabaseDescriptor::setCredentialsValidity,
                                                              DatabaseDescriptor::getCredentialsValidity,
                                                              DatabaseDescriptor::setCredentialsUpdateInterval,
                                                              DatabaseDescriptor::getCredentialsUpdateInterval,
                                                              DatabaseDescriptor::setCredentialsCacheMaxEntries,
                                                              DatabaseDescriptor::getCredentialsCacheMaxEntries,
                                                              this::load,
                                                              () -> true);
        assertNull(authCache.cache);
        authCache.setValidity(2000);
        authCache.cache = authCache.initCache(null);
        assertNotNull(authCache.cache);

        // Test enableCache works as intended
        authCache = new AuthCache<>("TestCache3",
                                    DatabaseDescriptor::setCredentialsValidity,
                                    DatabaseDescriptor::getCredentialsValidity,
                                    DatabaseDescriptor::setCredentialsUpdateInterval,
                                    DatabaseDescriptor::getCredentialsUpdateInterval,
                                    DatabaseDescriptor::setCredentialsCacheMaxEntries,
                                    DatabaseDescriptor::getCredentialsCacheMaxEntries,
                                    this::load,
                                    () -> isCacheEnabled);
        assertNull(authCache.cache);
        isCacheEnabled = true;
        authCache.cache = authCache.initCache(null);
        assertNotNull(authCache.cache);

        // Ensure at a minimum these policies have been initialised by default
        assertTrue(authCache.cache.policy().expireAfterWrite().isPresent());
        assertTrue(authCache.cache.policy().refreshAfterWrite().isPresent());
        assertTrue(authCache.cache.policy().eviction().isPresent());
    }

