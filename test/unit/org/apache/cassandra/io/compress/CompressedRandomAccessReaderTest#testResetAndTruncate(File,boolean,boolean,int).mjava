    private static void testResetAndTruncate(File f, boolean compressed, boolean usemmap, int junkSize) throws IOException
    {
        final String filename = f.getAbsolutePath();
        try(ChannelProxy channel = new ChannelProxy(f))
        {
            writeSSTable(f, compressed ? CompressionParams.snappy() : null, junkSize);

            CompressionMetadata compressionMetadata = compressed ? new CompressionMetadata(filename + ".metadata", f.length(), ChecksumType.CRC32) : null;
            RandomAccessReader.Builder builder = compressed
                                                 ? new CompressedRandomAccessReader.Builder(channel, compressionMetadata)
                                                 : new RandomAccessReader.Builder(channel);

            if (usemmap)
            {
                if (compressed)
                    builder.regions(MmappedRegions.map(channel, compressionMetadata));
                else
                    builder.regions(MmappedRegions.map(channel, f.length()));
            }

            try(RandomAccessReader reader = builder.build())
            {
                String expected = "The quick brown fox jumps over the lazy dog";
                assertEquals(expected.length(), reader.length());
                byte[] b = new byte[expected.length()];
                reader.readFully(b);
                assert new String(b).equals(expected) : "Expecting '" + expected + "', got '" + new String(b) + '\'';
            }

            if (usemmap)
                builder.regions.close();
        }
        finally
        {
            if (f.exists())
                assertTrue(f.delete());
            File metadata = new File(filename + ".metadata");
            if (compressed && metadata.exists())
                metadata.delete();
        }
    }

